[{"D:\\Web\\digiClass\\client\\src\\index.js":"1","D:\\Web\\digiClass\\client\\src\\App.js":"2","D:\\Web\\digiClass\\client\\src\\reducer\\index.js":"3","D:\\Web\\digiClass\\client\\src\\reducer\\user.js":"4","D:\\Web\\digiClass\\client\\src\\pages\\home.js":"5","D:\\Web\\digiClass\\client\\src\\pages\\registration.js":"6","D:\\Web\\digiClass\\client\\src\\components\\registrationForm\\admin.js":"7","D:\\Web\\digiClass\\client\\src\\constants\\index.js":"8","D:\\Web\\digiClass\\client\\src\\components\\registrationForm\\student.js":"9","D:\\Web\\digiClass\\client\\src\\components\\registrationForm\\teacher.js":"10","D:\\Web\\digiClass\\client\\src\\actions\\index.js":"11","D:\\Web\\digiClass\\client\\src\\api\\index.js":"12","D:\\Web\\digiClass\\client\\src\\pages\\class.js":"13","D:\\Web\\digiClass\\client\\src\\components\\classStatusCards\\AssignmentCard.js":"14","D:\\Web\\digiClass\\client\\src\\components\\classStatusCards\\LectureCard.js":"15","D:\\Web\\digiClass\\client\\src\\components\\classStatusCards\\PracticeCard.js":"16","D:\\Web\\digiClass\\client\\src\\components\\classStatusCards\\ChatCard.js":"17","D:\\Web\\digiClass\\client\\src\\components\\classFrames\\assignment.js":"18","D:\\Web\\digiClass\\client\\src\\components\\classFrames\\card\\card.js":"19","D:\\Web\\digiClass\\client\\src\\components\\classFrames\\lecture.js":"20","D:\\Web\\digiClass\\client\\src\\components\\classFrames\\practice.js":"21","D:\\Web\\digiClass\\client\\src\\pages\\cardPage.js":"22","D:\\Web\\digiClass\\client\\src\\components\\classPageCards\\ClassRoom.js":"23"},{"size":604,"mtime":1612332665938,"results":"24","hashOfConfig":"25"},{"size":701,"mtime":1616041048915,"results":"26","hashOfConfig":"25"},{"size":117,"mtime":1612333013523,"results":"27","hashOfConfig":"25"},{"size":223,"mtime":1612782685326,"results":"28","hashOfConfig":"25"},{"size":114,"mtime":1612334480318,"results":"29","hashOfConfig":"25"},{"size":2108,"mtime":1613647863613,"results":"30","hashOfConfig":"25"},{"size":11225,"mtime":1613042691858,"results":"31","hashOfConfig":"25"},{"size":932,"mtime":1612960262777,"results":"32","hashOfConfig":"25"},{"size":8497,"mtime":1612862835088,"results":"33","hashOfConfig":"25"},{"size":8661,"mtime":1612863015363,"results":"34","hashOfConfig":"25"},{"size":582,"mtime":1612862976605,"results":"35","hashOfConfig":"25"},{"size":136,"mtime":1612856601255,"results":"36","hashOfConfig":"25"},{"size":6892,"mtime":1616048494138,"results":"37","hashOfConfig":"25"},{"size":1539,"mtime":1615709467802,"results":"38","hashOfConfig":"25"},{"size":1732,"mtime":1615714868934,"results":"39","hashOfConfig":"25"},{"size":1582,"mtime":1615709448400,"results":"40","hashOfConfig":"25"},{"size":1829,"mtime":1615709504461,"results":"41","hashOfConfig":"25"},{"size":412,"mtime":1615718069926,"results":"42","hashOfConfig":"25"},{"size":489,"mtime":1615720726697,"results":"43","hashOfConfig":"25"},{"size":406,"mtime":1615719155104,"results":"44","hashOfConfig":"25"},{"size":408,"mtime":1615719387319,"results":"45","hashOfConfig":"25"},{"size":1197,"mtime":1616074692000,"results":"46","hashOfConfig":"25"},{"size":4782,"mtime":1616130515293,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},"szblh4",{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"51"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"51"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"51"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"51"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"51"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"51"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"51"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"51"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"51"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"51"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"51"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},"D:\\Web\\digiClass\\client\\src\\index.js",["109","110"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport $ from \"jquery\";\r\nimport Popper from \"popper.js\";\r\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reducers from \"./reducer\";\r\nimport thunk from \"redux-thunk\";\r\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n\r\n  document.getElementById(\"root\")\r\n);\r\n",["111","112"],"D:\\Web\\digiClass\\client\\src\\App.js",["113"],"import React from \"react\";\r\nimport { BrowserRouter, Link, Route } from \"react-router-dom\";\r\nimport Register from \"./pages/registration\";\r\nimport home from \"./pages/home\";\r\nimport Class from \"./pages/class\";\r\nimport CardPage from \"./pages/cardPage\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <div style={{ height: \"100%\", width: \"100%\" }}>\r\n        <main>\r\n          <Route path=\"/\" component={home} exact />\r\n          <Route path=\"/register\" component={Register} exact />\r\n          <Route path=\"/class\" component={Class} exact />\r\n          <Route path=\"/page\" component={CardPage} exact />\r\n        </main>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","D:\\Web\\digiClass\\client\\src\\reducer\\index.js",[],"D:\\Web\\digiClass\\client\\src\\reducer\\user.js",["114"],"import { ADD_STUDENT } from \"./../constants\";\r\n\r\nexport default (user = [], action) => {\r\n  switch (action.type) {\r\n    case ADD_STUDENT:\r\n      return [...user, action.payload];\r\n    default:\r\n      return user;\r\n  }\r\n};\r\n","D:\\Web\\digiClass\\client\\src\\pages\\home.js",["115"],"import React, { useState } from \"react\";\r\n\r\nexport default function home() {\r\n  return <h1>Hallow World</h1>;\r\n}\r\n","D:\\Web\\digiClass\\client\\src\\pages\\registration.js",[],"D:\\Web\\digiClass\\client\\src\\components\\registrationForm\\admin.js",["116"],"import React from \"react\";\r\nimport { Button, TextField, Menu, MenuItem } from \"@material-ui/core\";\r\nimport {\r\n  COLLEGE,\r\n  PRIMARY_SCHOOL,\r\n  SECONDARY_SCHOOL,\r\n  UNIVERSITY,\r\n  YEAR,\r\n  SEMESTER,\r\n  CLASS,\r\n  BRANCH,\r\n  SECTION,\r\n  DIRECTOR,\r\n  PRINCIPLE,\r\n  ADMIN,\r\n} from \"./../../constants\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport FileBase from \"react-file-base64\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n  textField: {},\r\n}));\r\n\r\nexport default function AdminForm() {\r\n  const [userData, setUserData] = React.useState({\r\n    name: \"name\",\r\n    instituteName: \"abc School\",\r\n    description: \"\",\r\n    instituteType: SECONDARY_SCHOOL,\r\n    choiceYear: CLASS,\r\n    yearQuantity: 3,\r\n    image: \"\",\r\n    choiceBranch: SECTION,\r\n    branchQuantity: 1,\r\n    designation: PRINCIPLE,\r\n    profileLink: \"\",\r\n    rank: ADMIN,\r\n  });\r\n\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [anchorElYear, setAnchorElYear] = React.useState(null);\r\n  const [anchorElBranch, setAnchorElBranch] = React.useState(null);\r\n\r\n  const handleMenuItemClick = (event, type) => {\r\n    setUserData({ ...userData, instituteType: type });\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuItemYearClick = (event, type) => {\r\n    setUserData({ ...userData, choiceYear: type });\r\n    setAnchorElYear(null);\r\n  };\r\n\r\n  const handleMenuItemBranchClick = (event, type) => {\r\n    setUserData({ ...userData, choiceBranch: type });\r\n    setAnchorElBranch(null);\r\n  };\r\n\r\n  const toggleDesignation = () => {\r\n    if (userData.designation === PRINCIPLE)\r\n      setUserData({ ...userData, designation: DIRECTOR });\r\n    else setUserData({ ...userData, designation: PRINCIPLE });\r\n  };\r\n\r\n  function handleSubmit() {}\r\n  return (\r\n    <div style={{ width: \"70%\", paddingBottom: \"100px\" }}>\r\n      <form noValidate onSubmit={handleSubmit}>\r\n        <div className=\"row\" style={{ paddingBottom: \"60px\" }}>\r\n          <div\r\n            style={{\r\n              width: \"15%\",\r\n              alignContent: \"center\",\r\n              justifyContent: \"left\",\r\n              display: \"flex\",\r\n              paddingTop: \"14px\",\r\n            }}\r\n          >\r\n            <Button\r\n              onClick={() => toggleDesignation()}\r\n              style={{ fontSize: \"18px\" }}\r\n            >\r\n              <u>{userData.designation}</u>\r\n            </Button>\r\n          </div>\r\n          <div style={{ width: \"83%\" }}>\r\n            <TextField\r\n              variant=\"standard\"\r\n              name=\"name\"\r\n              fullWidth\r\n              label=\"Full Name\"\r\n              value={userData.name}\r\n              onChange={(e) => {\r\n                setUserData({ ...userData, name: e.target.value });\r\n              }}\r\n              helperText=\"At least four characters.\"\r\n              error={userData.name.trim().length > 3 ? false : true}\r\n              style={{ marginTop: \"8px\" }}\r\n              className={classes.textField}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div style={{ paddingBottom: \"60px\" }}>\r\n          <TextField\r\n            variant=\"standard\"\r\n            name=\"profileLink\"\r\n            fullWidth\r\n            label=\"Profile Link(Optional)\"\r\n            value={userData.profileLink}\r\n            onChange={(e) => {\r\n              setUserData({ ...userData, profileLink: e.target.value });\r\n            }}\r\n            style={{ marginTop: \"8px\" }}\r\n          />\r\n        </div>\r\n        <div style={{ paddingBottom: \"60px\" }}>\r\n          <TextField\r\n            variant=\"standard\"\r\n            name=\"description\"\r\n            fullWidth\r\n            label=\"Description(Optional)\"\r\n            value={userData.description}\r\n            onChange={(e) => {\r\n              setUserData({ ...userData, description: e.target.value });\r\n            }}\r\n            style={{ marginTop: \"8px\" }}\r\n            multiline\r\n            rows={4}\r\n          />\r\n        </div>\r\n        <TextField\r\n          variant=\"standard\"\r\n          name=\"instituteName\"\r\n          fullWidth\r\n          label=\"Institute Name\"\r\n          value={userData.instituteName}\r\n          onChange={(e) => {\r\n            setUserData({ ...userData, instituteName: e.target.value });\r\n          }}\r\n          helperText=\"At least five characters.\"\r\n          error={userData.instituteName.trim().length > 5 ? false : true}\r\n          style={{ marginTop: \"8px\" }}\r\n        />\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"left\",\r\n            alignItems: \"center\",\r\n            marginTop: \"60px\",\r\n          }}\r\n          className=\"row\"\r\n        >\r\n          <div\r\n            style={{\r\n              fontWeight: \"600\",\r\n              verticalAlign: \"middle\",\r\n              paddingLeft: \"10px\",\r\n            }}\r\n          >\r\n            Institute Type:\r\n          </div>\r\n          <Button\r\n            aria-controls=\"simple-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={(event) => setAnchorEl(event.currentTarget)}\r\n          >\r\n            <u>{userData.instituteType.replace(\"_\", \" \")}</u>\r\n          </Button>\r\n          <Menu\r\n            id=\"simple-menu\"\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={Boolean(anchorEl)}\r\n            onClose={(event) => setAnchorEl(null)}\r\n          >\r\n            <MenuItem\r\n              onClick={(event) => handleMenuItemClick(event, PRIMARY_SCHOOL)}\r\n            >\r\n              Primary School\r\n            </MenuItem>\r\n            <MenuItem\r\n              onClick={(event) => handleMenuItemClick(event, SECONDARY_SCHOOL)}\r\n            >\r\n              Secondary School\r\n            </MenuItem>\r\n            <MenuItem onClick={(event) => handleMenuItemClick(event, COLLEGE)}>\r\n              College\r\n            </MenuItem>\r\n            <MenuItem\r\n              onClick={(event) => handleMenuItemClick(event, UNIVERSITY)}\r\n            >\r\n              University\r\n            </MenuItem>\r\n          </Menu>\r\n        </div>\r\n        <div\r\n          style={{\r\n            paddingTop: \"10px\",\r\n            justifyContent: \"left\",\r\n            display: \"flex\",\r\n            paddingTop: \"60px\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              fontWeight: \"600\",\r\n              verticalAlign: \"middle\",\r\n              paddingRight: \"10px\",\r\n            }}\r\n          >\r\n            Add Profile Picture\r\n          </div>\r\n          <FileBase\r\n            type=\"file\"\r\n            multiple={false}\r\n            onDone={({ base64 }) =>\r\n              setUserData({ ...userData, images: base64 })\r\n            }\r\n          />\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            marginTop: \"8px\",\r\n          }}\r\n          className=\"row\"\r\n        >\r\n          <div\r\n            style={{\r\n              width: \"50%\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              marginTop: \"60px\",\r\n            }}\r\n          >\r\n            <div>\r\n              <Button\r\n                aria-controls=\"simple-menu\"\r\n                aria-haspopup=\"true\"\r\n                onClick={(event) => setAnchorElYear(event.currentTarget)}\r\n              >\r\n                <u>{userData.choiceYear}</u>\r\n              </Button>\r\n              <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={anchorElYear}\r\n                keepMounted\r\n                open={Boolean(anchorElYear)}\r\n                onClose={(event) => setAnchorElYear(null)}\r\n              >\r\n                <MenuItem\r\n                  onClick={(event) => handleMenuItemYearClick(event, YEAR)}\r\n                >\r\n                  Year\r\n                </MenuItem>\r\n                <MenuItem\r\n                  onClick={(event) => handleMenuItemYearClick(event, SEMESTER)}\r\n                >\r\n                  Semester\r\n                </MenuItem>\r\n                <MenuItem\r\n                  onClick={(event) => handleMenuItemYearClick(event, CLASS)}\r\n                >\r\n                  Class\r\n                </MenuItem>\r\n              </Menu>\r\n            </div>\r\n            <div style={{ width: \"60px\" }}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                name=\"yearValue\"\r\n                fullWidth\r\n                error={userData.yearQuantity > 1 ? false : true}\r\n                value={userData.yearQuantity}\r\n                onChange={(e) => {\r\n                  setUserData({ ...userData, yearQuantity: e.target.value });\r\n                }}\r\n                style={{ fontSize: \"10px\" }}\r\n                type=\"number\"\r\n                inputProps={{\r\n                  style: {\r\n                    padding: 3,\r\n                  },\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div\r\n            style={{\r\n              width: \"50%\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              marginTop: \"60px\",\r\n            }}\r\n          >\r\n            <div>\r\n              <Button\r\n                aria-controls=\"simple-menu\"\r\n                aria-haspopup=\"true\"\r\n                onClick={(event) => setAnchorElBranch(event.currentTarget)}\r\n              >\r\n                <u>{userData.choiceBranch}</u>\r\n              </Button>\r\n              <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={anchorElBranch}\r\n                keepMounted\r\n                open={Boolean(anchorElBranch)}\r\n                onClose={(event) => setAnchorElBranch(null)}\r\n              >\r\n                <MenuItem\r\n                  onClick={(event) => handleMenuItemBranchClick(event, BRANCH)}\r\n                >\r\n                  Branch\r\n                </MenuItem>\r\n                <MenuItem\r\n                  onClick={(event) => handleMenuItemBranchClick(event, SECTION)}\r\n                >\r\n                  Section\r\n                </MenuItem>\r\n              </Menu>\r\n            </div>\r\n            <div style={{ width: \"60px\" }}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                name=\"yearValue\"\r\n                fullWidth\r\n                error={userData.yearQuantity > 0 ? false : true}\r\n                value={userData.yearQuantity}\r\n                onChange={(e) => {\r\n                  setUserData({ ...userData, yearQuantity: e.target.value });\r\n                }}\r\n                style={{ fontSize: \"10px\" }}\r\n                type=\"number\"\r\n                inputProps={{\r\n                  style: {\r\n                    padding: 3,\r\n                  },\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div style={{ paddingTop: \"20px\" }}>\r\n          <Button\r\n            size=\"large\"\r\n            type=\"submit\"\r\n            className={classes.button}\r\n            style={{ border: \"3px solid blueviolet\", color: \"blueviolet\" }}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Web\\digiClass\\client\\src\\constants\\index.js",[],"D:\\Web\\digiClass\\client\\src\\components\\registrationForm\\student.js",["117"],"import React from \"react\";\r\nimport { Button, TextField } from \"@material-ui/core\";\r\nimport { STUDENT, MALE, FEMALE } from \"./../../constants\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport FileBase from \"react-file-base64\";\r\nimport { addStudent } from \"./../../actions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n  textField: {},\r\n}));\r\n\r\nexport default function StudentForm() {\r\n  const [userData, setUserData] = React.useState({\r\n    name: \"\",\r\n    instituteID: \"\",\r\n    rank: STUDENT,\r\n    rollNo: \"\",\r\n    email: \"\",\r\n    class: 1,\r\n    section: \"A\",\r\n    gender: MALE,\r\n    profileLink: \"\",\r\n    images: \"\",\r\n    dob: \"01-01-2001\",\r\n  });\r\n\r\n  const toggleGender = () => {\r\n    if (userData.gender === MALE) setUserData({ ...userData, gender: FEMALE });\r\n    else setUserData({ ...userData, gender: MALE });\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  const regExp = RegExp(/^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (e) => {\r\n    console.log(\"Student Submit\");\r\n    console.log(userData);\r\n    e.preventDefault();\r\n    dispatch(addStudent(userData));\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: \"70%\", paddingBottom: \"100px\" }}>\r\n      <form noValidate onSubmit={handleSubmit}>\r\n        <div style={{ paddingBottom: \"60px\" }}>\r\n          <TextField\r\n            variant=\"standard\"\r\n            name=\"name\"\r\n            fullWidth\r\n            label=\"Name\"\r\n            value={userData.name}\r\n            onChange={(e) => {\r\n              setUserData({ ...userData, name: e.target.value });\r\n            }}\r\n            // helperText=\"At least four characters.\"\r\n            error={userData.name.trim().length > 3 ? false : true}\r\n            style={{ marginTop: \"8px\" }}\r\n            className={classes.textField}\r\n          />\r\n          <div style={{ paddingTop: \"60px\" }}>\r\n            <TextField\r\n              variant=\"standard\"\r\n              name=\"rollNo\"\r\n              fullWidth\r\n              label=\"Roll no.\"\r\n              value={userData.teacherID}\r\n              onChange={(e) => {\r\n                setUserData({ ...userData, rollNo: e.target.value });\r\n              }}\r\n              // helperText=\"At least two characters.\"\r\n              error={userData.name.trim().length > 2 ? false : true}\r\n              style={{ marginTop: \"8px\" }}\r\n              className={classes.textField}\r\n            />\r\n          </div>\r\n          <div style={{ paddingTop: \"60px\" }}>\r\n            <TextField\r\n              variant=\"standard\"\r\n              name=\"instituteID\"\r\n              fullWidth\r\n              label=\"Institute ID\"\r\n              value={userData.instituteID}\r\n              onChange={(e) => {\r\n                setUserData({ ...userData, instituteID: e.target.value });\r\n              }}\r\n              // helperText=\"At least two characters.\"\r\n              error={userData.instituteID.trim().length > 2 ? false : true}\r\n              style={{ marginTop: \"8px\" }}\r\n              className={classes.textField}\r\n            />\r\n          </div>\r\n          <div style={{ paddingTop: \"60px\" }}>\r\n            <TextField\r\n              variant=\"standard\"\r\n              name=\"email\"\r\n              fullWidth\r\n              label=\"Email\"\r\n              value={userData.email}\r\n              onChange={(e) => {\r\n                setUserData({ ...userData, email: e.target.value });\r\n              }}\r\n              // helperText=\"Enter proper email address.\"\r\n              error={regExp.test(userData.email.trim()) ? false : true}\r\n              style={{ marginTop: \"8px\" }}\r\n              className={classes.textField}\r\n            />\r\n          </div>\r\n          <div\r\n            style={{\r\n              paddingTop: \"60px\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignContent: \"center\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                paddingLeft: \"50px\",\r\n                paddingRight: \"50px\",\r\n              }}\r\n            >\r\n              <TextField\r\n                variant=\"standard\"\r\n                name=\"class\"\r\n                fullWidth\r\n                label=\"Class/Semester/Year\"\r\n                value={userData.class}\r\n                onChange={(e) => {\r\n                  setUserData({ ...userData, class: e.target.value });\r\n                }}\r\n                error={userData.class > 0 ? false : true}\r\n                type=\"number\"\r\n                style={{ marginTop: \"8px\" }}\r\n                className={classes.textField}\r\n              />\r\n            </div>\r\n            <div\r\n              style={{\r\n                paddingLeft: \"50px\",\r\n                paddingRight: \"50px\",\r\n              }}\r\n            >\r\n              <TextField\r\n                variant=\"standard\"\r\n                name=\"section\"\r\n                fullWidth\r\n                label=\"Section/Branch\"\r\n                value={userData.section}\r\n                onChange={(e) => {\r\n                  setUserData({ ...userData, section: e.target.value });\r\n                }}\r\n                error={userData.section.trim().length > 0 ? false : true}\r\n                style={{ marginTop: \"8px\" }}\r\n                className={classes.textField}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div\r\n            style={{\r\n              paddingTop: \"60px\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n            className=\"row\"\r\n          >\r\n            <div\r\n              style={{\r\n                fontWeight: \"600\",\r\n                paddingRight: \"10px\",\r\n                paddingLeft: \"20px\",\r\n                marginTop: \"10px\",\r\n                display: \"flex\",\r\n                height: \"100%\",\r\n              }}\r\n            >\r\n              Gender:\r\n            </div>\r\n            <div>\r\n              <Button\r\n                onClick={() => toggleGender()}\r\n                style={{ fontSize: \"18px\" }}\r\n              >\r\n                <u>{userData.gender}</u>\r\n              </Button>\r\n            </div>\r\n            <div\r\n              style={{\r\n                fontWeight: \"600\",\r\n                paddingRight: \"20px\",\r\n                paddingLeft: \"100px\",\r\n                marginTop: \"15px\",\r\n                display: \"flex\",\r\n                height: \"100%\",\r\n              }}\r\n            >\r\n              DOB:\r\n            </div>\r\n            <div>\r\n              <TextField\r\n                variant=\"standard\"\r\n                name=\"dob\"\r\n                fullWidth\r\n                value={userData.dob}\r\n                type=\"date\"\r\n                onChange={(e) => {\r\n                  setUserData({ ...userData, dob: e.target.value });\r\n                }}\r\n                style={{ marginTop: \"8px\" }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div style={{ paddingTop: \"60px\" }}>\r\n            <TextField\r\n              variant=\"standard\"\r\n              name=\"profileLink\"\r\n              fullWidth\r\n              label=\"Profile Link(Optional)\"\r\n              value={userData.profileLink}\r\n              onChange={(e) => {\r\n                setUserData({ ...userData, profileLink: e.target.value });\r\n              }}\r\n              style={{ marginTop: \"8px\" }}\r\n            />\r\n          </div>\r\n          <div\r\n            style={{\r\n              paddingTop: \"10px\",\r\n              justifyContent: \"left\",\r\n              display: \"flex\",\r\n              paddingTop: \"60px\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                fontWeight: \"600\",\r\n                verticalAlign: \"middle\",\r\n                paddingRight: \"10px\",\r\n              }}\r\n            >\r\n              Add Profile Picture\r\n            </div>\r\n            <FileBase\r\n              type=\"file\"\r\n              multiple={false}\r\n              onDone={({ base64 }) =>\r\n                setUserData({ ...userData, images: base64 })\r\n              }\r\n            />\r\n          </div>\r\n          <div style={{ paddingTop: \"20px\" }}>\r\n            <Button\r\n              size=\"large\"\r\n              type=\"submit\"\r\n              className={classes.button}\r\n              style={{ border: \"3px solid blueviolet\", color: \"blueviolet\" }}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Web\\digiClass\\client\\src\\components\\registrationForm\\teacher.js",["118"],"import React from \"react\";\r\nimport { Button, TextField } from \"@material-ui/core\";\r\nimport { TEACHER, MALE, FEMALE } from \"./../../constants\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport FileBase from \"react-file-base64\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addTeacher } from \"./../../actions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n  textField: {},\r\n}));\r\n\r\nexport default function TeacherForm() {\r\n  const [userData, setUserData] = React.useState({\r\n    name: \"\",\r\n    instituteID: \"\",\r\n    rank: TEACHER,\r\n    teacherID: \"\",\r\n    email: \"\",\r\n    classes: [],\r\n    sections: [],\r\n    gender: MALE,\r\n    profileLink: \"\",\r\n    images: \"\",\r\n    driveLink: \"\",\r\n    DOB: \"01-01-2001\",\r\n  });\r\n\r\n  const toggleGender = () => {\r\n    if (userData.gender === MALE) setUserData({ ...userData, gender: FEMALE });\r\n    else setUserData({ ...userData, gender: MALE });\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const regExp = RegExp(/^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/);\r\n\r\n  const handleSubmit = (e) => {\r\n    console.log(\"Teacher Submit\");\r\n    console.log(userData);\r\n    e.preventDefault();\r\n    dispatch(addTeacher(userData));\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: \"70%\", paddingBottom: \"100px\" }}>\r\n      <form noValidate onSubmit={handleSubmit}>\r\n        <div style={{ paddingBottom: \"60px\" }}>\r\n          <TextField\r\n            variant=\"standard\"\r\n            name=\"name\"\r\n            fullWidth\r\n            label=\"Name\"\r\n            value={userData.name}\r\n            onChange={(e) => {\r\n              setUserData({ ...userData, name: e.target.value });\r\n            }}\r\n            // helperText=\"At least four characters.\"\r\n            error={userData.name.trim().length > 3 ? false : true}\r\n            style={{ marginTop: \"8px\" }}\r\n            className={classes.textField}\r\n          />\r\n          <div style={{ paddingTop: \"60px\" }}>\r\n            <TextField\r\n              variant=\"standard\"\r\n              name=\"teacherID\"\r\n              fullWidth\r\n              label=\"Teacher ID.\"\r\n              value={userData.teacherID}\r\n              onChange={(e) => {\r\n                setUserData({ ...userData, teacherID: e.target.value });\r\n              }}\r\n              // helperText=\"At least two characters.\"\r\n              error={userData.name.trim().length > 2 ? false : true}\r\n              style={{ marginTop: \"8px\" }}\r\n              className={classes.textField}\r\n            />\r\n          </div>\r\n          <div style={{ paddingTop: \"60px\" }}>\r\n            <TextField\r\n              variant=\"standard\"\r\n              name=\"instituteID\"\r\n              fullWidth\r\n              label=\"Institute ID\"\r\n              value={userData.instituteID}\r\n              onChange={(e) => {\r\n                setUserData({ ...userData, instituteID: e.target.value });\r\n              }}\r\n              // helperText=\"At least two characters.\"\r\n              error={userData.instituteID.trim().length > 2 ? false : true}\r\n              style={{ marginTop: \"8px\" }}\r\n              className={classes.textField}\r\n            />\r\n          </div>\r\n          <div style={{ paddingTop: \"60px\" }}>\r\n            <TextField\r\n              variant=\"standard\"\r\n              name=\"email\"\r\n              fullWidth\r\n              label=\"Email\"\r\n              value={userData.email}\r\n              onChange={(e) => {\r\n                setUserData({ ...userData, email: e.target.value });\r\n              }}\r\n              // helperText=\"Enter proper email address.\"\r\n              error={regExp.test(userData.email.trim()) ? false : true}\r\n              style={{ marginTop: \"8px\" }}\r\n              className={classes.textField}\r\n            />\r\n          </div>\r\n          <div\r\n            style={{\r\n              paddingTop: \"60px\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignContent: \"center\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                paddingLeft: \"50px\",\r\n                paddingRight: \"50px\",\r\n              }}\r\n            >\r\n              <TextField\r\n                variant=\"standard\"\r\n                name=\"class\"\r\n                fullWidth\r\n                label=\"Classes/Semesters/Years\"\r\n                value={userData.class}\r\n                onChange={(e) => {\r\n                  setUserData({\r\n                    ...userData,\r\n                    classes: e.target.value.split(\",\"),\r\n                  });\r\n                }}\r\n                error={userData.classes.length > 0 ? false : true}\r\n                style={{ marginTop: \"8px\" }}\r\n                className={classes.textField}\r\n              />\r\n            </div>\r\n            <div\r\n              style={{\r\n                paddingLeft: \"50px\",\r\n                paddingRight: \"50px\",\r\n              }}\r\n            >\r\n              <TextField\r\n                variant=\"standard\"\r\n                name=\"section\"\r\n                fullWidth\r\n                label=\"Sections/Branches\"\r\n                value={userData.sections}\r\n                onChange={(e) => {\r\n                  setUserData({\r\n                    ...userData,\r\n                    sections: e.target.value.split(\",\"),\r\n                  });\r\n                }}\r\n                error={userData.sections.length > 0 ? false : true}\r\n                style={{ marginTop: \"8px\" }}\r\n                className={classes.textField}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div\r\n            style={{\r\n              paddingTop: \"60px\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n            className=\"row\"\r\n          >\r\n            <div\r\n              style={{\r\n                fontWeight: \"600\",\r\n                paddingRight: \"10px\",\r\n                paddingLeft: \"20px\",\r\n                marginTop: \"10px\",\r\n                display: \"flex\",\r\n                height: \"100%\",\r\n              }}\r\n            >\r\n              Gender:\r\n            </div>\r\n            <div>\r\n              <Button\r\n                onClick={() => toggleGender()}\r\n                style={{ fontSize: \"18px\" }}\r\n              >\r\n                <u>{userData.gender}</u>\r\n              </Button>\r\n            </div>\r\n            <div\r\n              style={{\r\n                fontWeight: \"600\",\r\n                paddingRight: \"20px\",\r\n                paddingLeft: \"100px\",\r\n                marginTop: \"15px\",\r\n                display: \"flex\",\r\n                height: \"100%\",\r\n              }}\r\n            >\r\n              DOB:\r\n            </div>\r\n            <div>\r\n              <TextField\r\n                variant=\"standard\"\r\n                name=\"dob\"\r\n                fullWidth\r\n                value={userData.dob}\r\n                type=\"date\"\r\n                onChange={(e) => {\r\n                  setUserData({ ...userData, dob: e.target.value });\r\n                }}\r\n                style={{ marginTop: \"8px\" }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div style={{ paddingTop: \"60px\" }}>\r\n            <TextField\r\n              variant=\"standard\"\r\n              name=\"profileLink\"\r\n              fullWidth\r\n              label=\"Profile Link(Optional)\"\r\n              value={userData.profileLink}\r\n              onChange={(e) => {\r\n                setUserData({ ...userData, profileLink: e.target.value });\r\n              }}\r\n              style={{ marginTop: \"8px\" }}\r\n            />\r\n          </div>\r\n          <div\r\n            style={{\r\n              paddingTop: \"10px\",\r\n              justifyContent: \"left\",\r\n              display: \"flex\",\r\n              paddingTop: \"60px\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                fontWeight: \"600\",\r\n                verticalAlign: \"middle\",\r\n                paddingRight: \"10px\",\r\n              }}\r\n            >\r\n              Add Profile Picture\r\n            </div>\r\n            <FileBase\r\n              type=\"file\"\r\n              multiple={false}\r\n              onDone={({ base64 }) =>\r\n                setUserData({ ...userData, images: base64 })\r\n              }\r\n            />\r\n          </div>\r\n          <div style={{ paddingTop: \"20px\" }}>\r\n            <Button\r\n              size=\"large\"\r\n              type=\"submit\"\r\n              className={classes.button}\r\n              style={{ border: \"3px solid blueviolet\", color: \"blueviolet\" }}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Web\\digiClass\\client\\src\\actions\\index.js",[],"D:\\Web\\digiClass\\client\\src\\api\\index.js",[],"D:\\Web\\digiClass\\client\\src\\pages\\class.js",["119","120"],"import React, { useState } from \"react\";\r\nimport AStatusCard from \"./../components/classStatusCards/AssignmentCard\";\r\nimport LStatusCard from \"./../components/classStatusCards/LectureCard\";\r\nimport PStatusCard from \"./../components/classStatusCards/PracticeCard\";\r\nimport CStatusCard from \"./../components/classStatusCards/ChatCard\";\r\nimport ClassAssignmentTable from \"../components/classFrames/assignment\";\r\nimport ClassLectureTable from \"../components/classFrames/lecture\";\r\nimport ClassPracticeTable from \"../components/classFrames/practice\";\r\n\r\nexport default function Class() {\r\n  const LECTURE = \"lecture\";\r\n  const ASSIGNMENT = \"assignment\";\r\n  const PRACTICE = \"practice\";\r\n  const CHAT = \"chat\";\r\n  const [activeFrame, changeFrame] = React.useState({ frame: LECTURE });\r\n  var headBackgroundColor = \"red\";\r\n  var headTextColor = \"white\";\r\n  var bodyBackgroundColor = \"#014182\";\r\n  var bodyBlockColor = \"white\";\r\n  var subjectCode = \"TEST001\";\r\n  var subjectTeacher = \"IIITU Developers\";\r\n  var subjectName = \"Test Corse 1\";\r\n  var subjectType = \"Temp\";\r\n  var assignmentCompleted = 2;\r\n  var assignmentTotal = 3;\r\n  var lectureCompleted = 10;\r\n  var lectureTotal = 12;\r\n  var practiceCompleted = 8;\r\n  var practiceTotal = 10;\r\n  var rank;\r\n  return (\r\n    <div style={{ marginTop: \"15px\", marginLeft: \"20px\", marginRight: \"20px\" }}>\r\n      <center>\r\n        <div>\r\n          {/* ----------------------------------------------------------------------------------------------Heading */}\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              backgroundColor: headBackgroundColor,\r\n              borderRadius: \"15px\",\r\n              fontStyle: \"Calibri\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                width: \"100%\",\r\n                marginTop: \"15px\",\r\n                paddingLeft: \"15px\",\r\n                paddingRight: \"30px\",\r\n                display: \"flex\",\r\n                alignContent: \"space-between\",\r\n                justifyContent: \"space-between\",\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  color: headTextColor,\r\n                  fontSize: \"11px\",\r\n                  fontWeight: \"bold\",\r\n                  alignSelf: \"left\",\r\n                  marginTop: \"10px\",\r\n                }}\r\n              >\r\n                {subjectCode}\r\n              </div>\r\n              <div\r\n                style={{\r\n                  color: headTextColor,\r\n                  fontSize: \"11px\",\r\n                  fontWeight: \"bold\",\r\n                  alignSelf: \"right\",\r\n                  marginTop: \"10px\",\r\n                }}\r\n              >\r\n                {subjectTeacher}\r\n              </div>\r\n            </div>\r\n            <div\r\n              style={{\r\n                color: headTextColor,\r\n                fontSize: \"30px\",\r\n                fontWeight: \"bold\",\r\n                marginTop: \"15px\",\r\n              }}\r\n            >\r\n              {subjectName}\r\n            </div>\r\n            <div\r\n              style={{\r\n                fontSize: \"11px\",\r\n                fontWeight: \"bold\",\r\n                color: headTextColor,\r\n                alignContent: \"center\",\r\n                justifyContent: \"center\",\r\n                marginTop: \"15px\",\r\n                paddingBottom: \"15px\",\r\n              }}\r\n            >\r\n              {subjectType}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          style={{\r\n            border: \"2px solid\",\r\n            borderRadius: \"15px\",\r\n            borderColor: bodyBlockColor,\r\n            borderWidth: \"3px\",\r\n            paddingTop: \"10px\",\r\n            paddingBottom: \"10px\",\r\n            paddingLeft: \"10px\",\r\n            paddingRight: \"10px\",\r\n            marginTop: \"20px\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              show: \"flex\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n            className=\"row\"\r\n          >\r\n            {/* -----------------------------------------------------------------------Present-Status */}\r\n            <div\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                changeFrame({ ...activeFrame, frame: ASSIGNMENT });\r\n              }}\r\n            >\r\n              <AStatusCard\r\n                backgroundColor={bodyBackgroundColor}\r\n                foregroundColor={bodyBlockColor}\r\n                completed={assignmentCompleted}\r\n                total={assignmentTotal}\r\n              />\r\n            </div>\r\n            <div\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                changeFrame({ ...activeFrame, frame: LECTURE });\r\n              }}\r\n            >\r\n              <LStatusCard\r\n                backgroundColor={bodyBackgroundColor}\r\n                foregroundColor={bodyBlockColor}\r\n                completed={lectureCompleted}\r\n                total={lectureTotal}\r\n              />\r\n            </div>\r\n            <div\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                changeFrame({ ...activeFrame, frame: PRACTICE });\r\n              }}\r\n            >\r\n              <PStatusCard\r\n                backgroundColor={bodyBackgroundColor}\r\n                foregroundColor={bodyBlockColor}\r\n                completed={practiceCompleted}\r\n                total={practiceTotal}\r\n              />\r\n            </div>\r\n            <div\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                changeFrame({ ...activeFrame, frame: CHAT });\r\n              }}\r\n            >\r\n              <CStatusCard\r\n                backgroundColor={bodyBackgroundColor}\r\n                state=\"0\"\r\n                foregroundColor={bodyBlockColor}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div\r\n            style={{\r\n              paddingTop: \"20px\",\r\n              justifyContent: \"space-around\",\r\n              color: bodyBackgroundColor,\r\n              fontWeight: \"600\",\r\n              display: \"flex\",\r\n            }}\r\n          ></div>\r\n          <div>\r\n            {activeFrame.frame === ASSIGNMENT ? (\r\n              <ClassAssignmentTable\r\n                backColor={bodyBackgroundColor}\r\n                frontColor={headBackgroundColor}\r\n              />\r\n            ) : activeFrame.frame === LECTURE ? (\r\n              <ClassLectureTable\r\n                backColor={bodyBackgroundColor}\r\n                frontColor={headBackgroundColor}\r\n              />\r\n            ) : activeFrame.frame === PRACTICE ? (\r\n              <ClassPracticeTable\r\n                backColor={bodyBackgroundColor}\r\n                frontColor={headBackgroundColor}\r\n              />\r\n            ) : (\r\n              CHAT\r\n            )}\r\n          </div>\r\n        </div>\r\n      </center>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Web\\digiClass\\client\\src\\components\\classStatusCards\\AssignmentCard.js",[],"D:\\Web\\digiClass\\client\\src\\components\\classStatusCards\\LectureCard.js",[],"D:\\Web\\digiClass\\client\\src\\components\\classStatusCards\\PracticeCard.js",[],"D:\\Web\\digiClass\\client\\src\\components\\classStatusCards\\ChatCard.js",[],"D:\\Web\\digiClass\\client\\src\\components\\classFrames\\assignment.js",["121"],"import React, { useState } from \"react\";\r\nimport Card from \"./card/card\";\r\n\r\nconst ClassAssignmentTable = ({ backColor, frontColor }) => {\r\n  return (\r\n    <div>\r\n      <Card fontColor={frontColor} borderColor={backColor} />\r\n      <Card fontColor={frontColor} borderColor={backColor} />\r\n      <Card fontColor={frontColor} borderColor={backColor} />\r\n    </div>\r\n  );\r\n};\r\nexport default ClassAssignmentTable;\r\n","D:\\Web\\digiClass\\client\\src\\components\\classFrames\\card\\card.js",["122"],"import React, { useState } from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Card = ({ borderColor, fontColor }) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"100%\",\r\n        marginTop: \"5px\",\r\n        border: \"2px solid\",\r\n        borderRadius: \"5px\",\r\n        color: fontColor,\r\n        borderColor: borderColor,\r\n        fontWeight: \"600\",\r\n        fontStyle: \"italic\",\r\n      }}\r\n      className=\"unit\"\r\n    >\r\n      HALLOW WORLD\r\n    </div>\r\n  );\r\n};\r\nexport default Card;\r\n","D:\\Web\\digiClass\\client\\src\\components\\classFrames\\lecture.js",["123"],"import React, { useState } from \"react\";\r\nimport Card from \"./card/card\";\r\n\r\nconst ClassLectureTable = ({ backColor, frontColor }) => {\r\n  return (\r\n    <div>\r\n      <Card fontColor={frontColor} borderColor={backColor} />\r\n      <Card fontColor={frontColor} borderColor={backColor} />\r\n      <Card fontColor={frontColor} borderColor={backColor} />\r\n    </div>\r\n  );\r\n};\r\nexport default ClassLectureTable;\r\n","D:\\Web\\digiClass\\client\\src\\components\\classFrames\\practice.js",["124"],"import React, { useState } from \"react\";\r\nimport Card from \"./card/card\";\r\n\r\nconst ClassPracticeTable = ({ backColor, frontColor }) => {\r\n  return (\r\n    <div>\r\n      <Card fontColor={frontColor} borderColor={backColor} />\r\n      <Card fontColor={frontColor} borderColor={backColor} />\r\n      <Card fontColor={frontColor} borderColor={backColor} />\r\n    </div>\r\n  );\r\n};\r\nexport default ClassPracticeTable;\r\n","D:\\Web\\digiClass\\client\\src\\pages\\cardPage.js",["125"],"import React, { useState } from \"react\";\r\n\r\nimport ClassRoomCard from \"../components/classPageCards/ClassRoom\";\r\n\r\nfunction getRandom() {\r\n  return Math.floor((Math.random() * 50 + 1) / 5);\r\n}\r\n\r\nexport default function CardPage() {\r\n  var subjectTeacher = \"IIITU Developers\";\r\n  var backgroundLocation =\r\n    \"/images/background\" + getRandom().toString() + \".jfif\";\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          backgroundImage: `url(${backgroundLocation})`,\r\n          backgroundSize: \"cover\",\r\n          backgroundPosition: \"center center\",\r\n          backgroundRepeat: \"no-repeat\",\r\n          backgroundColor: \"black\",\r\n          height: \"100vh\",\r\n          show: \"flex\",\r\n        }}\r\n      >\r\n        <center>\r\n          <div style={{ paddingTop: \"20vh\" }}>\r\n            <div\r\n              style={{\r\n                backgroundColor: \"rgb(225,225,225,0.7)\",\r\n                justifyContent: \"center\",\r\n                borderRadius: \"10px\",\r\n                width: \"60vh\",\r\n              }}\r\n            >\r\n              <ClassRoomCard subjectTeacher={subjectTeacher} task=\"ADD\" />\r\n            </div>\r\n          </div>\r\n        </center>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Web\\digiClass\\client\\src\\components\\classPageCards\\ClassRoom.js",["126","127","128"],"import React from \"react\";\r\nimport { ColorPicker } from \"react-input-color\";\r\n\r\nconst ClassRoomCard = ({ subjectTeacher, task }) => {\r\n  const [dataCard, setData] = React.useState({\r\n    headBackgroundColor: \"red\",\r\n    headTextColor: \"white\",\r\n    bodyBackgroundColor: \"#014182\",\r\n    bodyBlockColor: \"white\",\r\n    subjectCode: \"TEST001\",\r\n    subjectName: \"Test Corse 1\",\r\n    subjectType: \"Temp\",\r\n    studentsAllowed: [],\r\n    subjectTeacher: subjectTeacher,\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          justifyContent: \"center\",\r\n          fontWeight: \"bold\",\r\n          fontSize: \"35px\",\r\n          color: \"white\",\r\n        }}\r\n      >\r\n        {task == \"ADD\" ? \"ADD CLASS\" : \"EDIT DETAILS\"}\r\n      </div>\r\n      <div\r\n        style={{\r\n          paddingLeft: \"5px\",\r\n          paddingRight: \"5px\",\r\n          paddingTop: \"10px\",\r\n        }}\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          onChange={(input) => setData({ ...dataCard, subjectCode: input })}\r\n          ref={(input) => {\r\n            input && input.focus();\r\n          }}\r\n          placeholder=\"Subject Code\"\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            borderRadius: \"10px\",\r\n            borderColor: \"rgb(0,204,204)\",\r\n            width: \"90%\",\r\n            marginBottom: \"10px\",\r\n          }}\r\n          className=\"classCard\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          onChange={(input) =>\r\n            setData({ ...dataCard, subjectName: input.target.value })\r\n          }\r\n          placeholder=\"Subject Name\"\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            borderRadius: \"10px\",\r\n            borderColor: \"rgb(0,204,204)\",\r\n            width: \"90%\",\r\n            marginBottom: \"10px\",\r\n          }}\r\n        />\r\n        <label\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <p\r\n            style={{\r\n              fontWeight: \"bold\",\r\n              color: \"white\",\r\n              paddingRight: \"5px\",\r\n              paddingTop: \"14px\",\r\n            }}\r\n          >\r\n            Type of course\r\n          </p>\r\n          <select\r\n            value={dataCard.subjectType}\r\n            onChange={(input) =>\r\n              setData({ ...dataCard, subjectType: input.target.value })\r\n            }\r\n          >\r\n            <option value=\"THEORY\">Theory</option>\r\n            <option value=\"LAB\">Lab</option>\r\n            <option value=\"PRACTICUM\">Practicum</option>\r\n            <option value=\"OTHER\">Other</option>\r\n          </select>\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          onChange={(input) =>\r\n            setData({ ...dataCard, headBackgroundColor: input.target.value })\r\n          }\r\n          placeholder=\"Color1\"\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            borderRadius: \"10px\",\r\n            borderColor: \"rgb(0,204,204)\",\r\n            width: \"90%\",\r\n            marginBottom: \"10px\",\r\n          }}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          onClick={(input) =>\r\n            setData({ ...dataCard, headTextColor: input.target.value })\r\n          }\r\n          placeholder=\"Color2\"\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            borderRadius: \"10px\",\r\n            borderColor: \"rgb(0,204,204)\",\r\n            width: \"90%\",\r\n            marginBottom: \"10px\",\r\n          }}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          onChange={(input) =>\r\n            setData({ ...dataCard, bodyBackgroundColor: input.target.value })\r\n          }\r\n          placeholder=\"Color3\"\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            borderRadius: \"10px\",\r\n            borderColor: \"rgb(0,204,204)\",\r\n            width: \"90%\",\r\n            marginBottom: \"10px\",\r\n          }}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          onChange={(input) =>\r\n            setData({ ...dataCard, bodyBlockColor: input.target.value })\r\n          }\r\n          placeholder=\"Color4\"\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            borderRadius: \"10px\",\r\n            borderColor: \"rgb(0,204,204)\",\r\n            width: \"90%\",\r\n            marginBottom: \"10px\",\r\n          }}\r\n        />\r\n        <button\r\n          onClick={{}}\r\n          style={{\r\n            padding: \"5px\",\r\n            backgroundColor: \"rgb(255,140,0)\",\r\n            color: \"white\",\r\n            fontWeight: \"bold\",\r\n            width: \"90%\",\r\n            borderRadius: \"10px\",\r\n            marginBottom: \"15px\",\r\n          }}\r\n        >\r\n          {task == \"ADD\" ? \"Create\" : \"Change\"}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClassRoomCard;\r\n",{"ruleId":"129","severity":1,"message":"130","line":5,"column":8,"nodeType":"131","messageId":"132","endLine":5,"endColumn":9},{"ruleId":"129","severity":1,"message":"133","line":6,"column":8,"nodeType":"131","messageId":"132","endLine":6,"endColumn":14},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"129","severity":1,"message":"138","line":2,"column":25,"nodeType":"131","messageId":"132","endLine":2,"endColumn":29},{"ruleId":"139","severity":1,"message":"140","line":3,"column":1,"nodeType":"141","endLine":10,"endColumn":3},{"ruleId":"129","severity":1,"message":"142","line":1,"column":17,"nodeType":"131","messageId":"132","endLine":1,"endColumn":25},{"ruleId":"143","severity":1,"message":"144","line":208,"column":13,"nodeType":"145","messageId":"146","endLine":208,"endColumn":23},{"ruleId":"143","severity":1,"message":"144","line":240,"column":15,"nodeType":"145","messageId":"146","endLine":240,"endColumn":25},{"ruleId":"143","severity":1,"message":"144","line":246,"column":15,"nodeType":"145","messageId":"146","endLine":246,"endColumn":25},{"ruleId":"129","severity":1,"message":"142","line":1,"column":17,"nodeType":"131","messageId":"132","endLine":1,"endColumn":25},{"ruleId":"129","severity":1,"message":"147","line":30,"column":7,"nodeType":"131","messageId":"132","endLine":30,"endColumn":11},{"ruleId":"129","severity":1,"message":"142","line":1,"column":17,"nodeType":"131","messageId":"132","endLine":1,"endColumn":25},{"ruleId":"129","severity":1,"message":"142","line":1,"column":17,"nodeType":"131","messageId":"132","endLine":1,"endColumn":25},{"ruleId":"129","severity":1,"message":"142","line":1,"column":17,"nodeType":"131","messageId":"132","endLine":1,"endColumn":25},{"ruleId":"129","severity":1,"message":"142","line":1,"column":17,"nodeType":"131","messageId":"132","endLine":1,"endColumn":25},{"ruleId":"129","severity":1,"message":"142","line":1,"column":17,"nodeType":"131","messageId":"132","endLine":1,"endColumn":25},{"ruleId":"129","severity":1,"message":"148","line":2,"column":10,"nodeType":"131","messageId":"132","endLine":2,"endColumn":21},{"ruleId":"149","severity":1,"message":"150","line":27,"column":15,"nodeType":"151","messageId":"146","endLine":27,"endColumn":17},{"ruleId":"149","severity":1,"message":"150","line":163,"column":17,"nodeType":"151","messageId":"146","endLine":163,"endColumn":19},"no-unused-vars","'$' is defined but never used.","Identifier","unusedVar","'Popper' is defined but never used.","no-native-reassign",["152"],"no-negated-in-lhs",["153"],"'Link' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'useState' is defined but never used.","no-dupe-keys","Duplicate key 'paddingTop'.","ObjectExpression","unexpected","'rank' is defined but never used.","'ColorPicker' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","no-global-assign","no-unsafe-negation"]