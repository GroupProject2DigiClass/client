[{"/home/aditya/my-app/digital class from 24march/client/src/index.js":"1","/home/aditya/my-app/digital class from 24march/client/src/App.js":"2","/home/aditya/my-app/digital class from 24march/client/src/reducer/index.js":"3","/home/aditya/my-app/digital class from 24march/client/src/pages/Assignment_student1.js":"4","/home/aditya/my-app/digital class from 24march/client/src/pages/individual_assignment_student.js":"5","/home/aditya/my-app/digital class from 24march/client/src/pages/registration.js":"6","/home/aditya/my-app/digital class from 24march/client/src/pages/Assignment_teacher.js":"7","/home/aditya/my-app/digital class from 24march/client/src/pages/home.js":"8","/home/aditya/my-app/digital class from 24march/client/src/pages/lecturePage.js":"9","/home/aditya/my-app/digital class from 24march/client/src/pages/class.js":"10","/home/aditya/my-app/digital class from 24march/client/src/pages/cardPage.js":"11","/home/aditya/my-app/digital class from 24march/client/src/pages/chat.js":"12","/home/aditya/my-app/digital class from 24march/client/src/reducer/allAssignments.js":"13","/home/aditya/my-app/digital class from 24march/client/src/reducer/user.js":"14","/home/aditya/my-app/digital class from 24march/client/src/reducer/auth.js":"15","/home/aditya/my-app/digital class from 24march/client/src/reducer/class.js":"16","/home/aditya/my-app/digital class from 24march/client/src/components/registrationForm/student.js":"17","/home/aditya/my-app/digital class from 24march/client/src/components/registrationForm/admin.js":"18","/home/aditya/my-app/digital class from 24march/client/src/components/assignmentForm/teacherCard.js":"19","/home/aditya/my-app/digital class from 24march/client/src/components/registrationForm/teacher.js":"20","/home/aditya/my-app/digital class from 24march/client/src/components/Logout.js":"21","/home/aditya/my-app/digital class from 24march/client/src/components/Login.js":"22","/home/aditya/my-app/digital class from 24march/client/src/components/classStatusCards/LectureCard.js":"23","/home/aditya/my-app/digital class from 24march/client/src/components/classStatusCards/AssignmentCard.js":"24","/home/aditya/my-app/digital class from 24march/client/src/components/classFrames/practice.js":"25","/home/aditya/my-app/digital class from 24march/client/src/components/classStatusCards/ChatCard.js":"26","/home/aditya/my-app/digital class from 24march/client/src/components/classStatusCards/PracticeCard.js":"27","/home/aditya/my-app/digital class from 24march/client/src/constants/index.js":"28","/home/aditya/my-app/digital class from 24march/client/src/components/classCard/Cards.js":"29","/home/aditya/my-app/digital class from 24march/client/src/components/classFrames/lecture.js":"30","/home/aditya/my-app/digital class from 24march/client/src/components/classPageCards/ClassRoom.js":"31","/home/aditya/my-app/digital class from 24march/client/src/components/classPageCards/ClassLecture.js":"32","/home/aditya/my-app/digital class from 24march/client/src/actions/index.js":"33","/home/aditya/my-app/digital class from 24march/client/src/api/index.js":"34","/home/aditya/my-app/digital class from 24march/client/src/components/classFrames/card/card.js":"35","/home/aditya/my-app/digital class from 24march/client/src/components/classCard/Card.js":"36"},{"size":547,"mtime":1624751497071,"results":"37","hashOfConfig":"38"},{"size":1416,"mtime":1624781964925,"results":"39","hashOfConfig":"38"},{"size":259,"mtime":1624723106878,"results":"40","hashOfConfig":"38"},{"size":3709,"mtime":1624781670976,"results":"41","hashOfConfig":"38"},{"size":1516,"mtime":1624786638712,"results":"42","hashOfConfig":"38"},{"size":2037,"mtime":1616590283743,"results":"43","hashOfConfig":"38"},{"size":381,"mtime":1616602766361,"results":"44","hashOfConfig":"38"},{"size":393,"mtime":1624781847253,"results":"45","hashOfConfig":"38"},{"size":7605,"mtime":1624781847253,"results":"46","hashOfConfig":"38"},{"size":10921,"mtime":1624782657654,"results":"47","hashOfConfig":"38"},{"size":1584,"mtime":1624781847253,"results":"48","hashOfConfig":"38"},{"size":4441,"mtime":1624781847253,"results":"49","hashOfConfig":"38"},{"size":485,"mtime":1624751632322,"results":"50","hashOfConfig":"38"},{"size":235,"mtime":1616590283743,"results":"51","hashOfConfig":"38"},{"size":618,"mtime":1616590283743,"results":"52","hashOfConfig":"38"},{"size":625,"mtime":1616590283743,"results":"53","hashOfConfig":"38"},{"size":8223,"mtime":1616590283743,"results":"54","hashOfConfig":"38"},{"size":10860,"mtime":1624723098189,"results":"55","hashOfConfig":"38"},{"size":9059,"mtime":1624778987788,"results":"56","hashOfConfig":"38"},{"size":8381,"mtime":1616590283743,"results":"57","hashOfConfig":"38"},{"size":927,"mtime":1616590283743,"results":"58","hashOfConfig":"38"},{"size":1282,"mtime":1616590283743,"results":"59","hashOfConfig":"38"},{"size":1663,"mtime":1616590283743,"results":"60","hashOfConfig":"38"},{"size":1477,"mtime":1616590283743,"results":"61","hashOfConfig":"38"},{"size":395,"mtime":1616590283743,"results":"62","hashOfConfig":"38"},{"size":1759,"mtime":1616590283743,"results":"63","hashOfConfig":"38"},{"size":1520,"mtime":1616590283743,"results":"64","hashOfConfig":"38"},{"size":1071,"mtime":1624680640408,"results":"65","hashOfConfig":"38"},{"size":262,"mtime":1624781847253,"results":"66","hashOfConfig":"38"},{"size":2545,"mtime":1624781847253,"results":"67","hashOfConfig":"38"},{"size":10150,"mtime":1624781847253,"results":"68","hashOfConfig":"38"},{"size":12357,"mtime":1624781847253,"results":"69","hashOfConfig":"38"},{"size":1898,"mtime":1624781847257,"results":"70","hashOfConfig":"38"},{"size":3669,"mtime":1624784797937,"results":"71","hashOfConfig":"38"},{"size":817,"mtime":1624781847253,"results":"72","hashOfConfig":"38"},{"size":452,"mtime":1624781847253,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"1gj5a4s",{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"76"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"76"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"76"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"76"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"76"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"76"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"76"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"76"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"76"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"76"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"76"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"76"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"76"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"76"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"76"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"76"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"76"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"76"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"76"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"76"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"76"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"76"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"/home/aditya/my-app/digital class from 24march/client/src/index.js",[],["169","170"],"/home/aditya/my-app/digital class from 24march/client/src/App.js",["171","172"],"import React, { useReducer } from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Register from \"./pages/registration\";\n\nimport assignmentT from \"./pages/Assignment_teacher\";\nimport assignmentS from \"./pages/Assignment_student1\";\n\nimport Home from \"./pages/home\";\nimport LecturePage from \"./pages/lecturePage\";\nimport Class from \"./pages/class\";\n\nimport CardPage from \"./pages/cardPage\";\nimport ChatPage from \"./pages/chat\";\nimport combineReducers from \"./reducer\";\nimport assignindividual from \"./pages/individual_assignment_student\";\nconst App = () => {\n  const [state, dispatch] = useReducer(combineReducers, {});\n\n  return (\n\n    <BrowserRouter>\n      <div style={{ height: \"100%\", width: \"100%\" }}>\n        <main>\n          <Route path=\"/\" component={Home} exact />\n          <Route path=\"/register\" component={Register} exact />\n          <Route path=\"/class\" component={Class} exact />\n\n          \n          <Route path=\"/assignmentT\" component={assignmentT} exact/>\n          <Route path=\"/assignmentS\" component={assignmentS} exact/> \n          <Route path=\"/assignmentIS/:id\" component={assignindividual} /> \n          \n          <Route path=\"/page/:id\" component={CardPage} />\n          <Route path=\"/lecture/:id\" component={LecturePage} />\n          <Route path=\"/chat\" component={ChatPage} exact />\n        </main>\n      </div>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","/home/aditya/my-app/digital class from 24march/client/src/reducer/index.js",["173"],"import { combineReducers } from \"redux\";\n\nimport user from \"./user\";\nimport auth from \"./auth\";\nimport classReducer from \"./class\";\nimport assignmentReducer from \"./allAssignments.js\";\nexport default combineReducers({\n  user,\n  auth,\n  assignmentReducer,\n});\n","/home/aditya/my-app/digital class from 24march/client/src/pages/Assignment_student1.js",["174","175","176","177","178","179","180","181","182","183"],"import React from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { Link } from '@material-ui/core';\nimport { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchallAssignmentsApi } from \"../api\";\nvar rollno =\"19111\"\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n  createData('Frozen yoghurt', 159, 6.0, 1, 4.0),\n  createData('Ice cream sandwich', 237, 9.0, 1, 4.3),\n  createData('Eclair', 262, 16.0, 0, 6.0),\n  createData('Cupcake', 305, 3.7, 1, 4.3),\n  createData('Gingerbread', 356, 16.0, 0, 3.9),\n];\n\n/*\n{postdata.map((post) => (\n\n  \n   \n  \n  ))}\n*/\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700,\n  },\n});\n\nexport default function CustomizedTables() {\n  const classes = useStyles();\n  //disapcting from here on\n  /*\n  const postdata=useSelector((state)=>state.assignmentReducer);\n  const dispatch=useDispatch();\n  useEffect(()=>{\n      dispatch(fetchallAssignments({classKey: \"TEST001THEORY\"}));\n  },[postdata]);\n  */\n  const [postdata, editdata] = React.useState([]);\n\n  useEffect(async () => {\n    await fetchallAssignmentsApi({ classKey: \"TEST001THEORY\" }).then((e) => {\n      editdata(e.data); console.log(e);\n    });\n\n  }, []);\n\n\n\n  //console.log(postdata);\n\n\n  function coffee(row) {\n    // console.log(row);\n    const isLoggedIn = row.carbs;\n    if (isLoggedIn == 1) { return <StyledTableCell align=\"right\"><img src=\"https://img.icons8.com/bubbles/50/000000/checked-2.png\" /></StyledTableCell> }\n    else { return <StyledTableCell align=\"right\"><img src=\"https://img.icons8.com/nolan/50/bank-card-missing.png\" /></StyledTableCell> }\n\n  }\n\n\n\n  return (\n    <div className=\"assign\">\n      <h2 className=\"head\">\n        Assignments\n          </h2>\n\n\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"customized table\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell>Title</StyledTableCell>\n              <StyledTableCell align=\"right\">Instructions</StyledTableCell>\n              <StyledTableCell align=\"right\">Points</StyledTableCell>\n              <StyledTableCell align=\"right\">Status</StyledTableCell>\n\n\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {postdata.map((post) => (\n              <StyledTableRow key={post._id}>\n                <StyledTableCell component=\"th\" scope=\"row\"  >\n              <Link href={'/assignmentIS' +'/'+rollno+'/' + post._id }>\n              {post.title}\n              </Link>\n                 \n\n\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">{post.instruction}</StyledTableCell>\n                <StyledTableCell align=\"right\">{post.points}</StyledTableCell>\n\n\n              </StyledTableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n    </div>\n  );\n}\n\n//{coffee(post)}","/home/aditya/my-app/digital class from 24march/client/src/pages/individual_assignment_student.js",["184","185","186","187","188"],"import React, { useState,useEffect } from \"react\";\nimport Box from '@material-ui/core/Box';\nimport { Button } from '@material-ui/core';\nimport axios from 'axios';\nimport {fetchindividualAssignmentsApi} from '../api';\n\n\nexport default function Assignindividual() {\n\n    const [postdata, editdata] = React.useState([]);\n   \n    \n\n    useEffect(async () => {\n        var key = window.location.pathname;\n       var finalkey= key.split(\"/\");\n    \n\n\n    await fetchindividualAssignmentsApi({ _id: finalkey[3] }).then((e) => {\n      editdata(e.data[0]); console.log(e.data);\n    });\n\n  }, []);\n    return (<div>\n<div className=\"assidiv2 container\">\n        <center>\n            <h2 className=\"a\">\n           {postdata.title}\n            \n            </h2>   \n        </center> \n            <div className=\"assidiv4\">\n                Points : {postdata.points}\n            </div>\n            <div className=\"assidiv5\">\n                Due Date : {postdata.dueDate} \n            </div>\n            <div className=\"assidiv5\">\n                Time : {postdata.dueTime} \n            </div>\n            </div>\n           \n        <hr/>\n      <div className=\"assiindiv container\">\n    <p> {postdata.instruction}</p>\n      </div>\n <div className=\"assiindiv1 container\">\n <button type=\"button\" class=\"btn btn-primary assiindiv2\">View Assignment</button>\n </div>\n <hr/>\n <div className=\"assiindiv6 container \">\n     <h3>Your Work</h3>\n\n <button type=\"upload\" class=\"btn btn-primary assiindiv2\">UPLOAD</button>\n </div>\n\n    </div>);\n}","/home/aditya/my-app/digital class from 24march/client/src/pages/registration.js",[],"/home/aditya/my-app/digital class from 24march/client/src/pages/Assignment_teacher.js",["189","190","191"],"import React, { useState } from \"react\";\nimport Login from \"../components/Login\";\nimport Logout from \"../components/Logout\";\nimport Teachercard from \"../components/assignmentForm/teacherCard\";\nexport default function home() {\n  return (<div>\n      \n      <center>\n          <h2>\n              Post New Assignment\n          </h2>\n      <Teachercard/>\n      </center>\n\n\n  </div>);\n}\n","/home/aditya/my-app/digital class from 24march/client/src/pages/home.js",["192"],"import React from \"react\";\nimport { getAllClass } from \"../api\";\nimport ClassCard from \"../components/classCard/Cards\";\n\nfunction Home() {\n  const [Class, editClass] = React.useState();\n  React.useEffect(async () => {\n    var classes = await getAllClass();\n    editClass(classes.data);\n  }, []);\n\n  return <div>{Class ? <ClassCard data={Class} /> : \"Loading...\"}</div>;\n}\nexport default Home;\n","/home/aditya/my-app/digital class from 24march/client/src/pages/lecturePage.js",["193","194"],"import React from \"react\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport FlareIcon from \"@material-ui/icons/Flare\";\nimport GetAppOutlinedIcon from \"@material-ui/icons/GetAppOutlined\";\nimport {\n  List,\n  ListItem,\n  ListItemAvatar,\n  Avatar,\n  ListItemText,\n  IconButton,\n  Button,\n  ListItemSecondaryAction,\n} from \"@material-ui/core\";\nimport { getLecture, setCompleted, setBookmark } from \"../api\";\nimport { useLocation } from \"react-router-dom\";\n\nfunction getRandom() {\n  return Math.floor((Math.random() * 50 + 1) / 5);\n}\n\nexport default function LecturePage() {\n  var backgroundLocation =\n    \"/images/background\" + getRandom().toString() + \".jfif\";\n\n  const location = useLocation();\n  const [data, editData] = React.useState({\n    completed: false,\n    bookmark: false,\n    color1: \"red\",\n    color2: \"green\",\n    title: \"temp\",\n    topics: [\n      { topic: \"topic1\", imp: 0 },\n      { topic: \"topic2\", imp: 1 },\n    ],\n    files: [{ name: \"file1\" }],\n    assignmentKey: \"TEMP000\",\n    rollNo: \"19400\",\n  });\n\n  const SetCompleted = async () => {\n    var key = window.location.pathname;\n    key = key.substring(9, key.length);\n    await setCompleted(key, data.rollNo).then((res) => {\n      console.log(res);\n    });\n    editData({ ...data, completed: true });\n  };\n  const ToggleBookmark = async () => {\n    var key = window.location.pathname;\n    key = key.substring(9, key.length);\n    await setBookmark(key, data.rollNo).then((res) => {\n      console.log(res);\n    });\n    editData({ ...data, bookmark: !data.bookmark });\n  };\n\n  React.useEffect(async () => {\n    var key = window.location.pathname;\n    key = key.substring(9, key.length);\n    editData({ ...data, assignmentKey: key });\n    await getLecture({ assignmentKey: key }).then((res) => {\n      editData({\n        ...data,\n        topics: res.data[0].topics,\n        files: res.data[0].files,\n        title: location.state.title,\n        bookmark: location.state.bookmark,\n        completed: location.state.completed,\n        rollNo: location.state.rollNo,\n      });\n      console.log(data);\n    });\n  }, []);\n\n  return (\n    <diV\n      style={{\n        alignItems: \"center\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        backgroundImage: `url(${backgroundLocation})`,\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center center\",\n        backgroundRepeat: \"no-repeat\",\n        height: \"100vh\",\n      }}\n    >\n      <div\n        style={{\n          backgroundColor: \"rgb(200,200,200,0.8)\",\n          justifyContent: \"center\",\n          borderRadius: \"10px\",\n          width: \"80vh\",\n          marginTop: \"30px\",\n        }}\n      >\n        <div\n          style={{\n            alignItems: \"center\",\n            width: \"100%\",\n            justifyContent: \"center\",\n            display: \"flex\",\n            fontSize: \"30px\",\n            fontWeight: \"600\",\n            color: `${data.color1}`,\n            textAlign: \"center\",\n            textDecoration: \"underline red\",\n          }}\n        >\n          {data.title}\n        </div>\n        <div\n          style={{\n            alignItem: \"center\",\n            justifyContent: \"center\",\n            padding: \"10px\",\n            paddingBottom: \"0px\",\n          }}\n        >\n          <List style={{ width: \"100%\" }}>\n            {data.topics.map((unit, index) => {\n              return (\n                <ListItem\n                  style={{\n                    backgroundColor: \"rgb(237,237,237,0.5)\",\n                    borderRadius: \"10px\",\n                    marginBottom: \"10px\",\n                    color: \"blue\",\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  <ListItemAvatar>\n                    <Avatar>\n                      <IconButton\n                        style={{\n                          backgroundColor: \"white\",\n                          color: \"#007FFF\",\n                          opacity: \"1\",\n                          height: \"100%\",\n                          width: \"100%\",\n                          border: \"3px solid #007FFF\",\n                          alignItems: \"center\",\n                          justifyContent: \"center\",\n                        }}\n                      >\n                        {unit.imp === 1 ? (\n                          <FlareIcon className=\"listIcon\" />\n                        ) : (\n                          <ChevronRightIcon className=\"listIcon\" />\n                        )}\n                      </IconButton>\n                    </Avatar>\n                  </ListItemAvatar>\n                  <ListItemText primary={unit.topic} />\n                </ListItem>\n              );\n            })}\n          </List>\n        </div>\n        <div\n          style={{\n            alignItem: \"center\",\n            justifyContent: \"center\",\n            paddingRight: \"10px\",\n            paddingLeft: \"10px\",\n          }}\n        >\n          <List style={{ width: \"100%\" }}>\n            {data.files.map((unit, index) => {\n              return (\n                <ListItem\n                  style={{\n                    backgroundColor: \"rgb(237,237,237,0.3)\",\n                    opacity: \"1\",\n                    borderRadius: \"10px\",\n                    marginBottom: \"10px\",\n                    color: \"blue\",\n                  }}\n                >\n                  <ListItemText>\n                    {unit.name !== undefined ? unit.name : \"File\"}\n                  </ListItemText>\n                  <ListItemSecondaryAction edge=\"end\" aria-label=\"delete\">\n                    <IconButton style={{ color: \"#007FFF\" }} onClick={() => {}}>\n                      <GetAppOutlinedIcon />\n                    </IconButton>\n                  </ListItemSecondaryAction>\n                </ListItem>\n              );\n            })}\n          </List>\n        </div>\n        <div\n          style={{\n            alignItem: \"center\",\n            justifyContent: \"center\",\n            padding: \"10px\",\n            paddingBottom: \"0px\",\n            paddingTop: \"0px\",\n            width: \"100%\",\n          }}\n        >\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            component=\"span\"\n            style={{\n              width: \"100%\",\n              padding: \"10px\",\n              borderRadius: \"10px\",\n              paddingBottom: \"10px\",\n            }}\n            onClick={() => ToggleBookmark()}\n          >\n            {data.bookmark ? \"Remove Bookmark\" : \"Apply Bookmark\"}\n          </Button>\n        </div>\n        <div\n          style={{\n            alignItem: \"center\",\n            justifyContent: \"center\",\n            padding: \"10px\",\n            width: \"100%\",\n            paddingBottom: \"20px\",\n          }}\n        >\n          {data.completed ? (\n            <div\n              style={{\n                color: \"red\",\n                backgroundColor: \"rgb(125,125,125,0.5)\",\n                fontWeight: \"bold\",\n                borderRadius: \"10px\",\n                alignItem: \"center\",\n                display: \"flex\",\n                justifyContent: \"center\",\n              }}\n            >\n              <diV>Completed !!!</diV>\n            </div>\n          ) : (\n            <Button\n              color=\"secondary\"\n              variant=\"contained\"\n              component=\"span\"\n              style={{\n                width: \"100%\",\n                padding: \"10px\",\n                borderRadius: \"10px\",\n              }}\n              onClick={() => SetCompleted()}\n            >\n              Mark Completed\n            </Button>\n          )}\n        </div>\n      </div>\n    </diV>\n  );\n}\n","/home/aditya/my-app/digital class from 24march/client/src/pages/class.js",["195","196"],"import React from \"react\";\nimport AStatusCard from \"./../components/classStatusCards/AssignmentCard\";\nimport LStatusCard from \"./../components/classStatusCards/LectureCard\";\nimport PStatusCard from \"./../components/classStatusCards/PracticeCard\";\nimport CStatusCard from \"./../components/classStatusCards/ChatCard\";\n//import ClassAssignmentTable from \"../components/classFrames/assignment\";\nimport ClassAssignmentTable from \"../pages/Assignment_student1\";\nimport ClassLectureTable from \"../components/classFrames/lecture\";\nimport ClassPracticeTable from \"../components/classFrames/practice\";\nimport Button from \"@material-ui/core/Button\";\nimport { useLocation } from \"react-router-dom\";\nimport { getAllLecture, getStatus } from \"../api\";\nimport { useHistory } from \"react-router-dom\";\nimport ChatPage from \"./chat\";\n\nexport default function Class() {\n  const LECTURE = \"lecture\";\n  const ASSIGNMENT = \"assignment\";\n  const PRACTICE = \"practice\";\n  const CHAT = \"chat\";\n  const [activeFrame, changeFrame] = React.useState({ frame: LECTURE });\n  const location = useLocation();\n  const [classLectures, editClassLectures] = React.useState([]);\n  const [classStatus, editClassStatus] = React.useState([]);\n  const [classData, editData] = React.useState({\n    headBackgroundColor: \"green\",\n    headTextColor: \"white\",\n    bodyBackgroundColor: \"#014182\",\n    bodyBlockColor: \"white\",\n    subjectCode: \"TEST001\",\n    subjectTeacher: \"IIITU Developers\",\n    subjectName: \"Test Corse 1\",\n    subjectType: \"Temp\",\n    classKey: \"00000\",\n  });\n  const [classTotal, editClassTotal] = React.useState({\n    assignmentTotal: 0,\n    lectureTotal: 0,\n    practiceTotal: 0,\n  });\n  const [classCompleted, editClassCompleted] = React.useState({\n    assignmentCompleted: 0,\n    lectureCompleted: 0,\n    practiceCompleted: 0,\n  });\n\n  const [flag, editFlag] = React.useState({\n    lecture: false,\n    status: false,\n  });\n\n  const history = useHistory();\n  var rollNo = \"19106\";\n\n  React.useEffect(async () => {\n    var data = location.state.data;\n    editData({\n      ...classData,\n      headBackgroundColor: data.headBackgroundColor,\n      headTextColor: data.headTextColor,\n      bodyBackgroundColor: data.bodyBackgroundColor,\n      bodyBlockColor: data.bodyBlockColor,\n      subjectCode: data.subjectCode,\n      subjectTeacher: data.subjectTeacher,\n      subjectName: data.subjectName,\n      subjectType: data.subjectType,\n      classKey: data.classKey,\n    });\n\n    await getAllLecture({ classKey: data.classKey }).then((res) => {\n      editClassLectures(res.data);\n      editClassTotal({ ...classTotal, lectureTotal: res.data.length });\n      console.log(res.data);\n      editFlag({ ...flag, lecture: true });\n    });\n    await getStatus({ classKey: data.subjectCode, rollNo: rollNo }).then(\n      (res) => {\n        editClassStatus(res.data);\n        editClassCompleted({\n          ...classCompleted,\n          lectureCompleted: res.data.length,\n        });\n        console.log(res.data);\n        editFlag({ ...flag, status: true });\n      }\n    );\n  }, []);\n\n  const addClass = () => {\n    history.push({\n      pathname: \"/page/\" + classData.classKey,\n      state: {\n        task: \"ADD\",\n        unit: classLectures[0].unit,\n        unitN: classLectures[0].unitN,\n      },\n    });\n  };\n\n  return (\n    <div>\n      <div\n        style={{ marginTop: \"15px\", marginLeft: \"20px\", marginRight: \"20px\" }}\n      >\n        <center>\n          <div>\n            {/* ----------------------------------------------------------------------------------------------Heading */}\n            <div\n              style={{\n                width: \"100%\",\n                backgroundColor: classData.headBackgroundColor,\n                borderRadius: \"15px\",\n                fontStyle: \"Calibri\",\n              }}\n            >\n              <div\n                style={{\n                  width: \"100%\",\n                  marginTop: \"15px\",\n                  paddingLeft: \"15px\",\n                  paddingRight: \"30px\",\n                  display: \"flex\",\n                  alignContent: \"space-between\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <div\n                  style={{\n                    color: classData.headTextColor,\n                    fontSize: \"11px\",\n                    fontWeight: \"bold\",\n                    alignSelf: \"left\",\n                    marginTop: \"10px\",\n                  }}\n                >\n                  {classData.subjectCode}\n                </div>\n                <div\n                  style={{\n                    color: classData.headTextColor,\n                    fontSize: \"11px\",\n                    fontWeight: \"bold\",\n                    alignSelf: \"right\",\n                    marginTop: \"10px\",\n                  }}\n                >\n                  {classData.subjectTeacher}\n                </div>\n              </div>\n              <div\n                style={{\n                  color: classData.headTextColor,\n                  fontSize: \"30px\",\n                  fontWeight: \"bold\",\n                  marginTop: \"15px\",\n                }}\n              >\n                {classData.subjectName}\n              </div>\n              <div\n                style={{\n                  fontSize: \"11px\",\n                  fontWeight: \"bold\",\n                  color: classData.headTextColor,\n                  alignContent: \"center\",\n                  justifyContent: \"center\",\n                  marginTop: \"15px\",\n                  paddingBottom: \"15px\",\n                }}\n              >\n                {classData.subjectType}\n              </div>\n            </div>\n          </div>\n\n          <div\n            style={{\n              border: \"2px solid\",\n              borderRadius: \"15px\",\n              borderColor: classData.bodyBlockColor,\n              borderWidth: \"3px\",\n              paddingTop: \"10px\",\n              paddingBottom: \"10px\",\n              paddingLeft: \"10px\",\n              paddingRight: \"10px\",\n              marginTop: \"20px\",\n            }}\n          >\n            <div\n              style={{\n                width: \"100%\",\n                show: \"flex\",\n                justifyContent: \"space-around\",\n              }}\n              className=\"row\"\n            >\n              {/* -----------------------------------------------------------------------Present-Status */}\n              <div\n                style={{ margin: \"5px\" }}\n                onClick={(e) => {\n                  e.preventDefault();\n                  changeFrame({ ...activeFrame, frame: ASSIGNMENT });\n                }}\n              >\n                <AStatusCard\n                  backgroundColor={classData.bodyBackgroundColor}\n                  foregroundColor={classData.bodyBlockColor}\n                  completed={classCompleted.assignmentCompleted}\n                  total={classTotal.assignmentTotal}\n                />\n              </div>\n              <div\n                style={{ margin: \"5px\" }}\n                onClick={(e) => {\n                  e.preventDefault();\n                  changeFrame({ ...activeFrame, frame: LECTURE });\n                }}\n              >\n                <LStatusCard\n                  backgroundColor={classData.bodyBackgroundColor}\n                  foregroundColor={classData.bodyBlockColor}\n                  completed={classCompleted.lectureCompleted}\n                  total={classTotal.lectureTotal}\n                />\n              </div>\n              <div\n                style={{ margin: \"5px\" }}\n                onClick={(e) => {\n                  e.preventDefault();\n                  changeFrame({ ...activeFrame, frame: PRACTICE });\n                }}\n              >\n                <PStatusCard\n                  backgroundColor={classData.bodyBackgroundColor}\n                  foregroundColor={classData.bodyBlockColor}\n                  completed={classCompleted.practiceCompleted}\n                  total={classTotal.practiceTotal}\n                />\n              </div>\n              <div\n                style={{ margin: \"5px\" }}\n                onClick={(e) => {\n                  e.preventDefault();\n                  changeFrame({ ...activeFrame, frame: CHAT });\n                }}\n              >\n                <CStatusCard\n                  backgroundColor={classData.bodyBackgroundColor}\n                  state=\"0\"\n                  foregroundColor={classData.bodyBlockColor}\n                />\n              </div>\n            </div>\n            <div\n              style={{\n                paddingTop: \"20px\",\n                justifyContent: \"space-around\",\n                color: classData.bodyBackgroundColor,\n                fontWeight: \"600\",\n                display: \"flex\",\n              }}\n            ></div>\n            <diV\n              style={{\n                width: \"100%\",\n                display: \"flex\",\n                marginLeft: \"25px\",\n                paddingBottom: \"5px\",\n                fontWeight: \"800\",\n                textColor: `${classData.headTextColor}`,\n              }}\n            >\n              {activeFrame.frame === \"LECTURE\" ? (\n                rollNo === \"TEACHER\" ? (\n                  <diV>\n                    <Button\n                      onClick={() => {\n                        addClass();\n                      }}\n                      style={{\n                        fontWeight: \"700\",\n                      }}\n                      color=\"secondary\"\n                    >\n                      + Add\n                    </Button>\n                  </diV>\n                ) : (\n                  `${rollNo}:`\n                )\n              ) : (\n                \"\"\n              )}\n            </diV>\n            <div>\n              {activeFrame.frame === ASSIGNMENT ? (\n                <ClassAssignmentTable\n                  backColor={classData.bodyBackgroundColor}\n                  frontColor={classData.headBackgroundColor}\n                />\n              ) : activeFrame.frame === LECTURE ? (\n                <ClassLectureTable\n                  backColor={classData.bodyBackgroundColor}\n                  frontColor={classData.headBackgroundColor}\n                  lectures={classLectures}\n                  status={classStatus}\n                  rollNo={rollNo}\n                />\n              ) : activeFrame.frame === PRACTICE ? (\n                <ClassPracticeTable\n                  backColor={classData.bodyBackgroundColor}\n                  frontColor={classData.headBackgroundColor}\n                />\n              ) : (\n                <ChatPage\n                  classKey={classData.classKey}\n                  rollNo={rollNo}\n                  headBackgroundColor={classData.headBackgroundColor}\n                  bodyBackgroundColor={classData.bodyBackgroundColor}\n                />\n              )}\n            </div>\n          </div>\n        </center>\n      </div>\n    </div>\n  );\n}\n","/home/aditya/my-app/digital class from 24march/client/src/pages/cardPage.js",["197","198"],"import React from \"react\";\n\nimport ClassRoomCard from \"../components/classPageCards/ClassRoom\";\nimport ClassLectureCard from \"../components/classPageCards/ClassLecture\";\n\nfunction getRandom() {\n  return Math.floor((Math.random() * 50 + 1) / 5);\n}\n\nexport default function CardPage() {\n  var subjectTeacher = \"IIITU Developers\";\n  var backgroundLocation =\n    \"/images/background\" + getRandom().toString() + \".jfif\";\n  return (\n    <div style={{ height: \"100vh\" }}>\n      <div\n        style={{\n          backgroundImage: `url(${backgroundLocation})`,\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center center\",\n          backgroundRepeat: \"no-repeat\",\n          backgroundColor: \"black\",\n          height: \"100vh\",\n          show: \"flex\",\n          backgroundAttachment: \"fixed\",\n        }}\n      >\n        <center>\n          <div\n            style={{\n              paddingTop: \"10vh\",\n              paddingBottom: \"10vh\",\n              scrollBehavior: \"smooth\",\n            }}\n          >\n            <div\n              style={{\n                backgroundColor: \"rgb(200,200,200,0.8)\",\n                justifyContent: \"center\",\n                borderRadius: \"10px\",\n                width: \"70vh\",\n              }}\n            >\n              {/* <ClassRoomCard subjectTeacher={subjectTeacher} task=\"ADD\" /> */}\n              <ClassLectureCard\n                task=\"ADD\"\n                unitN={1}\n                unit=\"React\"\n                classKey=\"TEST001\"\n              />\n            </div>\n          </div>\n        </center>\n      </div>\n    </div>\n  );\n}\n","/home/aditya/my-app/digital class from 24march/client/src/pages/chat.js",["199","200","201","202","203"],"import React from \"react\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport { sendMessage, getMessage } from \"../api\";\n\nexport default function ChatPage({\n  classKey,\n  rollNo,\n  headBackgroundColor,\n  bodyBackgroundColor,\n}) {\n  const [chat, editChat] = React.useState(\"\");\n  const [send, editSend] = React.useState(0);\n  const [anonymous, editAnonymous] = React.useState(false);\n  const [messages, editMessages] = React.useState([]);\n  const [updated, updateMessage] = React.useState(0);\n  const [data, editData] = React.useState({\n    rollNo: \"19401\",\n    classKey: \"TEST001THEORY\",\n  });\n\n  React.useEffect(() => {\n    updateMessage(updated + 1);\n  }, []);\n  React.useEffect(async () => {\n    console.log(bodyBackgroundColor);\n    editData({ ...chat, rollNo: rollNo, classKey: classKey });\n    await getMessage({ classKey: classKey, rollNo: rollNo }).then((res) => {\n      editMessages(res.data);\n    });\n    console.log(messages);\n  }, [updated]);\n\n  React.useEffect(async () => {\n    const zeroPad = (num, places) => String(num).padStart(places, \"0\");\n    var today = new Date();\n    var year = today.getFullYear();\n    var month = today.getMonth();\n    month = zeroPad(month, 2);\n    var day = today.getDate();\n    day = zeroPad(day, 2);\n    var hour = today.getHours();\n    hour = zeroPad(hour, 2);\n    var min = today.getMinutes();\n    min = zeroPad(min, 2);\n    var sec = today.getSeconds();\n    sec = zeroPad(sec, 2);\n    var time =\n      year + \":\" + month + \":\" + day + \":\" + hour + \":\" + min + \":\" + sec;\n    if (send > 0)\n      await sendMessage({\n        classKey: data.classKey,\n        sender: data.rollNo,\n        time: time,\n        message: chat,\n        anonymous: anonymous,\n      }).then((e) => console.log(e));\n    editChat(\"\");\n    updateMessage(updated + 1);\n  }, [send]);\n\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        height: \"100%\",\n        alignItems: \"flex-end\",\n        justifyContent: \"center\",\n      }}\n    >\n      <div>\n        {messages.map((unit) => (\n          <div\n            style={{\n              border: `2px solid white`,\n              backgroundColor: headBackgroundColor,\n              margin: \"5px\",\n              borderRadius: \"15px\",\n              justifyContent: \"left\",\n              display: \"flex\",\n              padding: \"10px\",\n            }}\n          >\n            <div\n              style={{\n                color: `#FF9800`,\n                fontWeight: \"bold\",\n                marginRight: \"4px\",\n              }}\n            >\n              <span>{`${unit.sender}:`}</span>\n            </div>\n\n            <diV style={{ color: \"white\" }}>{unit.message}</diV>\n          </div>\n        ))}\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          width: \"90%\",\n          justifyContent: \"center\",\n          alignItems: \"flex-end\",\n        }}\n      >\n        <div>\n          <Button\n            size=\"large\"\n            type=\"submit\"\n            // className={classes.button}\n            style={{\n              border: `3px solid ${bodyBackgroundColor}`,\n              backgroundColor: bodyBackgroundColor,\n              color: \"white\",\n              marginBottom: \"20px\",\n              marginRight: \"10px\",\n            }}\n            onClick={() => {\n              editAnonymous(!anonymous);\n            }}\n          >\n            {anonymous ? \"Anonymous\" : `${data.rollNo}`}\n          </Button>\n        </div>\n        <div style={{ width: \"95%\", marginBottom: \"25px\" }}>\n          <TextField\n            variant=\"standard\"\n            name=\"message\"\n            fullWidth\n            label=\"Message\"\n            value={chat}\n            onChange={(e) => {\n              editChat(e.target.value);\n            }}\n            error={chat.trim().length > 0 ? false : true}\n            style={{ marginTop: \"8px\" }}\n            // className={classes.textField}\n          />\n        </div>\n        <div>\n          <Button\n            size=\"large\"\n            type=\"submit\"\n            // className={classes.button}\n            style={{\n              border: `3px solid ${bodyBackgroundColor}`,\n              backgroundColor: bodyBackgroundColor,\n              color: \"white\",\n              marginBottom: \"20px\",\n              marginLeft: \"10px\",\n            }}\n            onClick={() => {\n              editSend(send + 1);\n            }}\n          >\n            Send\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/home/aditya/my-app/digital class from 24march/client/src/reducer/allAssignments.js",["204","205"],"import * as actionType from \"../constants/index\";\nimport { ALL_ASSIGNMENTS } from \"../constants\";\nimport { addClass } from \"../actions/index\";\n\nconst assignmentReducer = (state = [], action) => {\n  \n   console.log(action.type);\n   \n  switch (action.type) {\n    case ALL_ASSIGNMENTS:\n    { return [action.payload.data];\n    }  \n    default:\n    {  console.log(\"Invalid Action Type On assignment Reducer\");\n      \n      \n      return state;\n  }\n}\n};\n\nexport default assignmentReducer;\n\n\n","/home/aditya/my-app/digital class from 24march/client/src/reducer/user.js",[],"/home/aditya/my-app/digital class from 24march/client/src/reducer/auth.js",[],"/home/aditya/my-app/digital class from 24march/client/src/reducer/class.js",["206"],"import * as actionType from \"../constants/index\";\nimport { ADD_CLASS } from \"../constants\";\nimport { addClass } from \"../actions/index\";\nconst classReducer = (state = [], action) => {\n  // console.log(action.payload);\n  switch (action.type) {\n    case ADD_CLASS:\n      // return [...state, action.payload.data];\n      addClass(\n        action.payload.data,\n        window.__REDUX_DEVTOOLS_EXTENSION__ &&\n          window.__REDUX_DEVTOOLS_EXTENSION__()\n      );\n      return [{ state: \"online\" }];\n    default:\n      console.log(\"Invalid Action Type On classReducer\");\n      return state;\n  }\n};\n\nexport default classReducer;\n","/home/aditya/my-app/digital class from 24march/client/src/components/registrationForm/student.js",["207"],"import React from \"react\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport { STUDENT, MALE, FEMALE } from \"./../../constants\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch } from \"react-redux\";\nimport FileBase from \"react-file-base64\";\nimport { addStudent } from \"./../../actions\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n  },\n  textField: {},\n}));\n\nexport default function StudentForm() {\n  const [userData, setUserData] = React.useState({\n    name: \"\",\n    instituteID: \"\",\n    rank: STUDENT,\n    rollNo: \"\",\n    email: \"\",\n    class: 1,\n    section: \"A\",\n    gender: MALE,\n    profileLink: \"\",\n    images: \"\",\n    dob: \"01-01-2001\",\n  });\n\n  const toggleGender = () => {\n    if (userData.gender === MALE) setUserData({ ...userData, gender: FEMALE });\n    else setUserData({ ...userData, gender: MALE });\n  };\n\n  const classes = useStyles();\n\n  const regExp = RegExp(/^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/);\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = (e) => {\n    console.log(\"Student Submit\");\n    console.log(userData);\n    e.preventDefault();\n    dispatch(addStudent(userData));\n  };\n\n  return (\n    <div style={{ width: \"70%\", paddingBottom: \"100px\" }}>\n      <form noValidate onSubmit={handleSubmit}>\n        <div style={{ paddingBottom: \"60px\" }}>\n          <TextField\n            variant=\"standard\"\n            name=\"name\"\n            fullWidth\n            label=\"Name\"\n            value={userData.name}\n            onChange={(e) => {\n              setUserData({ ...userData, name: e.target.value });\n            }}\n            // helperText=\"At least four characters.\"\n            error={userData.name.trim().length > 3 ? false : true}\n            style={{ marginTop: \"8px\" }}\n            className={classes.textField}\n          />\n          <div style={{ paddingTop: \"60px\" }}>\n            <TextField\n              variant=\"standard\"\n              name=\"rollNo\"\n              fullWidth\n              label=\"Roll no.\"\n              value={userData.teacherID}\n              onChange={(e) => {\n                setUserData({ ...userData, rollNo: e.target.value });\n              }}\n              // helperText=\"At least two characters.\"\n              error={userData.name.trim().length > 2 ? false : true}\n              style={{ marginTop: \"8px\" }}\n              className={classes.textField}\n            />\n          </div>\n          <div style={{ paddingTop: \"60px\" }}>\n            <TextField\n              variant=\"standard\"\n              name=\"instituteID\"\n              fullWidth\n              label=\"Institute ID\"\n              value={userData.instituteID}\n              onChange={(e) => {\n                setUserData({ ...userData, instituteID: e.target.value });\n              }}\n              // helperText=\"At least two characters.\"\n              error={userData.instituteID.trim().length > 2 ? false : true}\n              style={{ marginTop: \"8px\" }}\n              className={classes.textField}\n            />\n          </div>\n          <div style={{ paddingTop: \"60px\" }}>\n            <TextField\n              variant=\"standard\"\n              name=\"email\"\n              fullWidth\n              label=\"Email\"\n              value={userData.email}\n              onChange={(e) => {\n                setUserData({ ...userData, email: e.target.value });\n              }}\n              // helperText=\"Enter proper email address.\"\n              error={regExp.test(userData.email.trim()) ? false : true}\n              style={{ marginTop: \"8px\" }}\n              className={classes.textField}\n            />\n          </div>\n          <div\n            style={{\n              paddingTop: \"60px\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignContent: \"center\",\n            }}\n          >\n            <div\n              style={{\n                paddingLeft: \"50px\",\n                paddingRight: \"50px\",\n              }}\n            >\n              <TextField\n                variant=\"standard\"\n                name=\"class\"\n                fullWidth\n                label=\"Class/Semester/Year\"\n                value={userData.class}\n                onChange={(e) => {\n                  setUserData({ ...userData, class: e.target.value });\n                }}\n                error={userData.class > 0 ? false : true}\n                type=\"number\"\n                style={{ marginTop: \"8px\" }}\n                className={classes.textField}\n              />\n            </div>\n            <div\n              style={{\n                paddingLeft: \"50px\",\n                paddingRight: \"50px\",\n              }}\n            >\n              <TextField\n                variant=\"standard\"\n                name=\"section\"\n                fullWidth\n                label=\"Section/Branch\"\n                value={userData.section}\n                onChange={(e) => {\n                  setUserData({ ...userData, section: e.target.value });\n                }}\n                error={userData.section.trim().length > 0 ? false : true}\n                style={{ marginTop: \"8px\" }}\n                className={classes.textField}\n              />\n            </div>\n          </div>\n          <div\n            style={{\n              paddingTop: \"60px\",\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n            className=\"row\"\n          >\n            <div\n              style={{\n                fontWeight: \"600\",\n                paddingRight: \"10px\",\n                paddingLeft: \"20px\",\n                marginTop: \"10px\",\n                display: \"flex\",\n                height: \"100%\",\n              }}\n            >\n              Gender:\n            </div>\n            <div>\n              <Button\n                onClick={() => toggleGender()}\n                style={{ fontSize: \"18px\" }}\n              >\n                <u>{userData.gender}</u>\n              </Button>\n            </div>\n            <div\n              style={{\n                fontWeight: \"600\",\n                paddingRight: \"20px\",\n                paddingLeft: \"100px\",\n                marginTop: \"15px\",\n                display: \"flex\",\n                height: \"100%\",\n              }}\n            >\n              DOB:\n            </div>\n            <div>\n              <TextField\n                variant=\"standard\"\n                name=\"dob\"\n                fullWidth\n                value={userData.dob}\n                type=\"date\"\n                onChange={(e) => {\n                  setUserData({ ...userData, dob: e.target.value });\n                }}\n                style={{ marginTop: \"8px\" }}\n              />\n            </div>\n          </div>\n          <div style={{ paddingTop: \"60px\" }}>\n            <TextField\n              variant=\"standard\"\n              name=\"profileLink\"\n              fullWidth\n              label=\"Profile Link(Optional)\"\n              value={userData.profileLink}\n              onChange={(e) => {\n                setUserData({ ...userData, profileLink: e.target.value });\n              }}\n              style={{ marginTop: \"8px\" }}\n            />\n          </div>\n          <div\n            style={{\n              paddingTop: \"10px\",\n              justifyContent: \"left\",\n              display: \"flex\",\n              paddingTop: \"60px\",\n            }}\n          >\n            <div\n              style={{\n                fontWeight: \"600\",\n                verticalAlign: \"middle\",\n                paddingRight: \"10px\",\n              }}\n            >\n              Add Profile Picture\n            </div>\n            <FileBase\n              type=\"file\"\n              multiple={false}\n              onDone={({ base64 }) =>\n                setUserData({ ...userData, images: base64 })\n              }\n            />\n          </div>\n          <div style={{ paddingTop: \"20px\" }}>\n            <Button\n              size=\"large\"\n              type=\"submit\"\n              className={classes.button}\n              style={{ border: \"3px solid blueviolet\", color: \"blueviolet\" }}\n            >\n              Submit\n            </Button>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n}\n","/home/aditya/my-app/digital class from 24march/client/src/components/registrationForm/admin.js",["208"],"import React from \"react\";\nimport { Button, TextField, Menu, MenuItem } from \"@material-ui/core\";\nimport {\n  COLLEGE,\n  PRIMARY_SCHOOL,\n  SECONDARY_SCHOOL,\n  UNIVERSITY,\n  YEAR,\n  SEMESTER,\n  CLASS,\n  BRANCH,\n  SECTION,\n  DIRECTOR,\n  PRINCIPLE,\n  ADMIN,\n} from \"./../../constants\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FileBase from \"react-file-base64\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n  },\n  textField: {},\n}));\n\nexport default function AdminForm() {\n  \n  const [userData, setUserData] = React.useState({\n    name: \"name\",\n    instituteName: \"abc School\",\n    description: \"\",\n    instituteType: SECONDARY_SCHOOL,\n    choiceYear: CLASS,\n    yearQuantity: 3,\n    image: \"\",\n    choiceBranch: SECTION,\n    branchQuantity: 1,\n    designation: PRINCIPLE,\n    profileLink: \"\",\n    rank: ADMIN,\n  });\n\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [anchorElYear, setAnchorElYear] = React.useState(null);\n  const [anchorElBranch, setAnchorElBranch] = React.useState(null);\n\n  const handleMenuItemClick = (event, type) => {\n    setUserData({ ...userData, instituteType: type });\n    setAnchorEl(null);\n  };\n\n  const handleMenuItemYearClick = (event, type) => {\n    setUserData({ ...userData, choiceYear: type });\n    setAnchorElYear(null);\n  };\n\n  const handleMenuItemBranchClick = (event, type) => {\n    setUserData({ ...userData, choiceBranch: type });\n    setAnchorElBranch(null);\n  };\n\n  const toggleDesignation = () => {\n    if (userData.designation === PRINCIPLE)\n      setUserData({ ...userData, designation: DIRECTOR });\n    else setUserData({ ...userData, designation: PRINCIPLE });\n  };\n\n  function handleSubmit() {}\n  return (\n    <div style={{ width: \"70%\", paddingBottom: \"100px\" }}>\n      <form noValidate onSubmit={handleSubmit}>\n        <div className=\"row\" style={{ paddingBottom: \"60px\" }}>\n          <div\n            style={{\n              width: \"15%\",\n              alignContent: \"center\",\n              justifyContent: \"left\",\n              display: \"flex\",\n              paddingTop: \"14px\",\n            }}\n          >\n            <Button\n              onClick={() => toggleDesignation()}\n              style={{ fontSize: \"18px\" }}\n            >\n              <u>{userData.designation}</u>\n            </Button>\n          </div>\n          <div style={{ width: \"83%\" }}>\n            <TextField\n              variant=\"standard\"\n              name=\"name\"\n              fullWidth\n              label=\"Full Name\"\n              value={userData.name}\n              onChange={(e) => {\n                setUserData({ ...userData, name: e.target.value });\n              }}\n              helperText=\"At least four characters.\"\n              error={userData.name.trim().length > 3 ? false : true}\n              style={{ marginTop: \"8px\" }}\n              className={classes.textField}\n            />\n          </div>\n        </div>\n        <div style={{ paddingBottom: \"60px\" }}>\n          <TextField\n            variant=\"standard\"\n            name=\"profileLink\"\n            fullWidth\n            label=\"Profile Link(Optional)\"\n            value={userData.profileLink}\n            onChange={(e) => {\n              setUserData({ ...userData, profileLink: e.target.value });\n            }}\n            style={{ marginTop: \"8px\" }}\n          />\n        </div>\n        <div style={{ paddingBottom: \"60px\" }}>\n          <TextField\n            variant=\"standard\"\n            name=\"description\"\n            fullWidth\n            label=\"Description(Optional)\"\n            value={userData.description}\n            onChange={(e) => {\n              setUserData({ ...userData, description: e.target.value });\n            }}\n            style={{ marginTop: \"8px\" }}\n            multiline\n            rows={4}\n          />\n        </div>\n        <TextField\n          variant=\"standard\"\n          name=\"instituteName\"\n          fullWidth\n          label=\"Institute Name\"\n          value={userData.instituteName}\n          onChange={(e) => {\n            setUserData({ ...userData, instituteName: e.target.value });\n          }}\n          helperText=\"At least five characters.\"\n          error={userData.instituteName.trim().length > 5 ? false : true}\n          style={{ marginTop: \"8px\" }}\n        />\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"left\",\n            alignItems: \"center\",\n            marginTop: \"60px\",\n          }}\n          className=\"row\"\n        >\n          <div\n            style={{\n              fontWeight: \"600\",\n              verticalAlign: \"middle\",\n              paddingLeft: \"10px\",\n            }}\n          >\n            Institute Type:\n          </div>\n          <Button\n            aria-controls=\"simple-menu\"\n            aria-haspopup=\"true\"\n            onClick={(event) => setAnchorEl(event.currentTarget)}\n          >\n            <u>{userData.instituteType.replace(\"_\", \" \")}</u>\n          </Button>\n          <Menu\n            id=\"simple-menu\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={(event) => setAnchorEl(null)}\n          >\n            <MenuItem\n              onClick={(event) => handleMenuItemClick(event, PRIMARY_SCHOOL)}\n            >\n              Primary School\n            </MenuItem>\n            <MenuItem\n              onClick={(event) => handleMenuItemClick(event, SECONDARY_SCHOOL)}\n            >\n              Secondary School\n            </MenuItem>\n            <MenuItem onClick={(event) => handleMenuItemClick(event, COLLEGE)}>\n              College\n            </MenuItem>\n            <MenuItem\n              onClick={(event) => handleMenuItemClick(event, UNIVERSITY)}\n            >\n              University\n            </MenuItem>\n          </Menu>\n        </div>\n        <div\n          style={{\n            paddingTop: \"10px\",\n            justifyContent: \"left\",\n            display: \"flex\",\n            paddingTop: \"60px\",\n          }}\n        >\n          <div\n            style={{\n              fontWeight: \"600\",\n              verticalAlign: \"middle\",\n              paddingRight: \"10px\",\n            }}\n          >\n            Add Profile Picture\n          </div>\n          <FileBase\n            type=\"file\"\n            multiple={false}\n            onDone={({ base64 }) =>\n              setUserData({ ...userData, images: base64 })\n            }\n          />\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            marginTop: \"8px\",\n          }}\n          className=\"row\"\n        >\n          <div\n            style={{\n              width: \"50%\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              marginTop: \"60px\",\n            }}\n          >\n            <div>\n              <Button\n                aria-controls=\"simple-menu\"\n                aria-haspopup=\"true\"\n                onClick={(event) => setAnchorElYear(event.currentTarget)}\n              >\n                <u>{userData.choiceYear}</u>\n              </Button>\n              <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorElYear}\n                keepMounted\n                open={Boolean(anchorElYear)}\n                onClose={(event) => setAnchorElYear(null)}\n              >\n                <MenuItem\n                  onClick={(event) => handleMenuItemYearClick(event, YEAR)}\n                >\n                  Year\n                </MenuItem>\n                <MenuItem\n                  onClick={(event) => handleMenuItemYearClick(event, SEMESTER)}\n                >\n                  Semester\n                </MenuItem>\n                <MenuItem\n                  onClick={(event) => handleMenuItemYearClick(event, CLASS)}\n                >\n                  Class\n                </MenuItem>\n              </Menu>\n            </div>\n            <div style={{ width: \"60px\" }}>\n              <TextField\n                variant=\"outlined\"\n                name=\"yearValue\"\n                fullWidth\n                error={userData.yearQuantity > 1 ? false : true}\n                value={userData.yearQuantity}\n                onChange={(e) => {\n                  setUserData({ ...userData, yearQuantity: e.target.value });\n                }}\n                style={{ fontSize: \"10px\" }}\n                type=\"number\"\n                inputProps={{\n                  style: {\n                    padding: 3,\n                  },\n                }}\n              />\n            </div>\n          </div>\n          <div\n            style={{\n              width: \"50%\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              marginTop: \"60px\",\n            }}\n          >\n            <div>\n              <Button\n                aria-controls=\"simple-menu\"\n                aria-haspopup=\"true\"\n                onClick={(event) => setAnchorElBranch(event.currentTarget)}\n              >\n                <u>{userData.choiceBranch}</u>\n              </Button>\n              <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorElBranch}\n                keepMounted\n                open={Boolean(anchorElBranch)}\n                onClose={(event) => setAnchorElBranch(null)}\n              >\n                <MenuItem\n                  onClick={(event) => handleMenuItemBranchClick(event, BRANCH)}\n                >\n                  Branch\n                </MenuItem>\n                <MenuItem\n                  onClick={(event) => handleMenuItemBranchClick(event, SECTION)}\n                >\n                  Section\n                </MenuItem>\n              </Menu>\n            </div>\n            <div style={{ width: \"60px\" }}>\n              <TextField\n                variant=\"outlined\"\n                name=\"yearValue\"\n                fullWidth\n                error={userData.yearQuantity > 0 ? false : true}\n                value={userData.yearQuantity}\n                onChange={(e) => {\n                  setUserData({ ...userData, yearQuantity: e.target.value });\n                }}\n                style={{ fontSize: \"10px\" }}\n                type=\"number\"\n                inputProps={{\n                  style: {\n                    padding: 3,\n                  },\n                }}\n              />\n            </div>\n          </div>\n        </div>\n        <div style={{ paddingTop: \"20px\" }}>\n          <Button\n            size=\"large\"\n            type=\"submit\"\n            className={classes.button}\n            style={{ border: \"3px solid blueviolet\", color: \"blueviolet\" }}\n          >\n            Submit\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n}\n","/home/aditya/my-app/digital class from 24march/client/src/components/assignmentForm/teacherCard.js",["209","210","211","212","213","214","215","216","217","218","219"],"import React from \"react\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport { TEACHER, MALE, FEMALE } from \"./../../constants\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FileBase from \"react-file-base64\";\nimport { addTeacher } from \"./../../actions\";\n//imp code template below                    \nimport axios from \"axios\";\nimport  { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n//for redirecting to\nimport  { Redirect } from 'react-router-dom'\nimport { useHistory } from \"react-router-dom\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n  },\n  textField: {},\n}));\n\nexport default function TeacherForm() {\n  const [userData, setUserData] = React.useState({\n    name: \"\",//title\n    instituteID: \"\",//POINTS IN ASSIGNMENT\n    rank: TEACHER,\n    teacherID: \"\",//instructions\n    email: \"\",\n    classes: \"\",//semester\n    sections: \"\",//branch\n    profileLink: \"\",//DRIVE LINK FOR ASSIGNMENT\n    images: \"\",\n    driveLink: \"\",\n    DOB: \"01-01-2001\",//due date\n    DOB1:\"\"//due time\n  });\n  let history = useHistory();\n\n  const handleSubmit = async (e) => {\n    \n    console.log(\"Teacher Submit\");\n    console.log(userData);\n    e.preventDefault();\n    console.log(userData);\n  \n    const assignmentdata = {\n      code :\"TEST001\",\n      classKey:\"TEST001THEORY\",\n      title: userData.name,\n      points: userData.instituteID,\n      instruction: userData.teacherID,\n      drivelink: userData.profileLink,\n      dueDate: userData.DOB,\n      dueTime: userData.DOB1,\n      semester: userData.classes,\n      branch: userData.sections\n    };\n    console.log(assignmentdata);\n    \n    e.preventDefault();\n    try {\n      const dataw = await axios.post(\n        \"http://localhost:5005/makeassignment/postnewassignment\",\n        assignmentdata\n      );\n      \n      console.log(dataw.data);\n      \n      alert(\"Your Assignment has been posted successfully \");\n      //console.log(postdata);\n     // history.goBack()\n     //e.history.push('/');\n     window.history.back();\n\n    } catch (err) {\n      alert(\"error occurred while posting assignment\");\n      console.log(err);\n    }\n    \n  };\n  \n\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n\n  const regExp = RegExp(/^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/);\n\n  \n\n  return (\n    <div style={{ width: \"70%\", paddingBottom: \"100px\" }}>\n      <form noValidate onSubmit={handleSubmit}>\n        <div style={{ paddingBottom: \"60px\" }}>\n          <TextField\n            variant=\"standard\"\n            name=\"name\"\n            fullWidth\n            label=\"Title\"\n            value={userData.name}\n            onChange={(e) => {\n              setUserData({ ...userData, name: e.target.value });\n            }}\n            // helperText=\"At least four characters.\"\n            error={userData.name.trim().length > 3 ? false : true}\n            style={{ marginTop: \"8px\" }}\n            className={classes.textField}\n          />\n          <div style={{ paddingTop: \"60px\" }}>\n            <TextField\n              variant=\"standard\"\n              name=\"teacherID\"\n              fullWidth\n              label=\"Instructions.\"\n              value={userData.teacherID}\n              onChange={(e) => {\n                setUserData({ ...userData, teacherID: e.target.value });\n              }}\n              // helperText=\"At least two characters.\"\n              error={userData.name.trim().length > 2 ? false : true}\n              style={{ marginTop: \"8px\" }}\n              className={classes.textField}\n            />\n          </div>\n          <div style={{ paddingTop: \"60px\" }}>\n            <TextField\n              variant=\"standard\"\n              name=\"instituteID\"\n              fullWidth\n              label=\"Points\"\n              value={userData.instituteID}\n              onChange={(e) => {\n                setUserData({ ...userData, instituteID: e.target.value });\n              }}\n              // helperText=\"At least two characters.\"\n              error={userData.instituteID.trim().length > 2 ? false : true}\n              style={{ marginTop: \"8px\" }}\n              className={classes.textField}\n            />\n          </div>\n          \n          <div\n            style={{\n              paddingTop: \"60px\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignContent: \"center\",\n            }}\n          >\n            <div\n              style={{\n                paddingLeft: \"50px\",\n                paddingRight: \"50px\",\n              }}\n            >\n              <TextField\n                variant=\"standard\"\n                name=\"class\"\n                fullWidth\n                label=\"Semesters\"\n                value={userData.class}\n                onChange={(e) => {\n                  setUserData({\n                    ...userData,\n                    classes: e.target.value\n                  });\n                }}\n                error={userData.classes.length > 0 ? false : true}\n                style={{ marginTop: \"8px\" }}\n                className={classes.textField}\n              />\n            </div>\n            <div\n              style={{\n                paddingLeft: \"50px\",\n                paddingRight: \"50px\",\n              }}\n            >\n              <TextField\n                variant=\"standard\"\n                name=\"section\"\n                fullWidth\n                label=\"Branches\"\n                value={userData.sections}\n                onChange={(e) => {\n                  setUserData({\n                    ...userData,\n                    sections: e.target.value\n                  });\n                }}\n                error={userData.sections.length > 0 ? false : true}\n                style={{ marginTop: \"8px\" }}\n                className={classes.textField}\n              />\n            </div>\n          </div>\n          <div\n            style={{\n              paddingTop: \"60px\",\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n            className=\"row\"\n          >\n           \n            <div\n              style={{\n                fontWeight: \"600\",\n                paddingRight: \"20px\",\n                paddingLeft: \"100px\",\n                marginTop: \"15px\",\n                display: \"flex\",\n                height: \"100%\",\n              }}\n            >\n              Due Date:\n            </div>\n            <div>\n              <TextField\n                variant=\"standard\"\n                name=\"DOB\"\n                fullWidth\n                value={userData.DOB}\n                type=\"date\"\n                onChange={(e) => {\n                  setUserData({ ...userData, DOB: e.target.value });\n                }}\n                style={{ marginTop: \"8px\" }}\n              />\n            </div>\n            \n            <div\n              style={{\n                fontWeight: \"600\",\n                paddingRight: \"20px\",\n                paddingLeft: \"100px\",\n                marginTop: \"15px\",\n                display: \"flex\",\n                height: \"100%\",\n              }}\n            >\n              Time:\n            </div>\n            <div>\n              <TextField\n                variant=\"standard\"\n                name=\"DOB1\"\n                fullWidth\n                value={userData.DOB1}\n                type=\"time\"\n                onChange={(e) => {\n                  setUserData({ ...userData, DOB1: e.target.value });\n                }}\n                style={{ marginTop: \"8px\" }}\n              />\n            </div>\n          </div>\n          <div style={{ paddingTop: \"60px\" }}>\n            <TextField\n              variant=\"standard\"\n              name=\"profileLink\"\n              fullWidth\n              label=\"Drive Link(Optional)\"\n              value={userData.profileLink}\n              onChange={(e) => {\n                setUserData({ ...userData, profileLink: e.target.value });\n              }}\n              style={{ marginTop: \"8px\" }}\n            />\n          </div>\n          <div\n            style={{\n              paddingTop: \"10px\",\n              justifyContent: \"left\",\n              display: \"flex\",\n              paddingTop: \"60px\",\n            }}\n          >\n            <div\n              style={{\n                fontWeight: \"600\",\n                verticalAlign: \"middle\",\n                paddingRight: \"10px\",\n              }}\n            >\n              Add file\n            </div>\n            <FileBase\n              type=\"file\"\n              multiple={false}\n              onDone={({ base64 }) =>\n                setUserData({ ...userData, images: base64 })\n              }\n            />\n          </div>\n          <div style={{ paddingTop: \"20px\" }}>\n            <Button\n              size=\"large\"\n              type=\"submit\"\n              className={classes.button}\n              style={{ border: \"3px solid blueviolet\", color: \"blueviolet\" }}\n            >\n              Submit\n            </Button>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n}\n\n\n","/home/aditya/my-app/digital class from 24march/client/src/components/registrationForm/teacher.js",["220"],"import React from \"react\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport { TEACHER, MALE, FEMALE } from \"./../../constants\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FileBase from \"react-file-base64\";\nimport { useDispatch } from \"react-redux\";\nimport { addTeacher } from \"./../../actions\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n  },\n  textField: {},\n}));\n\nexport default function TeacherForm() {\n  const [userData, setUserData] = React.useState({\n    name: \"\",\n    instituteID: \"\",\n    rank: TEACHER,\n    teacherID: \"\",\n    email: \"\",\n    classes: [],\n    sections: [],\n    gender: MALE,\n    profileLink: \"\",\n    images: \"\",\n    driveLink: \"\",\n    DOB: \"01-01-2001\",\n  });\n\n  const toggleGender = () => {\n    if (userData.gender === MALE) setUserData({ ...userData, gender: FEMALE });\n    else setUserData({ ...userData, gender: MALE });\n  };\n\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n\n  const regExp = RegExp(/^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/);\n\n  const handleSubmit = (e) => {\n    console.log(\"Teacher Submit\");\n    console.log(userData);\n    e.preventDefault();\n    dispatch(addTeacher(userData));\n  };\n\n  return (\n    <div style={{ width: \"70%\", paddingBottom: \"100px\" }}>\n      <form noValidate onSubmit={handleSubmit}>\n        <div style={{ paddingBottom: \"60px\" }}>\n          <TextField\n            variant=\"standard\"\n            name=\"name\"\n            fullWidth\n            label=\"Name\"\n            value={userData.name}\n            onChange={(e) => {\n              setUserData({ ...userData, name: e.target.value });\n            }}\n            // helperText=\"At least four characters.\"\n            error={userData.name.trim().length > 3 ? false : true}\n            style={{ marginTop: \"8px\" }}\n            className={classes.textField}\n          />\n          <div style={{ paddingTop: \"60px\" }}>\n            <TextField\n              variant=\"standard\"\n              name=\"teacherID\"\n              fullWidth\n              label=\"Teacher ID.\"\n              value={userData.teacherID}\n              onChange={(e) => {\n                setUserData({ ...userData, teacherID: e.target.value });\n              }}\n              // helperText=\"At least two characters.\"\n              error={userData.name.trim().length > 2 ? false : true}\n              style={{ marginTop: \"8px\" }}\n              className={classes.textField}\n            />\n          </div>\n          <div style={{ paddingTop: \"60px\" }}>\n            <TextField\n              variant=\"standard\"\n              name=\"instituteID\"\n              fullWidth\n              label=\"Institute ID\"\n              value={userData.instituteID}\n              onChange={(e) => {\n                setUserData({ ...userData, instituteID: e.target.value });\n              }}\n              // helperText=\"At least two characters.\"\n              error={userData.instituteID.trim().length > 2 ? false : true}\n              style={{ marginTop: \"8px\" }}\n              className={classes.textField}\n            />\n          </div>\n          <div style={{ paddingTop: \"60px\" }}>\n            <TextField\n              variant=\"standard\"\n              name=\"email\"\n              fullWidth\n              label=\"Email\"\n              value={userData.email}\n              onChange={(e) => {\n                setUserData({ ...userData, email: e.target.value });\n              }}\n              // helperText=\"Enter proper email address.\"\n              error={regExp.test(userData.email.trim()) ? false : true}\n              style={{ marginTop: \"8px\" }}\n              className={classes.textField}\n            />\n          </div>\n          <div\n            style={{\n              paddingTop: \"60px\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignContent: \"center\",\n            }}\n          >\n            <div\n              style={{\n                paddingLeft: \"50px\",\n                paddingRight: \"50px\",\n              }}\n            >\n              <TextField\n                variant=\"standard\"\n                name=\"class\"\n                fullWidth\n                label=\"Classes/Semesters/Years\"\n                value={userData.class}\n                onChange={(e) => {\n                  setUserData({\n                    ...userData,\n                    classes: e.target.value.split(\",\"),\n                  });\n                }}\n                error={userData.classes.length > 0 ? false : true}\n                style={{ marginTop: \"8px\" }}\n                className={classes.textField}\n              />\n            </div>\n            <div\n              style={{\n                paddingLeft: \"50px\",\n                paddingRight: \"50px\",\n              }}\n            >\n              <TextField\n                variant=\"standard\"\n                name=\"section\"\n                fullWidth\n                label=\"Sections/Branches\"\n                value={userData.sections}\n                onChange={(e) => {\n                  setUserData({\n                    ...userData,\n                    sections: e.target.value.split(\",\"),\n                  });\n                }}\n                error={userData.sections.length > 0 ? false : true}\n                style={{ marginTop: \"8px\" }}\n                className={classes.textField}\n              />\n            </div>\n          </div>\n          <div\n            style={{\n              paddingTop: \"60px\",\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n            className=\"row\"\n          >\n            <div\n              style={{\n                fontWeight: \"600\",\n                paddingRight: \"10px\",\n                paddingLeft: \"20px\",\n                marginTop: \"10px\",\n                display: \"flex\",\n                height: \"100%\",\n              }}\n            >\n              Gender:\n            </div>\n            <div>\n              <Button\n                onClick={() => toggleGender()}\n                style={{ fontSize: \"18px\" }}\n              >\n                <u>{userData.gender}</u>\n              </Button>\n            </div>\n            <div\n              style={{\n                fontWeight: \"600\",\n                paddingRight: \"20px\",\n                paddingLeft: \"100px\",\n                marginTop: \"15px\",\n                display: \"flex\",\n                height: \"100%\",\n              }}\n            >\n              DOB:\n            </div>\n            <div>\n              <TextField\n                variant=\"standard\"\n                name=\"dob\"\n                fullWidth\n                value={userData.dob}\n                type=\"date\"\n                onChange={(e) => {\n                  setUserData({ ...userData, dob: e.target.value });\n                }}\n                style={{ marginTop: \"8px\" }}\n              />\n            </div>\n          </div>\n          <div style={{ paddingTop: \"60px\" }}>\n            <TextField\n              variant=\"standard\"\n              name=\"profileLink\"\n              fullWidth\n              label=\"Profile Link(Optional)\"\n              value={userData.profileLink}\n              onChange={(e) => {\n                setUserData({ ...userData, profileLink: e.target.value });\n              }}\n              style={{ marginTop: \"8px\" }}\n            />\n          </div>\n          <div\n            style={{\n              paddingTop: \"10px\",\n              justifyContent: \"left\",\n              display: \"flex\",\n              paddingTop: \"60px\",\n            }}\n          >\n            <div\n              style={{\n                fontWeight: \"600\",\n                verticalAlign: \"middle\",\n                paddingRight: \"10px\",\n              }}\n            >\n              Add Profile Picture\n            </div>\n            <FileBase\n              type=\"file\"\n              multiple={false}\n              onDone={({ base64 }) =>\n                setUserData({ ...userData, images: base64 })\n              }\n            />\n          </div>\n          <div style={{ paddingTop: \"20px\" }}>\n            <Button\n              size=\"large\"\n              type=\"submit\"\n              className={classes.button}\n              style={{ border: \"3px solid blueviolet\", color: \"blueviolet\" }}\n            >\n              Submit\n            </Button>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n}\n","/home/aditya/my-app/digital class from 24march/client/src/components/Logout.js",[],"/home/aditya/my-app/digital class from 24march/client/src/components/Login.js",[],"/home/aditya/my-app/digital class from 24march/client/src/components/classStatusCards/LectureCard.js",[],"/home/aditya/my-app/digital class from 24march/client/src/components/classStatusCards/AssignmentCard.js",[],"/home/aditya/my-app/digital class from 24march/client/src/components/classFrames/practice.js",["221"],"import React, { useState } from \"react\";\nimport Card from \"./card/card\";\n\nconst ClassPracticeTable = ({ backColor, frontColor }) => {\n  return (\n    <div>\n      <Card fontColor={frontColor} borderColor={backColor} />\n      <Card fontColor={frontColor} borderColor={backColor} />\n      <Card fontColor={frontColor} borderColor={backColor} />\n    </div>\n  );\n};\nexport default ClassPracticeTable;\n","/home/aditya/my-app/digital class from 24march/client/src/components/classStatusCards/ChatCard.js",[],"/home/aditya/my-app/digital class from 24march/client/src/components/classStatusCards/PracticeCard.js",[],"/home/aditya/my-app/digital class from 24march/client/src/constants/index.js",[],"/home/aditya/my-app/digital class from 24march/client/src/components/classCard/Cards.js",[],"/home/aditya/my-app/digital class from 24march/client/src/components/classFrames/lecture.js",["222","223"],"import React from \"react\";\nimport \"./card/style.css\";\nimport TurnedInIcon from \"@material-ui/icons/TurnedIn\";\nimport { useHistory } from \"react-router-dom\";\n\nconst ClassLectureTable = ({\n  backColor,\n  frontColor,\n  lectures,\n  status,\n  rollNo,\n}) => {\n  React.useEffect(async () => {\n    // console.log(lectures);\n    // console.log(status);\n    lectures.sort((a, b) => a.assignmentKey > b.assignmentKey);\n    status.sort((a, b) => a.assignmentKey > b.assignmentKey);\n  }, []);\n  const history = useHistory();\n  const moveToLecture = (key, title, bookmark, completed) => {\n    history.push({\n      pathname: \"/lecture/\" + key,\n      state: {\n        title: title,\n        bookmark: bookmark,\n        completed: completed,\n        rollNo: rollNo,\n      },\n    });\n  };\n\n  return (\n    <diV>\n      {lectures.length && status.length ? (\n        <ul style={{ listStyle: \"none\" }}>\n          {lectures.map((unit, index) => (\n            <li key={unit.assignmentKey}>\n              <div>\n                <div\n                  style={{\n                    width: \"100%\",\n                    marginTop: \"5px\",\n                    border: `${\n                      status[index].completed\n                        ? \"2px solid\"\n                        : `2px solid ${frontColor}`\n                    }`,\n                    borderRadius: \"5px\",\n                    color: frontColor,\n                    borderColor: backColor,\n                    fontWeight: \"600\",\n                    fontStyle: \"italic\",\n                    display: \"flex\",\n                  }}\n                  onClick={() => {\n                    moveToLecture(\n                      unit.assignmentKey,\n                      unit.title,\n                      status[index].bookmark,\n                      status[index].completed\n                    );\n                  }}\n                  className=\"unit\"\n                >\n                  <div\n                    style={{ width: \"20%\" }}\n                  >{`${unit.unitN} ${unit.unit}`}</div>\n                  <div style={{ width: \"5%\" }}>\n                    {status[index].bookmark ? <TurnedInIcon /> : null}\n                  </div>\n                  <div style={{ width: \"50%\" }}>{unit.title}</div>\n                  <div\n                    style={{ width: \"25%\" }}\n                  >{`Mark Completed: ${unit.completed}`}</div>\n                </div>\n              </div>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        \"Loading...\"\n      )}\n    </diV>\n  );\n};\nexport default ClassLectureTable;\n","/home/aditya/my-app/digital class from 24march/client/src/components/classPageCards/ClassRoom.js",["224","225"],"import React from \"react\";\nimport { addClass } from \"../../actions\";\nimport { Button, TextField, Menu, MenuItem } from \"@material-ui/core\";\n\nconst ClassRoomCard = ({ subjectTeacher, task }) => {\n  const [dataCard, setData] = React.useState({\n    classKey: \"\",\n    headBackgroundColor: \"\",\n    headTextColor: \"\",\n    bodyBackgroundColor: \"\",\n    bodyBlockColor: \"\",\n    subjectCode: \"\",\n    subjectName: \"\",\n    subjectType: \"THEORY\",\n    studentsAllowed: [],\n    subjectTeacher: [subjectTeacher],\n  });\n\n  const [validator, setValidator] = React.useState({\n    headBackgroundColor: false,\n    headTextColor: false,\n    bodyBackgroundColor: false,\n    bodyBlockColor: false,\n    subjectCode: false,\n    subjectName: false,\n    subjectType: null,\n    studentsAllowed: false,\n  });\n\n  let [update, setUpdate] = React.useState(1);\n\n  let [correct, setCorrect] = React.useState(1);\n\n  const HandleSubmit = () => {\n    setUpdate(update + 1);\n    setCorrect(correct + 1);\n    console.log(dataCard.studentsAllowed.filter((e) => e.trim()));\n    addClass(dataCard, task);\n  };\n\n  React.useEffect(() => {\n    var v1 = dataCard.subjectCode;\n    var v2 = dataCard.subjectType;\n    var val = v1 + v2;\n    setData({\n      ...dataCard,\n      classKey: val,\n    });\n  }, [update]);\n\n  React.useEffect(() => {\n    var v3 = dataCard.studentsAllowed;\n    var arr = v3.filter((e) => e.trim());\n    setData({\n      ...dataCard,\n      studentsAllowed: arr,\n    });\n  }, [correct]);\n\n  return (\n    <div>\n      <div\n        style={{\n          justifyContent: \"center\",\n          fontWeight: \"bold\",\n          fontSize: \"35px\",\n          color: \"white\",\n        }}\n      >\n        {task === \"ADD\" ? \"ADD CLASS\" : \"EDIT DETAILS\"}\n      </div>\n      <div\n        style={{\n          paddingLeft: \"5px\",\n          paddingRight: \"5px\",\n          paddingTop: \"10px\",\n        }}\n      >\n        <TextField\n          variant=\"outlined\"\n          fullWidth\n          label={\n            <div\n              style={{\n                backgroundColor: \"white\",\n                borderRadius: \"10px\",\n                padding: \"5px\",\n              }}\n            >\n              Subject Code\n            </div>\n          }\n          value={dataCard.subjectCode}\n          onChange={(e) => {\n            setValidator({\n              ...validator,\n              subjectCode: e.target.value.length < 3,\n            });\n            setData({ ...dataCard, subjectCode: e.target.value });\n            setUpdate(update + 1);\n          }}\n          error={validator.subjectCode}\n          style={{\n            backgroundColor: \"white\",\n            width: \"90%\",\n            marginBottom: \"15px\",\n          }}\n        />\n        <TextField\n          variant=\"outlined\"\n          fullWidth\n          label={\n            <div\n              style={{\n                backgroundColor: \"white\",\n                borderRadius: \"10px\",\n                padding: \"5px\",\n              }}\n            >\n              Subject Name\n            </div>\n          }\n          value={dataCard.subjectName}\n          onChange={(e) => {\n            setValidator({\n              ...validator,\n              subjectName: e.target.value.length < 3,\n            });\n            setData({ ...dataCard, subjectName: e.target.value });\n          }}\n          error={validator.subjectName}\n          style={{\n            backgroundColor: \"white\",\n            width: \"90%\",\n            marginBottom: \"15px\",\n          }}\n        />\n        <TextField\n          variant=\"outlined\"\n          fullWidth\n          label={\n            <div\n              style={{\n                backgroundColor: \"white\",\n                borderRadius: \"10px\",\n                padding: \"5px\",\n              }}\n            >\n              Students Allowed\n            </div>\n          }\n          value={dataCard.studentsAllowed.join(\",\")}\n          onChange={(e) => {\n            setValidator({\n              ...validator,\n              studentsAllowed:\n                e.target.value.replace(/\\s/g, \" \").split(\",\")[0] === \"\" ||\n                e.target.value.replace(/\\s/g, \" \").split(\",\")[0] === \" \",\n            });\n            setData({\n              ...dataCard,\n              studentsAllowed: e.target.value.replace(\" \", \"\").split(\",\"),\n            });\n          }}\n          error={validator.studentsAllowed}\n          style={{\n            backgroundColor: \"white\",\n            width: \"90%\",\n            marginBottom: \"15px\",\n          }}\n        />\n        <label\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            color: \"white\",\n          }}\n        >\n          <p\n            style={{\n              fontWeight: \"bold\",\n              paddingRight: \"5px\",\n              paddingTop: \"14px\",\n            }}\n          >\n            Type of course\n          </p>\n          <Button\n            aria-controls=\"simple-menu\"\n            aria-haspopup=\"true\"\n            onClick={(e) =>\n              setValidator({ ...validator, subjectType: e.currentTarget })\n            }\n            style={{ backgroundColor: \"rgb(200,200,200,0.6)\" }}\n          >\n            <div\n              style={{\n                color: \"white\",\n              }}\n            >\n              {dataCard.subjectType}\n            </div>\n          </Button>\n          <Menu\n            id=\"simple-menu\"\n            anchorEl={validator.subjectType}\n            keepMounted\n            open={Boolean(validator.subjectType)}\n            onClose={() => setValidator({ ...validator, subjectType: null })}\n          >\n            <MenuItem\n              onClick={() => {\n                setValidator({ ...validator, subjectType: null });\n                setData({ ...dataCard, subjectType: \"THEORY\" });\n                setUpdate(update + 1);\n              }}\n            >\n              THEORY\n            </MenuItem>\n            <MenuItem\n              onClick={() => {\n                setValidator({ ...validator, subjectType: null });\n                setData({ ...dataCard, subjectType: \"LAB\" });\n                setUpdate(update + 1);\n              }}\n            >\n              LAB\n            </MenuItem>\n            <MenuItem\n              onClick={() => {\n                setValidator({ ...validator, subjectType: null });\n                setData({ ...dataCard, subjectType: \"PRACTICUM\" });\n                setUpdate(update + 1);\n              }}\n            >\n              PRACTICUM\n            </MenuItem>\n          </Menu>\n        </label>\n        <TextField\n          variant=\"outlined\"\n          fullWidth\n          label={\n            <div\n              style={{\n                backgroundColor: \"white\",\n                borderRadius: \"10px\",\n                padding: \"5px\",\n              }}\n            >\n              Color 1\n            </div>\n          }\n          value={dataCard.headBackgroundColor}\n          onChange={(e) => {\n            setValidator({\n              ...validator,\n              headBackgroundColor: e.target.value.length === 0,\n            });\n            setData({ ...dataCard, headBackgroundColor: e.target.value });\n          }}\n          error={validator.headBackgroundColor}\n          style={{\n            backgroundColor: \"white\",\n            width: \"90%\",\n            marginBottom: \"15px\",\n          }}\n        />\n        <TextField\n          variant=\"outlined\"\n          fullWidth\n          label={\n            <div\n              style={{\n                backgroundColor: \"white\",\n                borderRadius: \"10px\",\n                padding: \"5px\",\n              }}\n            >\n              Color 2\n            </div>\n          }\n          value={dataCard.headTextColor}\n          onChange={(e) => {\n            setValidator({\n              ...validator,\n              headTextColor: e.target.value.length === 0,\n            });\n            setData({ ...dataCard, headTextColor: e.target.value });\n          }}\n          error={validator.headTextColor}\n          style={{\n            backgroundColor: \"white\",\n            width: \"90%\",\n            marginBottom: \"15px\",\n          }}\n        />\n        <TextField\n          variant=\"outlined\"\n          fullWidth\n          label={\n            <div\n              style={{\n                backgroundColor: \"white\",\n                borderRadius: \"10px\",\n                padding: \"5px\",\n              }}\n            >\n              Color 3\n            </div>\n          }\n          value={dataCard.bodyBackgroundColor}\n          onChange={(e) => {\n            setValidator({\n              ...validator,\n              bodyBackgroundColor: e.target.value.length === 0,\n            });\n            setData({ ...dataCard, bodyBackgroundColor: e.target.value });\n          }}\n          error={validator.bodyBackgroundColor}\n          style={{\n            backgroundColor: \"white\",\n            width: \"90%\",\n            marginBottom: \"15px\",\n          }}\n        />\n        <TextField\n          variant=\"outlined\"\n          fullWidth\n          label={\n            <div\n              style={{\n                backgroundColor: \"white\",\n                borderRadius: \"10px\",\n                padding: \"5px\",\n              }}\n            >\n              Color 4\n            </div>\n          }\n          value={dataCard.bodyBorderColor}\n          onChange={(e) => {\n            setValidator({\n              ...validator,\n              bodyBlockColor: e.target.value.length === 0,\n            });\n            setData({ ...dataCard, bodyBlockColor: e.target.value });\n          }}\n          error={validator.bodyBlockColor}\n          style={{\n            backgroundColor: \"white\",\n            width: \"90%\",\n            marginBottom: \"15px\",\n          }}\n        />\n        <button\n          onClick={() => HandleSubmit()}\n          style={{\n            padding: \"10px\",\n            backgroundColor: \"blueviolet\",\n            color: \"white\",\n            fontWeight: \"bold\",\n            width: \"90%\",\n            borderRadius: \"10px\",\n            marginBottom: \"15px\",\n          }}\n        >\n          {task === \"ADD\" ? \"Create\" : \"Change\"}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ClassRoomCard;\n","/home/aditya/my-app/digital class from 24march/client/src/components/classPageCards/ClassLecture.js",["226","227","228","229","230","231","232","233","234","235","236","237","238","239","240"],"import React from \"react\";\nimport { addLecture } from \"../../actions\";\nimport {\n  List,\n  TextField,\n  ListItem,\n  ListItemAvatar,\n  Avatar,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n  Button,\n} from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FlareIcon from \"@material-ui/icons/Flare\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport { useLocation } from \"react-router-dom\";\nimport { IndeterminateCheckBoxOutlined } from \"@material-ui/icons\";\nimport { useParams } from \"react-router-dom\";\nconst ClassLectureCard = ({}) => {\n  const [classKey, editClassKey] = React.useState(\"00000\");\n  const [task, editTask] = React.useState(\"ADD\");\n  const [unit, editUnit] = React.useState(\"Temp\");\n  const [unitN, editUnitN] = React.useState(1);\n  const [dataCard, setData] = React.useState({\n    classKey: classKey,\n    assignmentKey: \"\",\n    title: \"\",\n    unitN: unitN,\n    unit: unit,\n    topics: [],\n    files: [],\n    completed: 0,\n  });\n  const [validator, setValidator] = React.useState({\n    title: false,\n    unitN: false,\n    unit: false,\n    topic: false,\n  });\n\n  const location = useLocation();\n\n  let [topics, setTopics] = React.useState(-1);\n\n  let [topic, setTopic] = React.useState(\"\");\n\n  let [tempT, changeT] = React.useState(1);\n\n  let [tempD, changeD] = React.useState(1);\n\n  let [tempA, changeA] = React.useState(1);\n\n  let [file, addFile] = React.useState(null);\n\n  let [tempF, changeF] = React.useState(1);\n\n  let [tempR, changeR] = React.useState(1);\n\n  React.useEffect(() => {\n    if (file != undefined) changeF(tempF + 1);\n  }, [file]);\n\n  React.useEffect(() => {\n    var index = topics;\n    if (topics !== -1) {\n      var arr = dataCard.topics;\n      arr[index].imp ? (arr[index].imp = 0) : (arr[index].imp = 1);\n      setData({ ...dataCard, topics: arr });\n    }\n  }, [tempT]);\n\n  React.useEffect(() => {\n    if (topics !== -1) {\n      var mat = dataCard.topics;\n      var arr = [];\n      for (var i = 0; i < mat.length; i++) if (i != topics) arr.push(mat[i]);\n      setData({ ...dataCard, topics: arr });\n      setTopics(-1);\n    }\n  }, [tempD]);\n\n  React.useEffect(() => {\n    if (topic !== \"\") {\n      var arr = dataCard.topics;\n      arr.push({ topic: topic, imp: 0 });\n      setData({ ...dataCard, topics: arr });\n      setTopic(\"\");\n    }\n  }, [tempA]);\n\n  React.useEffect(() => {\n    if (file !== null) {\n      var arr = dataCard.files;\n      arr.push(file);\n      addFile(null);\n    }\n  }, [tempF]);\n\n  React.useEffect(() => {\n    if (topics !== -1) {\n      var mat = dataCard.files;\n      var arr = [];\n      for (var i = 0; i < mat.length; i++) if (i != topics) arr.push(mat[i]);\n      setData({ ...dataCard, files: arr });\n      setTopics(-1);\n    }\n  }, [tempR]);\n\n  const HandleSubmit = () => {\n    console.log(dataCard);\n    addLecture(dataCard, \"ADD\");\n  };\n\n  React.useEffect(() => {\n    var key = window.location.pathname;\n    key = key.substring(6, key.length);\n    editClassKey(key);\n\n    var option = location.state.task;\n    editTask(option);\n\n    var chapter = location.state.unit;\n    editUnit(chapter);\n\n    var chapterN = location.state.unitN;\n    editUnitN(chapterN);\n\n    const zeroPad = (num, places) => String(num).padStart(places, \"0\");\n    var today = new Date();\n    var year = today.getFullYear();\n    var month = today.getMonth();\n    month = zeroPad(month, 2);\n    var day = today.getDate();\n    day = zeroPad(day, 2);\n    var hour = today.getHours();\n    hour = zeroPad(hour, 2);\n    var min = today.getMinutes();\n    min = zeroPad(min, 2);\n    var sec = today.getSeconds();\n    sec = zeroPad(sec, 2);\n    var code = classKey;\n    var key =\n      code +\n      \":\" +\n      year +\n      \":\" +\n      month +\n      \":\" +\n      day +\n      \":\" +\n      hour +\n      \":\" +\n      min +\n      \":\" +\n      sec;\n    setData({ ...dataCard, assignmentKey: key });\n  }, []);\n  return (\n    <div>\n      <div\n        style={{\n          justifyContent: \"center\",\n          fontWeight: \"bold\",\n          fontSize: \"35px\",\n          color: \"white\",\n        }}\n      >\n        {task === \"ADD\" ? \"POST LECTURE\" : \"EDIT LECTURE\"}\n      </div>\n      <div\n        style={{\n          paddingLeft: \"5px\",\n          paddingRight: \"5px\",\n          paddingTop: \"10px\",\n        }}\n      >\n        <TextField\n          variant=\"outlined\"\n          fullWidth\n          label={\n            <div\n              style={{\n                backgroundColor: \"white\",\n                borderRadius: \"10px\",\n                padding: \"5px\",\n                color: \"blue\",\n              }}\n            >\n              Title\n            </div>\n          }\n          value={dataCard.title}\n          onChange={(e) => {\n            setValidator({\n              ...validator,\n              title: e.target.value.length < 2,\n            });\n            setData({ ...dataCard, title: e.target.value });\n          }}\n          error={validator.title}\n          style={{\n            backgroundColor: \"white\",\n            width: \"90%\",\n            marginBottom: \"15px\",\n          }}\n        />\n        <TextField\n          variant=\"outlined\"\n          fullWidth\n          label={\n            <div\n              style={{\n                backgroundColor: \"white\",\n                borderRadius: \"10px\",\n                padding: \"5px\",\n                color: \"blue\",\n              }}\n            >\n              Unit Number\n            </div>\n          }\n          type=\"number\"\n          value={dataCard.unitN}\n          onChange={(e) => {\n            setValidator({\n              ...validator,\n              unitN: e.target.value < 1,\n            });\n            setData({ ...dataCard, unitN: e.target.value });\n          }}\n          error={validator.unitN}\n          style={{\n            backgroundColor: \"white\",\n            width: \"90%\",\n            marginBottom: \"15px\",\n          }}\n        />\n        <TextField\n          variant=\"outlined\"\n          fullWidth\n          label={\n            <div\n              style={{\n                backgroundColor: \"white\",\n                borderRadius: \"10px\",\n                padding: \"5px\",\n                color: \"blue\",\n              }}\n            >\n              Unit Name\n            </div>\n          }\n          value={dataCard.unit}\n          onChange={(e) => {\n            setValidator({\n              ...validator,\n              unit: e.target.value.length < 2,\n            });\n            setData({ ...dataCard, unit: e.target.value });\n          }}\n          error={validator.unit}\n          style={{\n            backgroundColor: \"white\",\n            width: \"90%\",\n            marginBottom: \"15px\",\n          }}\n        />\n        <List style={{ width: \"90%\" }}>\n          {dataCard.topics.map((unit, index) => {\n            return (\n              <ListItem\n                style={{\n                  backgroundColor: \"rgb(237,237,237,0.5)\",\n                  borderRadius: \"10px\",\n                  marginBottom: \"10px\",\n                  color: \"blue\",\n                  fontWeight: \"bold\",\n                }}\n              >\n                <ListItemAvatar>\n                  <Avatar>\n                    <IconButton\n                      style={{\n                        backgroundColor: \"white\",\n                        color: \"#007FFF\",\n                        opacity: \"1\",\n                        height: \"100%\",\n                        width: \"100%\",\n                        border: \"3px solid #007FFF\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                      }}\n                      onClick={() => {\n                        setTopics(index);\n                        changeT(tempT + 1);\n                      }}\n                    >\n                      {unit.imp === 1 ? (\n                        <FlareIcon className=\"listIcon\" />\n                      ) : (\n                        <ChevronRightIcon className=\"listIcon\" />\n                      )}\n                    </IconButton>\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText primary={unit.topic} />\n                <ListItemSecondaryAction edge=\"end\" aria-label=\"delete\">\n                  <IconButton\n                    style={{ color: \"#007FFF\" }}\n                    onClick={() => {\n                      setTopics(index);\n                      changeD(tempD + 1);\n                    }}\n                  >\n                    <DeleteIcon />\n                  </IconButton>\n                </ListItemSecondaryAction>\n              </ListItem>\n            );\n          })}\n        </List>\n        <div style={{ display: \"flex\", width: \"90%\" }}>\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            value={topic}\n            label={\n              <div\n                style={{\n                  backgroundColor: \"white\",\n                  borderRadius: \"10px\",\n                  padding: \"5px\",\n                  color: \"blue\",\n                }}\n              >\n                Add Topic\n              </div>\n            }\n            onChange={(e) => {\n              setValidator({\n                ...validator,\n                topic: e.target.value.length < 2,\n              });\n              setTopic(e.target.value);\n            }}\n            error={validator.topic}\n            style={{\n              backgroundColor: \"white\",\n              marginBottom: \"20px\",\n            }}\n          />\n          <IconButton\n            color=\"primary\"\n            onClick={() => {\n              changeA(tempA + 1);\n              setValidator({\n                ...validator,\n                topic: false,\n              });\n            }}\n          >\n            <AddCircleOutlineIcon\n              style={{\n                backgroundColor: \"white\",\n                height: \"35px\",\n                width: \"35px\",\n                borderRadius: \"18px\",\n                alignSelf: \"center\",\n                justifySelf: \"center\",\n                marginBottom: \"50%\",\n              }}\n            />\n          </IconButton>\n        </div>\n        <List style={{ width: \"90%\" }}>\n          {dataCard.files.map((unit, index) => {\n            // console.log(dataCard.files[index]);\n            return (\n              <ListItem\n                style={{\n                  backgroundColor: \"rgb(237,237,237,0.3)\",\n                  opacity: \"1\",\n                  borderRadius: \"10px\",\n                  marginBottom: \"10px\",\n                  color: \"blue\",\n                }}\n              >\n                <ListItemText>\n                  {unit.name != undefined ? unit.name : \"File\"}\n                </ListItemText>\n                <ListItemSecondaryAction edge=\"end\" aria-label=\"delete\">\n                  <IconButton\n                    style={{ color: \"#007FFF\" }}\n                    onClick={() => {\n                      setTopics(index);\n                      changeR(tempR + 1);\n                    }}\n                  >\n                    <DeleteIcon />\n                  </IconButton>\n                </ListItemSecondaryAction>\n              </ListItem>\n            );\n          })}\n        </List>\n        <div>\n          <label style={{ width: \"100%\" }}>\n            <input\n              style={{ display: \"none\" }}\n              type=\"file\"\n              onChange={(e) => {\n                // const data = new FormData();\n                const file = e.target.files[0];\n                // data.append(file.name, file);\n                addFile(file);\n              }}\n            />\n\n            <Button\n              color=\"secondary\"\n              variant=\"contained\"\n              component=\"span\"\n              style={{ width: \"90%\", padding: \"10px\", borderRadius: \"10px\" }}\n            >\n              <b>Add Files</b>\n            </Button>\n          </label>\n        </div>\n        <button\n          onClick={() => HandleSubmit()}\n          style={{\n            padding: \"10px\",\n            backgroundColor: \"blueviolet\",\n            color: \"white\",\n            fontWeight: \"bold\",\n            width: \"90%\",\n            borderRadius: \"10px\",\n            marginBottom: \"15px\",\n          }}\n        >\n          {task === \"ADD\" ? \"Create\" : \"Change\"}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ClassLectureCard;\n","/home/aditya/my-app/digital class from 24march/client/src/actions/index.js",["241","242","243","244"],"import * as api from \"../api\";\nimport { useDispatch } from \"react-redux\";\nimport { ADD_STUDENT, ADD_TEACHER, ADD_CLASS, ALL_ASSIGNMENTS } from \"./../constants\";\n\nexport const addStudent = (userData) => async (dispatch) => {\n  try {\n    const { data } = await api.createUser(userData);\n    dispatch({ type: ADD_STUDENT, payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const addTeacher = (userData) => async (dispatch) => {\n  try {\n    const data = await api.createUser(userData);\n    dispatch({ type: ADD_TEACHER, payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const addClass = async (classData, task) => {\n  if (task === \"ADD\") {\n    try {\n      const data = await api.createClass(classData);\n      if (data) {\n        console.log(data);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  } else {\n    try {\n      const data = await api.editClass(classData);\n      if (data) {\n        console.log(data);\n      }\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n};\n\nexport const addLecture = async (lectureData, task) => {\n  if (task == \"ADD\") {\n    try {\n      let data = await api.createLecture(lectureData);\n      if (data) {\n        console.log(data);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  } else {\n    try {\n      let data = await api.editLecture(lectureData);\n      if (data) {\n        console.log(data);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n};\n\nexport const fetchallAssignments = (classData) =>  async (dispatch) => {\n \n  try {\n    console.log(classData);\n    const data = await api.fetchallAssignmentsApi(classData);\n    if (data) {\n      //console.log(data);\n      dispatch({ type: \"ALL_ASSIGNMENTS\", payload: data });\n    }\n  }\n  catch (error) {\n    console.log(error.message);\n    console.log(\"error in index/actions\");\n\n  }\n};\n","/home/aditya/my-app/digital class from 24march/client/src/api/index.js",["245","246"],"import axios from \"axios\";\n\nconst url = \"http://localhost5005\";\n\nexport const createUser = async (newUser) =>\n  await axios\n    .post(url, newUser)\n    .then((res) => {\n      console.log(res);\n    })\n    .catch((err) => {\n      console.log(err);\n    })\n    .then(() => {});\n\nexport const createClass = async (data) => {\n  await axios\n    .post(\"http://localhost:5005/makeclass/\", data)\n    .then((res) => {\n      console.log(res);\n    })\n    .catch((err) => {\n      console.log(err);\n    })\n    .then(() => {});\n};\n\nexport const editClass = async (data) => {\n  await axios\n    .post(\"http://localhost:5005/makeclass/edit\", data)\n    .then((res) => {\n      console.log(res);\n    })\n    .catch((err) => {\n      console.log(err);\n    })\n    .then(() => {});\n};\n\nexport const getAllClass = async () => {\n  var result;\n  await axios.post(\"http://localhost:5005/makeclass/getAll\").then((res) => {\n    result = res;\n  });\n  return result;\n};\n\nexport const createLecture = async (data) => {\n  await axios\n    .post(\"http://localhost:5005/makelecture/\", data)\n    .then((res) => {\n      console.log(res);\n    })\n    .catch((err) => {\n      console.log(err);\n    })\n    .then(() => {});\n};\n\nexport const editLecture = async (data) => {\n  await axios\n    .post(\"http://localhost:5005/makelecture/edit\", data)\n    .then((res) => {\n      console.log(res);\n    })\n    .catch((err) => {\n      console.log(err);\n    })\n    .then(() => {});\n};\n\nexport const getAllLecture = async (data) => {\n  var result;\n  await axios\n    .post(\"http://localhost:5005/makelecture/getAll/\", data)\n    .then((res) => {\n      result = res;\n    });\n  return result;\n};\n\nexport const getLecture = async (key) => {\n  var result;\n  await axios\n    .post(\"http://localhost:5005/makelecture/getLecture\", key)\n    .then((res) => {\n      result = res;\n    });\n  return result;\n};\n\nexport const getStatus = async (data) => {\n  var result;\n  await axios\n    .post(\"http://localhost:5005/makelecture/getStatus\", data)\n    .then((res) => {\n      result = res;\n    });\n  return result;\n};\n\nexport const setCompleted = async (assignmentKey, rollNo) => {\n  var result;\n  await axios\n    .post(\"http://localhost:5005/makelecture/setCompleted\", {\n      assignmentKey: assignmentKey,\n      rollNo: rollNo,\n    })\n    .then((res) => {\n      result = res;\n    });\n  return result;\n};\n\nexport const setBookmark = async (assignmentKey, rollNo) => {\n  var result;\n  await axios\n    .post(\"http://localhost:5005/makelecture/setBookmarked\", {\n      assignmentKey: assignmentKey,\n      rollNo: rollNo,\n    })\n    .then((res) => {\n      result = res;\n    });\n  return result;\n};\n\nexport const sendMessage = async (data) => {\n  // console.log(data);\n  var result;\n  await axios.post(\"http://localhost:5005/makechat/send\", data).then((res) => {\n    result = res;\n  });\n  return result;\n};\n\nexport const getMessage = async (data) => {\n  var result;\n  await axios.post(\"http://localhost:5005/makechat/\", data).then((res) => {\n    result = res;\n  });\n  return result;\n};\n\n\nexport const fetchallAssignmentsApi = async (data) => {\n  var data;\n  await axios\n    .post(\"http://localhost:5005/makeassignment/getSubjectassignment\", data)\n    .then((res) => {\n      console.log(res);\n      data=res;\n    })\n\n    .catch((err) => {\n      console.log(err);\n    })\n    .then(() => {});\n\n    return data;\n};\n\nexport const fetchindividualAssignmentsApi = async (data) => {\n  var data;\n  await axios\n    .post(\"http://localhost:5005/makeassignment/getIndividualSubjectassignment\", data)\n    .then((res) => {\n      console.log(res);\n      data=res;\n    })\n\n    .catch((err) => {\n      console.log(err);\n    })\n    .then(() => {});\n\n    return data;\n};","/home/aditya/my-app/digital class from 24march/client/src/components/classFrames/card/card.js",[],"/home/aditya/my-app/digital class from 24march/client/src/components/classCard/Card.js",[],{"ruleId":"247","replacedBy":"248"},{"ruleId":"249","replacedBy":"250"},{"ruleId":"251","severity":1,"message":"252","line":17,"column":10,"nodeType":"253","messageId":"254","endLine":17,"endColumn":15},{"ruleId":"251","severity":1,"message":"255","line":17,"column":17,"nodeType":"253","messageId":"254","endLine":17,"endColumn":25},{"ruleId":"251","severity":1,"message":"256","line":5,"column":8,"nodeType":"253","messageId":"254","endLine":5,"endColumn":20},{"ruleId":"251","severity":1,"message":"257","line":11,"column":10,"nodeType":"253","messageId":"254","endLine":11,"endColumn":18},{"ruleId":"251","severity":1,"message":"258","line":12,"column":10,"nodeType":"253","messageId":"254","endLine":12,"endColumn":21},{"ruleId":"251","severity":1,"message":"259","line":12,"column":23,"nodeType":"253","messageId":"254","endLine":12,"endColumn":34},{"ruleId":"251","severity":1,"message":"260","line":37,"column":7,"nodeType":"253","messageId":"254","endLine":37,"endColumn":11},{"ruleId":"261","severity":1,"message":"262","line":72,"column":13,"nodeType":"263","endLine":77,"endColumn":4},{"ruleId":"251","severity":1,"message":"264","line":84,"column":12,"nodeType":"253","messageId":"254","endLine":84,"endColumn":18},{"ruleId":"265","severity":1,"message":"266","line":87,"column":20,"nodeType":"267","messageId":"268","endLine":87,"endColumn":22},{"ruleId":"269","severity":1,"message":"270","line":87,"column":66,"nodeType":"271","endLine":87,"endColumn":134},{"ruleId":"269","severity":1,"message":"270","line":88,"column":50,"nodeType":"271","endLine":88,"endColumn":117},{"ruleId":"272","severity":1,"message":"273","line":117,"column":43,"nodeType":"267","messageId":"274","endLine":117,"endColumn":44},{"ruleId":"251","severity":1,"message":"257","line":1,"column":17,"nodeType":"253","messageId":"254","endLine":1,"endColumn":25},{"ruleId":"251","severity":1,"message":"275","line":2,"column":8,"nodeType":"253","messageId":"254","endLine":2,"endColumn":11},{"ruleId":"251","severity":1,"message":"276","line":3,"column":10,"nodeType":"253","messageId":"254","endLine":3,"endColumn":16},{"ruleId":"251","severity":1,"message":"277","line":4,"column":8,"nodeType":"253","messageId":"254","endLine":4,"endColumn":13},{"ruleId":"261","severity":1,"message":"262","line":14,"column":15,"nodeType":"263","endLine":24,"endColumn":4},{"ruleId":"251","severity":1,"message":"257","line":1,"column":17,"nodeType":"253","messageId":"254","endLine":1,"endColumn":25},{"ruleId":"251","severity":1,"message":"278","line":2,"column":8,"nodeType":"253","messageId":"254","endLine":2,"endColumn":13},{"ruleId":"251","severity":1,"message":"279","line":3,"column":8,"nodeType":"253","messageId":"254","endLine":3,"endColumn":14},{"ruleId":"261","severity":1,"message":"262","line":7,"column":19,"nodeType":"263","endLine":10,"endColumn":4},{"ruleId":"261","severity":1,"message":"262","line":59,"column":19,"nodeType":"263","endLine":75,"endColumn":4},{"ruleId":"261","severity":1,"message":"280","line":75,"column":6,"nodeType":"281","endLine":75,"endColumn":8,"suggestions":"282"},{"ruleId":"261","severity":1,"message":"262","line":55,"column":19,"nodeType":"263","endLine":87,"endColumn":4},{"ruleId":"261","severity":1,"message":"283","line":87,"column":6,"nodeType":"281","endLine":87,"endColumn":8,"suggestions":"284"},{"ruleId":"251","severity":1,"message":"285","line":3,"column":8,"nodeType":"253","messageId":"254","endLine":3,"endColumn":21},{"ruleId":"251","severity":1,"message":"286","line":11,"column":7,"nodeType":"253","messageId":"254","endLine":11,"endColumn":21},{"ruleId":"261","severity":1,"message":"287","line":23,"column":6,"nodeType":"281","endLine":23,"endColumn":8,"suggestions":"288"},{"ruleId":"261","severity":1,"message":"262","line":24,"column":19,"nodeType":"263","endLine":31,"endColumn":4},{"ruleId":"261","severity":1,"message":"289","line":31,"column":6,"nodeType":"281","endLine":31,"endColumn":15,"suggestions":"290"},{"ruleId":"261","severity":1,"message":"262","line":33,"column":19,"nodeType":"263","endLine":59,"endColumn":4},{"ruleId":"261","severity":1,"message":"291","line":59,"column":6,"nodeType":"281","endLine":59,"endColumn":12,"suggestions":"292"},{"ruleId":"251","severity":1,"message":"293","line":1,"column":13,"nodeType":"253","messageId":"254","endLine":1,"endColumn":23},{"ruleId":"251","severity":1,"message":"294","line":3,"column":10,"nodeType":"253","messageId":"254","endLine":3,"endColumn":18},{"ruleId":"251","severity":1,"message":"293","line":1,"column":13,"nodeType":"253","messageId":"254","endLine":1,"endColumn":23},{"ruleId":"295","severity":1,"message":"296","line":240,"column":15,"nodeType":"297","messageId":"268","endLine":240,"endColumn":25},{"ruleId":"295","severity":1,"message":"296","line":209,"column":13,"nodeType":"297","messageId":"268","endLine":209,"endColumn":23},{"ruleId":"251","severity":1,"message":"298","line":3,"column":19,"nodeType":"253","messageId":"254","endLine":3,"endColumn":23},{"ruleId":"251","severity":1,"message":"299","line":3,"column":25,"nodeType":"253","messageId":"254","endLine":3,"endColumn":31},{"ruleId":"251","severity":1,"message":"300","line":6,"column":10,"nodeType":"253","messageId":"254","endLine":6,"endColumn":20},{"ruleId":"251","severity":1,"message":"257","line":9,"column":11,"nodeType":"253","messageId":"254","endLine":9,"endColumn":19},{"ruleId":"251","severity":1,"message":"301","line":9,"column":21,"nodeType":"253","messageId":"254","endLine":9,"endColumn":30},{"ruleId":"251","severity":1,"message":"259","line":10,"column":23,"nodeType":"253","messageId":"254","endLine":10,"endColumn":34},{"ruleId":"251","severity":1,"message":"302","line":12,"column":11,"nodeType":"253","messageId":"254","endLine":12,"endColumn":19},{"ruleId":"251","severity":1,"message":"303","line":39,"column":7,"nodeType":"253","messageId":"254","endLine":39,"endColumn":14},{"ruleId":"251","severity":1,"message":"255","line":87,"column":9,"nodeType":"253","messageId":"254","endLine":87,"endColumn":17},{"ruleId":"251","severity":1,"message":"304","line":89,"column":9,"nodeType":"253","messageId":"254","endLine":89,"endColumn":15},{"ruleId":"295","severity":1,"message":"296","line":278,"column":15,"nodeType":"297","messageId":"268","endLine":278,"endColumn":25},{"ruleId":"295","severity":1,"message":"296","line":246,"column":15,"nodeType":"297","messageId":"268","endLine":246,"endColumn":25},{"ruleId":"251","severity":1,"message":"257","line":1,"column":17,"nodeType":"253","messageId":"254","endLine":1,"endColumn":25},{"ruleId":"261","severity":1,"message":"262","line":13,"column":19,"nodeType":"263","endLine":18,"endColumn":4},{"ruleId":"261","severity":1,"message":"305","line":18,"column":6,"nodeType":"281","endLine":18,"endColumn":8,"suggestions":"306"},{"ruleId":"261","severity":1,"message":"307","line":49,"column":6,"nodeType":"281","endLine":49,"endColumn":14,"suggestions":"308"},{"ruleId":"261","severity":1,"message":"307","line":58,"column":6,"nodeType":"281","endLine":58,"endColumn":15,"suggestions":"309"},{"ruleId":"251","severity":1,"message":"310","line":19,"column":10,"nodeType":"253","messageId":"254","endLine":19,"endColumn":39},{"ruleId":"251","severity":1,"message":"311","line":20,"column":10,"nodeType":"253","messageId":"254","endLine":20,"endColumn":19},{"ruleId":"312","severity":1,"message":"313","line":21,"column":27,"nodeType":"314","messageId":"268","endLine":21,"endColumn":29},{"ruleId":"265","severity":1,"message":"315","line":62,"column":14,"nodeType":"267","messageId":"268","endLine":62,"endColumn":16},{"ruleId":"261","severity":1,"message":"316","line":63,"column":6,"nodeType":"281","endLine":63,"endColumn":12,"suggestions":"317"},{"ruleId":"261","severity":1,"message":"318","line":72,"column":6,"nodeType":"281","endLine":72,"endColumn":13,"suggestions":"319"},{"ruleId":"265","severity":1,"message":"315","line":78,"column":50,"nodeType":"267","messageId":"268","endLine":78,"endColumn":52},{"ruleId":"261","severity":1,"message":"318","line":82,"column":6,"nodeType":"281","endLine":82,"endColumn":13,"suggestions":"320"},{"ruleId":"261","severity":1,"message":"321","line":91,"column":6,"nodeType":"281","endLine":91,"endColumn":13,"suggestions":"322"},{"ruleId":"261","severity":1,"message":"323","line":99,"column":6,"nodeType":"281","endLine":99,"endColumn":13,"suggestions":"324"},{"ruleId":"265","severity":1,"message":"315","line":105,"column":50,"nodeType":"267","messageId":"268","endLine":105,"endColumn":52},{"ruleId":"261","severity":1,"message":"318","line":109,"column":6,"nodeType":"281","endLine":109,"endColumn":13,"suggestions":"325"},{"ruleId":"326","severity":1,"message":"327","line":144,"column":9,"nodeType":"253","messageId":"328","endLine":144,"endColumn":12},{"ruleId":"261","severity":1,"message":"329","line":159,"column":6,"nodeType":"281","endLine":159,"endColumn":8,"suggestions":"330"},{"ruleId":"265","severity":1,"message":"315","line":391,"column":30,"nodeType":"267","messageId":"268","endLine":391,"endColumn":32},{"ruleId":"251","severity":1,"message":"258","line":2,"column":10,"nodeType":"253","messageId":"254","endLine":2,"endColumn":21},{"ruleId":"251","severity":1,"message":"331","line":3,"column":36,"nodeType":"253","messageId":"254","endLine":3,"endColumn":45},{"ruleId":"251","severity":1,"message":"332","line":3,"column":47,"nodeType":"253","messageId":"254","endLine":3,"endColumn":62},{"ruleId":"265","severity":1,"message":"266","line":46,"column":12,"nodeType":"267","messageId":"268","endLine":46,"endColumn":14},{"ruleId":"326","severity":1,"message":"333","line":147,"column":7,"nodeType":"253","messageId":"328","endLine":147,"endColumn":11},{"ruleId":"326","severity":1,"message":"333","line":164,"column":7,"nodeType":"253","messageId":"328","endLine":164,"endColumn":11},"no-native-reassign",["334"],"no-negated-in-lhs",["335"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","'dispatch' is assigned a value but never used.","'classReducer' is defined but never used.","'useState' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'rows' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'coffee' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'Box' is defined but never used.","'Button' is defined but never used.","'axios' is defined but never used.","'Login' is defined but never used.","'Logout' is defined but never used.","React Hook React.useEffect has missing dependencies: 'data', 'location.state.bookmark', 'location.state.completed', 'location.state.rollNo', and 'location.state.title'. Either include them or remove the dependency array. You can also do a functional update 'editData(d => ...)' if you only need 'data' in the 'editData' call.","ArrayExpression",["336"],"React Hook React.useEffect has missing dependencies: 'classCompleted', 'classData', 'classTotal', 'flag', 'location.state.data', and 'rollNo'. Either include them or remove the dependency array. You can also do a functional update 'editData(c => ...)' if you only need 'classData' in the 'editData' call.",["337"],"'ClassRoomCard' is defined but never used.","'subjectTeacher' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'updated'. Either include it or remove the dependency array. You can also do a functional update 'updateMessage(u => ...)' if you only need 'updated' in the 'updateMessage' call.",["338"],"React Hook React.useEffect has missing dependencies: 'bodyBackgroundColor', 'chat', 'classKey', 'messages', and 'rollNo'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'editData' needs the current value of 'chat'.",["339"],"React Hook React.useEffect has missing dependencies: 'anonymous', 'chat', 'data.classKey', 'data.rollNo', and 'updated'. Either include them or remove the dependency array. You can also do a functional update 'updateMessage(u => ...)' if you only need 'updated' in the 'updateMessage' call.",["340"],"'actionType' is defined but never used.","'addClass' is defined but never used.","no-dupe-keys","Duplicate key 'paddingTop'.","ObjectExpression","'MALE' is defined but never used.","'FEMALE' is defined but never used.","'addTeacher' is defined but never used.","'useEffect' is defined but never used.","'Redirect' is defined but never used.","'history' is assigned a value but never used.","'regExp' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'lectures' and 'status'. Either include them or remove the dependency array.",["341"],"React Hook React.useEffect has a missing dependency: 'dataCard'. Either include it or remove the dependency array. You can also do a functional update 'setData(d => ...)' if you only need 'dataCard' in the 'setData' call.",["342"],["343"],"'IndeterminateCheckBoxOutlined' is defined but never used.","'useParams' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","Expected '!==' and instead saw '!='.","React Hook React.useEffect has a missing dependency: 'tempF'. Either include it or remove the dependency array. You can also do a functional update 'changeF(t => ...)' if you only need 'tempF' in the 'changeF' call.",["344"],"React Hook React.useEffect has missing dependencies: 'dataCard' and 'topics'. Either include them or remove the dependency array. You can also do a functional update 'setData(d => ...)' if you only need 'dataCard' in the 'setData' call.",["345"],["346"],"React Hook React.useEffect has missing dependencies: 'dataCard' and 'topic'. Either include them or remove the dependency array. You can also do a functional update 'setData(d => ...)' if you only need 'dataCard' in the 'setData' call.",["347"],"React Hook React.useEffect has missing dependencies: 'dataCard.files' and 'file'. Either include them or remove the dependency array.",["348"],["349"],"no-redeclare","'key' is already defined.","redeclared","React Hook React.useEffect has missing dependencies: 'classKey', 'dataCard', 'location.state.task', 'location.state.unit', and 'location.state.unitN'. Either include them or remove the dependency array. You can also do a functional update 'setData(d => ...)' if you only need 'dataCard' in the 'setData' call.",["350"],"'ADD_CLASS' is defined but never used.","'ALL_ASSIGNMENTS' is defined but never used.","'data' is already defined.","no-global-assign","no-unsafe-negation",{"desc":"351","fix":"352"},{"desc":"353","fix":"354"},{"desc":"355","fix":"356"},{"desc":"357","fix":"358"},{"desc":"359","fix":"360"},{"desc":"361","fix":"362"},{"desc":"363","fix":"364"},{"desc":"365","fix":"366"},{"desc":"367","fix":"368"},{"desc":"369","fix":"370"},{"desc":"371","fix":"372"},{"desc":"373","fix":"374"},{"desc":"375","fix":"376"},{"desc":"377","fix":"378"},{"desc":"379","fix":"380"},"Update the dependencies array to be: [data, location.state.bookmark, location.state.completed, location.state.rollNo, location.state.title]",{"range":"381","text":"382"},"Update the dependencies array to be: [classCompleted, classData, classTotal, flag, location.state.data, rollNo]",{"range":"383","text":"384"},"Update the dependencies array to be: [updated]",{"range":"385","text":"386"},"Update the dependencies array to be: [bodyBackgroundColor, chat, classKey, messages, rollNo, updated]",{"range":"387","text":"388"},"Update the dependencies array to be: [anonymous, chat, data.classKey, data.rollNo, send, updated]",{"range":"389","text":"390"},"Update the dependencies array to be: [lectures, status]",{"range":"391","text":"392"},"Update the dependencies array to be: [dataCard, update]",{"range":"393","text":"394"},"Update the dependencies array to be: [correct, dataCard]",{"range":"395","text":"396"},"Update the dependencies array to be: [file, tempF]",{"range":"397","text":"398"},"Update the dependencies array to be: [dataCard, tempT, topics]",{"range":"399","text":"400"},"Update the dependencies array to be: [dataCard, tempD, topics]",{"range":"401","text":"402"},"Update the dependencies array to be: [dataCard, tempA, topic]",{"range":"403","text":"404"},"Update the dependencies array to be: [dataCard.files, file, tempF]",{"range":"405","text":"406"},"Update the dependencies array to be: [dataCard, tempR, topics]",{"range":"407","text":"408"},"Update the dependencies array to be: [classKey, dataCard, location.state.task, location.state.unit, location.state.unitN]",{"range":"409","text":"410"},[2098,2100],"[data, location.state.bookmark, location.state.completed, location.state.rollNo, location.state.title]",[3040,3042],"[classCompleted, classData, classTotal, flag, location.state.data, rollNo]",[669,671],"[updated]",[954,963],"[bodyBackgroundColor, chat, classKey, messages, rollNo, updated]",[1804,1810],"[anonymous, chat, data.classKey, data.rollNo, send, updated]",[475,477],"[lectures, status]",[1254,1262],"[dataCard, update]",[1447,1456],"[correct, dataCard]",[1690,1696],"[file, tempF]",[1932,1939],"[dataCard, tempT, topics]",[2202,2209],"[dataCard, tempD, topics]",[2414,2421],"[dataCard, tempA, topic]",[2562,2569],"[dataCard.files, file, tempF]",[2830,2837],"[dataCard, tempR, topics]",[3956,3958],"[classKey, dataCard, location.state.task, location.state.unit, location.state.unitN]"]