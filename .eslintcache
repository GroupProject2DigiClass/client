[{"D:\\Web\\digiClass\\client\\src\\index.js":"1","D:\\Web\\digiClass\\client\\src\\App.js":"2","D:\\Web\\digiClass\\client\\src\\reducer\\index.js":"3","D:\\Web\\digiClass\\client\\src\\reducer\\user.js":"4","D:\\Web\\digiClass\\client\\src\\pages\\home.js":"5","D:\\Web\\digiClass\\client\\src\\pages\\registration.js":"6","D:\\Web\\digiClass\\client\\src\\components\\registrationForm\\admin.js":"7","D:\\Web\\digiClass\\client\\src\\constants\\index.js":"8","D:\\Web\\digiClass\\client\\src\\components\\registrationForm\\student.js":"9","D:\\Web\\digiClass\\client\\src\\components\\registrationForm\\teacher.js":"10","D:\\Web\\digiClass\\client\\src\\actions\\index.js":"11","D:\\Web\\digiClass\\client\\src\\api\\index.js":"12","D:\\Web\\digiClass\\client\\src\\pages\\class.js":"13","D:\\Web\\digiClass\\client\\src\\components\\classStatusCards\\AssignmentCard.js":"14","D:\\Web\\digiClass\\client\\src\\components\\classStatusCards\\LectureCard.js":"15","D:\\Web\\digiClass\\client\\src\\components\\classStatusCards\\PracticeCard.js":"16","D:\\Web\\digiClass\\client\\src\\components\\classStatusCards\\ChatCard.js":"17","D:\\Web\\digiClass\\client\\src\\components\\classFrames\\assignment.js":"18","D:\\Web\\digiClass\\client\\src\\components\\classFrames\\card\\card.js":"19","D:\\Web\\digiClass\\client\\src\\components\\classFrames\\lecture.js":"20","D:\\Web\\digiClass\\client\\src\\components\\classFrames\\practice.js":"21","D:\\Web\\digiClass\\client\\src\\pages\\cardPage.js":"22","D:\\Web\\digiClass\\client\\src\\components\\classPageCards\\ClassRoom.js":"23","D:\\Web\\digiClass\\client\\src\\reducer\\auth.js":"24","D:\\Web\\digiClass\\client\\src\\components\\Logout.js":"25","D:\\Web\\digiClass\\client\\src\\components\\Login.js":"26","D:\\Web\\digiClass\\client\\src\\reducer\\class.js":"27","D:\\Web\\digiClass\\client\\src\\components\\classPageCards\\ClassLecture.js":"28","D:\\Web\\digiClass\\client\\src\\components\\classCard\\Cards.js":"29","D:\\Web\\digiClass\\client\\src\\components\\classCard\\Card.js":"30"},{"size":566,"mtime":1616381416691,"results":"31","hashOfConfig":"32"},{"size":817,"mtime":1624075808229,"results":"33","hashOfConfig":"32"},{"size":194,"mtime":1616381144602,"results":"34","hashOfConfig":"32"},{"size":246,"mtime":1616380978799,"results":"35","hashOfConfig":"32"},{"size":407,"mtime":1623485542264,"results":"36","hashOfConfig":"32"},{"size":2108,"mtime":1613647863613,"results":"37","hashOfConfig":"32"},{"size":11225,"mtime":1613042691858,"results":"38","hashOfConfig":"32"},{"size":1035,"mtime":1616144116224,"results":"39","hashOfConfig":"32"},{"size":8497,"mtime":1612862835088,"results":"40","hashOfConfig":"32"},{"size":8661,"mtime":1612863015363,"results":"41","hashOfConfig":"32"},{"size":1558,"mtime":1623506162118,"results":"42","hashOfConfig":"32"},{"size":1927,"mtime":1623584442783,"results":"43","hashOfConfig":"32"},{"size":10628,"mtime":1624083019440,"results":"44","hashOfConfig":"32"},{"size":1539,"mtime":1615709467802,"results":"45","hashOfConfig":"32"},{"size":1732,"mtime":1615714868934,"results":"46","hashOfConfig":"32"},{"size":1582,"mtime":1615709448400,"results":"47","hashOfConfig":"32"},{"size":1829,"mtime":1615709504461,"results":"48","hashOfConfig":"32"},{"size":412,"mtime":1615718069926,"results":"49","hashOfConfig":"32"},{"size":845,"mtime":1623987649652,"results":"50","hashOfConfig":"32"},{"size":1960,"mtime":1623997161124,"results":"51","hashOfConfig":"32"},{"size":408,"mtime":1615719387319,"results":"52","hashOfConfig":"32"},{"size":1641,"mtime":1617538309986,"results":"53","hashOfConfig":"32"},{"size":10526,"mtime":1616732977890,"results":"54","hashOfConfig":"32"},{"size":639,"mtime":1616380926333,"results":"55","hashOfConfig":"32"},{"size":963,"mtime":1616158102306,"results":"56","hashOfConfig":"32"},{"size":1335,"mtime":1616158339245,"results":"57","hashOfConfig":"32"},{"size":646,"mtime":1616380732757,"results":"58","hashOfConfig":"32"},{"size":12636,"mtime":1624083592802,"results":"59","hashOfConfig":"32"},{"size":275,"mtime":1623503425426,"results":"60","hashOfConfig":"32"},{"size":475,"mtime":1623503009841,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"szblh4",{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"64"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"64"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"D:\\Web\\digiClass\\client\\src\\index.js",[],["137","138"],"D:\\Web\\digiClass\\client\\src\\App.js",["139","140"],"import React, { useReducer } from \"react\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport Register from \"./pages/registration\";\r\nimport Home from \"./pages/home\";\r\n\r\nimport Class from \"./pages/class\";\r\nimport CardPage from \"./pages/cardPage\";\r\nimport combineReducers from \"./reducer\";\r\n\r\nconst App = () => {\r\n  const [state, dispatch] = useReducer(combineReducers, {});\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <div style={{ height: \"100%\", width: \"100%\" }}>\r\n        <main>\r\n          <Route path=\"/\" component={Home} exact />\r\n          <Route path=\"/register\" component={Register} exact />\r\n          <Route path=\"/class\" component={Class} exact />\r\n          <Route path=\"/page/:id\" component={CardPage} />\r\n        </main>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","D:\\Web\\digiClass\\client\\src\\reducer\\index.js",["141"],"import { combineReducers } from \"redux\";\r\n\r\nimport user from \"./user\";\r\nimport auth from \"./auth\";\r\nimport classReducer from \"./class\";\r\nexport default combineReducers({\r\n  user,\r\n  auth,\r\n});\r\n","D:\\Web\\digiClass\\client\\src\\reducer\\user.js",[],"D:\\Web\\digiClass\\client\\src\\pages\\home.js",["142"],"import React from \"react\";\r\nimport { getAllClass } from \"../api\";\r\nimport ClassCard from \"../components/classCard/Cards\";\r\n\r\nfunction Home() {\r\n  const [Class, editClass] = React.useState();\r\n  React.useEffect(async () => {\r\n    var classes = await getAllClass();\r\n    editClass(classes.data);\r\n  }, []);\r\n\r\n  return <div>{Class ? <ClassCard data={Class} /> : \"Loading...\"}</div>;\r\n}\r\nexport default Home;\r\n","D:\\Web\\digiClass\\client\\src\\pages\\registration.js",[],"D:\\Web\\digiClass\\client\\src\\components\\registrationForm\\admin.js",["143"],"import React from \"react\";\r\nimport { Button, TextField, Menu, MenuItem } from \"@material-ui/core\";\r\nimport {\r\n  COLLEGE,\r\n  PRIMARY_SCHOOL,\r\n  SECONDARY_SCHOOL,\r\n  UNIVERSITY,\r\n  YEAR,\r\n  SEMESTER,\r\n  CLASS,\r\n  BRANCH,\r\n  SECTION,\r\n  DIRECTOR,\r\n  PRINCIPLE,\r\n  ADMIN,\r\n} from \"./../../constants\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport FileBase from \"react-file-base64\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n  textField: {},\r\n}));\r\n\r\nexport default function AdminForm() {\r\n  const [userData, setUserData] = React.useState({\r\n    name: \"name\",\r\n    instituteName: \"abc School\",\r\n    description: \"\",\r\n    instituteType: SECONDARY_SCHOOL,\r\n    choiceYear: CLASS,\r\n    yearQuantity: 3,\r\n    image: \"\",\r\n    choiceBranch: SECTION,\r\n    branchQuantity: 1,\r\n    designation: PRINCIPLE,\r\n    profileLink: \"\",\r\n    rank: ADMIN,\r\n  });\r\n\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [anchorElYear, setAnchorElYear] = React.useState(null);\r\n  const [anchorElBranch, setAnchorElBranch] = React.useState(null);\r\n\r\n  const handleMenuItemClick = (event, type) => {\r\n    setUserData({ ...userData, instituteType: type });\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuItemYearClick = (event, type) => {\r\n    setUserData({ ...userData, choiceYear: type });\r\n    setAnchorElYear(null);\r\n  };\r\n\r\n  const handleMenuItemBranchClick = (event, type) => {\r\n    setUserData({ ...userData, choiceBranch: type });\r\n    setAnchorElBranch(null);\r\n  };\r\n\r\n  const toggleDesignation = () => {\r\n    if (userData.designation === PRINCIPLE)\r\n      setUserData({ ...userData, designation: DIRECTOR });\r\n    else setUserData({ ...userData, designation: PRINCIPLE });\r\n  };\r\n\r\n  function handleSubmit() {}\r\n  return (\r\n    <div style={{ width: \"70%\", paddingBottom: \"100px\" }}>\r\n      <form noValidate onSubmit={handleSubmit}>\r\n        <div className=\"row\" style={{ paddingBottom: \"60px\" }}>\r\n          <div\r\n            style={{\r\n              width: \"15%\",\r\n              alignContent: \"center\",\r\n              justifyContent: \"left\",\r\n              display: \"flex\",\r\n              paddingTop: \"14px\",\r\n            }}\r\n          >\r\n            <Button\r\n              onClick={() => toggleDesignation()}\r\n              style={{ fontSize: \"18px\" }}\r\n            >\r\n              <u>{userData.designation}</u>\r\n            </Button>\r\n          </div>\r\n          <div style={{ width: \"83%\" }}>\r\n            <TextField\r\n              variant=\"standard\"\r\n              name=\"name\"\r\n              fullWidth\r\n              label=\"Full Name\"\r\n              value={userData.name}\r\n              onChange={(e) => {\r\n                setUserData({ ...userData, name: e.target.value });\r\n              }}\r\n              helperText=\"At least four characters.\"\r\n              error={userData.name.trim().length > 3 ? false : true}\r\n              style={{ marginTop: \"8px\" }}\r\n              className={classes.textField}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div style={{ paddingBottom: \"60px\" }}>\r\n          <TextField\r\n            variant=\"standard\"\r\n            name=\"profileLink\"\r\n            fullWidth\r\n            label=\"Profile Link(Optional)\"\r\n            value={userData.profileLink}\r\n            onChange={(e) => {\r\n              setUserData({ ...userData, profileLink: e.target.value });\r\n            }}\r\n            style={{ marginTop: \"8px\" }}\r\n          />\r\n        </div>\r\n        <div style={{ paddingBottom: \"60px\" }}>\r\n          <TextField\r\n            variant=\"standard\"\r\n            name=\"description\"\r\n            fullWidth\r\n            label=\"Description(Optional)\"\r\n            value={userData.description}\r\n            onChange={(e) => {\r\n              setUserData({ ...userData, description: e.target.value });\r\n            }}\r\n            style={{ marginTop: \"8px\" }}\r\n            multiline\r\n            rows={4}\r\n          />\r\n        </div>\r\n        <TextField\r\n          variant=\"standard\"\r\n          name=\"instituteName\"\r\n          fullWidth\r\n          label=\"Institute Name\"\r\n          value={userData.instituteName}\r\n          onChange={(e) => {\r\n            setUserData({ ...userData, instituteName: e.target.value });\r\n          }}\r\n          helperText=\"At least five characters.\"\r\n          error={userData.instituteName.trim().length > 5 ? false : true}\r\n          style={{ marginTop: \"8px\" }}\r\n        />\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"left\",\r\n            alignItems: \"center\",\r\n            marginTop: \"60px\",\r\n          }}\r\n          className=\"row\"\r\n        >\r\n          <div\r\n            style={{\r\n              fontWeight: \"600\",\r\n              verticalAlign: \"middle\",\r\n              paddingLeft: \"10px\",\r\n            }}\r\n          >\r\n            Institute Type:\r\n          </div>\r\n          <Button\r\n            aria-controls=\"simple-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={(event) => setAnchorEl(event.currentTarget)}\r\n          >\r\n            <u>{userData.instituteType.replace(\"_\", \" \")}</u>\r\n          </Button>\r\n          <Menu\r\n            id=\"simple-menu\"\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={Boolean(anchorEl)}\r\n            onClose={(event) => setAnchorEl(null)}\r\n          >\r\n            <MenuItem\r\n              onClick={(event) => handleMenuItemClick(event, PRIMARY_SCHOOL)}\r\n            >\r\n              Primary School\r\n            </MenuItem>\r\n            <MenuItem\r\n              onClick={(event) => handleMenuItemClick(event, SECONDARY_SCHOOL)}\r\n            >\r\n              Secondary School\r\n            </MenuItem>\r\n            <MenuItem onClick={(event) => handleMenuItemClick(event, COLLEGE)}>\r\n              College\r\n            </MenuItem>\r\n            <MenuItem\r\n              onClick={(event) => handleMenuItemClick(event, UNIVERSITY)}\r\n            >\r\n              University\r\n            </MenuItem>\r\n          </Menu>\r\n        </div>\r\n        <div\r\n          style={{\r\n            paddingTop: \"10px\",\r\n            justifyContent: \"left\",\r\n            display: \"flex\",\r\n            paddingTop: \"60px\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              fontWeight: \"600\",\r\n              verticalAlign: \"middle\",\r\n              paddingRight: \"10px\",\r\n            }}\r\n          >\r\n            Add Profile Picture\r\n          </div>\r\n          <FileBase\r\n            type=\"file\"\r\n            multiple={false}\r\n            onDone={({ base64 }) =>\r\n              setUserData({ ...userData, images: base64 })\r\n            }\r\n          />\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            marginTop: \"8px\",\r\n          }}\r\n          className=\"row\"\r\n        >\r\n          <div\r\n            style={{\r\n              width: \"50%\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              marginTop: \"60px\",\r\n            }}\r\n          >\r\n            <div>\r\n              <Button\r\n                aria-controls=\"simple-menu\"\r\n                aria-haspopup=\"true\"\r\n                onClick={(event) => setAnchorElYear(event.currentTarget)}\r\n              >\r\n                <u>{userData.choiceYear}</u>\r\n              </Button>\r\n              <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={anchorElYear}\r\n                keepMounted\r\n                open={Boolean(anchorElYear)}\r\n                onClose={(event) => setAnchorElYear(null)}\r\n              >\r\n                <MenuItem\r\n                  onClick={(event) => handleMenuItemYearClick(event, YEAR)}\r\n                >\r\n                  Year\r\n                </MenuItem>\r\n                <MenuItem\r\n                  onClick={(event) => handleMenuItemYearClick(event, SEMESTER)}\r\n                >\r\n                  Semester\r\n                </MenuItem>\r\n                <MenuItem\r\n                  onClick={(event) => handleMenuItemYearClick(event, CLASS)}\r\n                >\r\n                  Class\r\n                </MenuItem>\r\n              </Menu>\r\n            </div>\r\n            <div style={{ width: \"60px\" }}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                name=\"yearValue\"\r\n                fullWidth\r\n                error={userData.yearQuantity > 1 ? false : true}\r\n                value={userData.yearQuantity}\r\n                onChange={(e) => {\r\n                  setUserData({ ...userData, yearQuantity: e.target.value });\r\n                }}\r\n                style={{ fontSize: \"10px\" }}\r\n                type=\"number\"\r\n                inputProps={{\r\n                  style: {\r\n                    padding: 3,\r\n                  },\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div\r\n            style={{\r\n              width: \"50%\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              marginTop: \"60px\",\r\n            }}\r\n          >\r\n            <div>\r\n              <Button\r\n                aria-controls=\"simple-menu\"\r\n                aria-haspopup=\"true\"\r\n                onClick={(event) => setAnchorElBranch(event.currentTarget)}\r\n              >\r\n                <u>{userData.choiceBranch}</u>\r\n              </Button>\r\n              <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={anchorElBranch}\r\n                keepMounted\r\n                open={Boolean(anchorElBranch)}\r\n                onClose={(event) => setAnchorElBranch(null)}\r\n              >\r\n                <MenuItem\r\n                  onClick={(event) => handleMenuItemBranchClick(event, BRANCH)}\r\n                >\r\n                  Branch\r\n                </MenuItem>\r\n                <MenuItem\r\n                  onClick={(event) => handleMenuItemBranchClick(event, SECTION)}\r\n                >\r\n                  Section\r\n                </MenuItem>\r\n              </Menu>\r\n            </div>\r\n            <div style={{ width: \"60px\" }}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                name=\"yearValue\"\r\n                fullWidth\r\n                error={userData.yearQuantity > 0 ? false : true}\r\n                value={userData.yearQuantity}\r\n                onChange={(e) => {\r\n                  setUserData({ ...userData, yearQuantity: e.target.value });\r\n                }}\r\n                style={{ fontSize: \"10px\" }}\r\n                type=\"number\"\r\n                inputProps={{\r\n                  style: {\r\n                    padding: 3,\r\n                  },\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div style={{ paddingTop: \"20px\" }}>\r\n          <Button\r\n            size=\"large\"\r\n            type=\"submit\"\r\n            className={classes.button}\r\n            style={{ border: \"3px solid blueviolet\", color: \"blueviolet\" }}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Web\\digiClass\\client\\src\\constants\\index.js",[],"D:\\Web\\digiClass\\client\\src\\components\\registrationForm\\student.js",["144"],"import React from \"react\";\r\nimport { Button, TextField } from \"@material-ui/core\";\r\nimport { STUDENT, MALE, FEMALE } from \"./../../constants\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport FileBase from \"react-file-base64\";\r\nimport { addStudent } from \"./../../actions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n  textField: {},\r\n}));\r\n\r\nexport default function StudentForm() {\r\n  const [userData, setUserData] = React.useState({\r\n    name: \"\",\r\n    instituteID: \"\",\r\n    rank: STUDENT,\r\n    rollNo: \"\",\r\n    email: \"\",\r\n    class: 1,\r\n    section: \"A\",\r\n    gender: MALE,\r\n    profileLink: \"\",\r\n    images: \"\",\r\n    dob: \"01-01-2001\",\r\n  });\r\n\r\n  const toggleGender = () => {\r\n    if (userData.gender === MALE) setUserData({ ...userData, gender: FEMALE });\r\n    else setUserData({ ...userData, gender: MALE });\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  const regExp = RegExp(/^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (e) => {\r\n    console.log(\"Student Submit\");\r\n    console.log(userData);\r\n    e.preventDefault();\r\n    dispatch(addStudent(userData));\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: \"70%\", paddingBottom: \"100px\" }}>\r\n      <form noValidate onSubmit={handleSubmit}>\r\n        <div style={{ paddingBottom: \"60px\" }}>\r\n          <TextField\r\n            variant=\"standard\"\r\n            name=\"name\"\r\n            fullWidth\r\n            label=\"Name\"\r\n            value={userData.name}\r\n            onChange={(e) => {\r\n              setUserData({ ...userData, name: e.target.value });\r\n            }}\r\n            // helperText=\"At least four characters.\"\r\n            error={userData.name.trim().length > 3 ? false : true}\r\n            style={{ marginTop: \"8px\" }}\r\n            className={classes.textField}\r\n          />\r\n          <div style={{ paddingTop: \"60px\" }}>\r\n            <TextField\r\n              variant=\"standard\"\r\n              name=\"rollNo\"\r\n              fullWidth\r\n              label=\"Roll no.\"\r\n              value={userData.teacherID}\r\n              onChange={(e) => {\r\n                setUserData({ ...userData, rollNo: e.target.value });\r\n              }}\r\n              // helperText=\"At least two characters.\"\r\n              error={userData.name.trim().length > 2 ? false : true}\r\n              style={{ marginTop: \"8px\" }}\r\n              className={classes.textField}\r\n            />\r\n          </div>\r\n          <div style={{ paddingTop: \"60px\" }}>\r\n            <TextField\r\n              variant=\"standard\"\r\n              name=\"instituteID\"\r\n              fullWidth\r\n              label=\"Institute ID\"\r\n              value={userData.instituteID}\r\n              onChange={(e) => {\r\n                setUserData({ ...userData, instituteID: e.target.value });\r\n              }}\r\n              // helperText=\"At least two characters.\"\r\n              error={userData.instituteID.trim().length > 2 ? false : true}\r\n              style={{ marginTop: \"8px\" }}\r\n              className={classes.textField}\r\n            />\r\n          </div>\r\n          <div style={{ paddingTop: \"60px\" }}>\r\n            <TextField\r\n              variant=\"standard\"\r\n              name=\"email\"\r\n              fullWidth\r\n              label=\"Email\"\r\n              value={userData.email}\r\n              onChange={(e) => {\r\n                setUserData({ ...userData, email: e.target.value });\r\n              }}\r\n              // helperText=\"Enter proper email address.\"\r\n              error={regExp.test(userData.email.trim()) ? false : true}\r\n              style={{ marginTop: \"8px\" }}\r\n              className={classes.textField}\r\n            />\r\n          </div>\r\n          <div\r\n            style={{\r\n              paddingTop: \"60px\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignContent: \"center\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                paddingLeft: \"50px\",\r\n                paddingRight: \"50px\",\r\n              }}\r\n            >\r\n              <TextField\r\n                variant=\"standard\"\r\n                name=\"class\"\r\n                fullWidth\r\n                label=\"Class/Semester/Year\"\r\n                value={userData.class}\r\n                onChange={(e) => {\r\n                  setUserData({ ...userData, class: e.target.value });\r\n                }}\r\n                error={userData.class > 0 ? false : true}\r\n                type=\"number\"\r\n                style={{ marginTop: \"8px\" }}\r\n                className={classes.textField}\r\n              />\r\n            </div>\r\n            <div\r\n              style={{\r\n                paddingLeft: \"50px\",\r\n                paddingRight: \"50px\",\r\n              }}\r\n            >\r\n              <TextField\r\n                variant=\"standard\"\r\n                name=\"section\"\r\n                fullWidth\r\n                label=\"Section/Branch\"\r\n                value={userData.section}\r\n                onChange={(e) => {\r\n                  setUserData({ ...userData, section: e.target.value });\r\n                }}\r\n                error={userData.section.trim().length > 0 ? false : true}\r\n                style={{ marginTop: \"8px\" }}\r\n                className={classes.textField}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div\r\n            style={{\r\n              paddingTop: \"60px\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n            className=\"row\"\r\n          >\r\n            <div\r\n              style={{\r\n                fontWeight: \"600\",\r\n                paddingRight: \"10px\",\r\n                paddingLeft: \"20px\",\r\n                marginTop: \"10px\",\r\n                display: \"flex\",\r\n                height: \"100%\",\r\n              }}\r\n            >\r\n              Gender:\r\n            </div>\r\n            <div>\r\n              <Button\r\n                onClick={() => toggleGender()}\r\n                style={{ fontSize: \"18px\" }}\r\n              >\r\n                <u>{userData.gender}</u>\r\n              </Button>\r\n            </div>\r\n            <div\r\n              style={{\r\n                fontWeight: \"600\",\r\n                paddingRight: \"20px\",\r\n                paddingLeft: \"100px\",\r\n                marginTop: \"15px\",\r\n                display: \"flex\",\r\n                height: \"100%\",\r\n              }}\r\n            >\r\n              DOB:\r\n            </div>\r\n            <div>\r\n              <TextField\r\n                variant=\"standard\"\r\n                name=\"dob\"\r\n                fullWidth\r\n                value={userData.dob}\r\n                type=\"date\"\r\n                onChange={(e) => {\r\n                  setUserData({ ...userData, dob: e.target.value });\r\n                }}\r\n                style={{ marginTop: \"8px\" }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div style={{ paddingTop: \"60px\" }}>\r\n            <TextField\r\n              variant=\"standard\"\r\n              name=\"profileLink\"\r\n              fullWidth\r\n              label=\"Profile Link(Optional)\"\r\n              value={userData.profileLink}\r\n              onChange={(e) => {\r\n                setUserData({ ...userData, profileLink: e.target.value });\r\n              }}\r\n              style={{ marginTop: \"8px\" }}\r\n            />\r\n          </div>\r\n          <div\r\n            style={{\r\n              paddingTop: \"10px\",\r\n              justifyContent: \"left\",\r\n              display: \"flex\",\r\n              paddingTop: \"60px\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                fontWeight: \"600\",\r\n                verticalAlign: \"middle\",\r\n                paddingRight: \"10px\",\r\n              }}\r\n            >\r\n              Add Profile Picture\r\n            </div>\r\n            <FileBase\r\n              type=\"file\"\r\n              multiple={false}\r\n              onDone={({ base64 }) =>\r\n                setUserData({ ...userData, images: base64 })\r\n              }\r\n            />\r\n          </div>\r\n          <div style={{ paddingTop: \"20px\" }}>\r\n            <Button\r\n              size=\"large\"\r\n              type=\"submit\"\r\n              className={classes.button}\r\n              style={{ border: \"3px solid blueviolet\", color: \"blueviolet\" }}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Web\\digiClass\\client\\src\\components\\registrationForm\\teacher.js",["145"],"import React from \"react\";\r\nimport { Button, TextField } from \"@material-ui/core\";\r\nimport { TEACHER, MALE, FEMALE } from \"./../../constants\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport FileBase from \"react-file-base64\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addTeacher } from \"./../../actions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n  textField: {},\r\n}));\r\n\r\nexport default function TeacherForm() {\r\n  const [userData, setUserData] = React.useState({\r\n    name: \"\",\r\n    instituteID: \"\",\r\n    rank: TEACHER,\r\n    teacherID: \"\",\r\n    email: \"\",\r\n    classes: [],\r\n    sections: [],\r\n    gender: MALE,\r\n    profileLink: \"\",\r\n    images: \"\",\r\n    driveLink: \"\",\r\n    DOB: \"01-01-2001\",\r\n  });\r\n\r\n  const toggleGender = () => {\r\n    if (userData.gender === MALE) setUserData({ ...userData, gender: FEMALE });\r\n    else setUserData({ ...userData, gender: MALE });\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const regExp = RegExp(/^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/);\r\n\r\n  const handleSubmit = (e) => {\r\n    console.log(\"Teacher Submit\");\r\n    console.log(userData);\r\n    e.preventDefault();\r\n    dispatch(addTeacher(userData));\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: \"70%\", paddingBottom: \"100px\" }}>\r\n      <form noValidate onSubmit={handleSubmit}>\r\n        <div style={{ paddingBottom: \"60px\" }}>\r\n          <TextField\r\n            variant=\"standard\"\r\n            name=\"name\"\r\n            fullWidth\r\n            label=\"Name\"\r\n            value={userData.name}\r\n            onChange={(e) => {\r\n              setUserData({ ...userData, name: e.target.value });\r\n            }}\r\n            // helperText=\"At least four characters.\"\r\n            error={userData.name.trim().length > 3 ? false : true}\r\n            style={{ marginTop: \"8px\" }}\r\n            className={classes.textField}\r\n          />\r\n          <div style={{ paddingTop: \"60px\" }}>\r\n            <TextField\r\n              variant=\"standard\"\r\n              name=\"teacherID\"\r\n              fullWidth\r\n              label=\"Teacher ID.\"\r\n              value={userData.teacherID}\r\n              onChange={(e) => {\r\n                setUserData({ ...userData, teacherID: e.target.value });\r\n              }}\r\n              // helperText=\"At least two characters.\"\r\n              error={userData.name.trim().length > 2 ? false : true}\r\n              style={{ marginTop: \"8px\" }}\r\n              className={classes.textField}\r\n            />\r\n          </div>\r\n          <div style={{ paddingTop: \"60px\" }}>\r\n            <TextField\r\n              variant=\"standard\"\r\n              name=\"instituteID\"\r\n              fullWidth\r\n              label=\"Institute ID\"\r\n              value={userData.instituteID}\r\n              onChange={(e) => {\r\n                setUserData({ ...userData, instituteID: e.target.value });\r\n              }}\r\n              // helperText=\"At least two characters.\"\r\n              error={userData.instituteID.trim().length > 2 ? false : true}\r\n              style={{ marginTop: \"8px\" }}\r\n              className={classes.textField}\r\n            />\r\n          </div>\r\n          <div style={{ paddingTop: \"60px\" }}>\r\n            <TextField\r\n              variant=\"standard\"\r\n              name=\"email\"\r\n              fullWidth\r\n              label=\"Email\"\r\n              value={userData.email}\r\n              onChange={(e) => {\r\n                setUserData({ ...userData, email: e.target.value });\r\n              }}\r\n              // helperText=\"Enter proper email address.\"\r\n              error={regExp.test(userData.email.trim()) ? false : true}\r\n              style={{ marginTop: \"8px\" }}\r\n              className={classes.textField}\r\n            />\r\n          </div>\r\n          <div\r\n            style={{\r\n              paddingTop: \"60px\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignContent: \"center\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                paddingLeft: \"50px\",\r\n                paddingRight: \"50px\",\r\n              }}\r\n            >\r\n              <TextField\r\n                variant=\"standard\"\r\n                name=\"class\"\r\n                fullWidth\r\n                label=\"Classes/Semesters/Years\"\r\n                value={userData.class}\r\n                onChange={(e) => {\r\n                  setUserData({\r\n                    ...userData,\r\n                    classes: e.target.value.split(\",\"),\r\n                  });\r\n                }}\r\n                error={userData.classes.length > 0 ? false : true}\r\n                style={{ marginTop: \"8px\" }}\r\n                className={classes.textField}\r\n              />\r\n            </div>\r\n            <div\r\n              style={{\r\n                paddingLeft: \"50px\",\r\n                paddingRight: \"50px\",\r\n              }}\r\n            >\r\n              <TextField\r\n                variant=\"standard\"\r\n                name=\"section\"\r\n                fullWidth\r\n                label=\"Sections/Branches\"\r\n                value={userData.sections}\r\n                onChange={(e) => {\r\n                  setUserData({\r\n                    ...userData,\r\n                    sections: e.target.value.split(\",\"),\r\n                  });\r\n                }}\r\n                error={userData.sections.length > 0 ? false : true}\r\n                style={{ marginTop: \"8px\" }}\r\n                className={classes.textField}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div\r\n            style={{\r\n              paddingTop: \"60px\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n            className=\"row\"\r\n          >\r\n            <div\r\n              style={{\r\n                fontWeight: \"600\",\r\n                paddingRight: \"10px\",\r\n                paddingLeft: \"20px\",\r\n                marginTop: \"10px\",\r\n                display: \"flex\",\r\n                height: \"100%\",\r\n              }}\r\n            >\r\n              Gender:\r\n            </div>\r\n            <div>\r\n              <Button\r\n                onClick={() => toggleGender()}\r\n                style={{ fontSize: \"18px\" }}\r\n              >\r\n                <u>{userData.gender}</u>\r\n              </Button>\r\n            </div>\r\n            <div\r\n              style={{\r\n                fontWeight: \"600\",\r\n                paddingRight: \"20px\",\r\n                paddingLeft: \"100px\",\r\n                marginTop: \"15px\",\r\n                display: \"flex\",\r\n                height: \"100%\",\r\n              }}\r\n            >\r\n              DOB:\r\n            </div>\r\n            <div>\r\n              <TextField\r\n                variant=\"standard\"\r\n                name=\"dob\"\r\n                fullWidth\r\n                value={userData.dob}\r\n                type=\"date\"\r\n                onChange={(e) => {\r\n                  setUserData({ ...userData, dob: e.target.value });\r\n                }}\r\n                style={{ marginTop: \"8px\" }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div style={{ paddingTop: \"60px\" }}>\r\n            <TextField\r\n              variant=\"standard\"\r\n              name=\"profileLink\"\r\n              fullWidth\r\n              label=\"Profile Link(Optional)\"\r\n              value={userData.profileLink}\r\n              onChange={(e) => {\r\n                setUserData({ ...userData, profileLink: e.target.value });\r\n              }}\r\n              style={{ marginTop: \"8px\" }}\r\n            />\r\n          </div>\r\n          <div\r\n            style={{\r\n              paddingTop: \"10px\",\r\n              justifyContent: \"left\",\r\n              display: \"flex\",\r\n              paddingTop: \"60px\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                fontWeight: \"600\",\r\n                verticalAlign: \"middle\",\r\n                paddingRight: \"10px\",\r\n              }}\r\n            >\r\n              Add Profile Picture\r\n            </div>\r\n            <FileBase\r\n              type=\"file\"\r\n              multiple={false}\r\n              onDone={({ base64 }) =>\r\n                setUserData({ ...userData, images: base64 })\r\n              }\r\n            />\r\n          </div>\r\n          <div style={{ paddingTop: \"20px\" }}>\r\n            <Button\r\n              size=\"large\"\r\n              type=\"submit\"\r\n              className={classes.button}\r\n              style={{ border: \"3px solid blueviolet\", color: \"blueviolet\" }}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Web\\digiClass\\client\\src\\actions\\index.js",["146","147","148"],"import * as api from \"../api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { ADD_STUDENT, ADD_TEACHER, ADD_CLASS } from \"./../constants\";\r\n\r\nexport const addStudent = (userData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.createUser(userData);\r\n    dispatch({ type: ADD_STUDENT, payload: data });\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n\r\nexport const addTeacher = (userData) => async (dispatch) => {\r\n  try {\r\n    const data = await api.createUser(userData);\r\n    dispatch({ type: ADD_TEACHER, payload: data });\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n\r\nexport const addClass = async (classData, task) => {\r\n  if (task === \"ADD\") {\r\n    try {\r\n      const data = await api.createClass(classData);\r\n      if (data) {\r\n        console.log(data);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  } else {\r\n    try {\r\n      const data = await api.editClass(classData);\r\n      if (data) {\r\n        console.log(data);\r\n      }\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  }\r\n};\r\n\r\nexport const addLecture = async (lectureData, task) => {\r\n  if (task == \"ADD\") {\r\n    try {\r\n      let data = await api.createLecture(lectureData);\r\n      if (data) {\r\n        console.log(data);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  } else {\r\n    try {\r\n      let data = await api.editLecture(lectureData);\r\n      if (data) {\r\n        console.log(data);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n};\r\n","D:\\Web\\digiClass\\client\\src\\api\\index.js",[],"D:\\Web\\digiClass\\client\\src\\pages\\class.js",["149","150"],"D:\\Web\\digiClass\\client\\src\\components\\classStatusCards\\AssignmentCard.js",[],"D:\\Web\\digiClass\\client\\src\\components\\classStatusCards\\LectureCard.js",[],"D:\\Web\\digiClass\\client\\src\\components\\classStatusCards\\PracticeCard.js",[],"D:\\Web\\digiClass\\client\\src\\components\\classStatusCards\\ChatCard.js",[],"D:\\Web\\digiClass\\client\\src\\components\\classFrames\\assignment.js",["151"],"import React, { useState } from \"react\";\r\nimport Card from \"./card/card\";\r\n\r\nconst ClassAssignmentTable = ({ backColor, frontColor }) => {\r\n  return (\r\n    <div>\r\n      <Card fontColor={frontColor} borderColor={backColor} />\r\n      <Card fontColor={frontColor} borderColor={backColor} />\r\n      <Card fontColor={frontColor} borderColor={backColor} />\r\n    </div>\r\n  );\r\n};\r\nexport default ClassAssignmentTable;\r\n","D:\\Web\\digiClass\\client\\src\\components\\classFrames\\card\\card.js",[],"D:\\Web\\digiClass\\client\\src\\components\\classFrames\\lecture.js",["152","153"],"import React from \"react\";\r\nimport \"./card/style.css\";\r\nimport TurnedInIcon from \"@material-ui/icons/TurnedIn\";\r\n\r\nconst ClassLectureTable = ({ backColor, frontColor, lectures, status }) => {\r\n  React.useEffect(async () => {\r\n    console.log(lectures);\r\n    console.log(status);\r\n    lectures.sort((a, b) => a.assignmentKey > b.assignmentKey);\r\n    status.sort((a, b) => a.assignmentKey > b.assignmentKey);\r\n  }, []);\r\n\r\n  return (\r\n    <diV>\r\n      {lectures.length && status.length ? (\r\n        <ul style={{ listStyle: \"none\" }}>\r\n          {lectures.map((unit, index) => (\r\n            <li key={unit.assignmentKey}>\r\n              <div>\r\n                <div\r\n                  style={{\r\n                    width: \"100%\",\r\n                    marginTop: \"5px\",\r\n                    border: `${\r\n                      status[index].completed\r\n                        ? \"2px solid\"\r\n                        : `2px solid ${frontColor}`\r\n                    }`,\r\n                    borderRadius: \"5px\",\r\n                    color: frontColor,\r\n                    borderColor: backColor,\r\n                    fontWeight: \"600\",\r\n                    fontStyle: \"italic\",\r\n                    display: \"flex\",\r\n                  }}\r\n                  className=\"unit\"\r\n                >\r\n                  <div\r\n                    style={{ width: \"20%\" }}\r\n                  >{`${unit.unitN} ${unit.unit}`}</div>\r\n                  <div style={{ width: \"5%\" }}>\r\n                    {status[index].bookmark ? <TurnedInIcon /> : null}\r\n                  </div>\r\n                  <div style={{ width: \"50%\" }}>{unit.title}</div>\r\n                  <div\r\n                    style={{ width: \"25%\" }}\r\n                  >{`Mark Completed: ${unit.completed}`}</div>\r\n                </div>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        \"Loading...\"\r\n      )}\r\n    </diV>\r\n  );\r\n};\r\nexport default ClassLectureTable;\r\n","D:\\Web\\digiClass\\client\\src\\components\\classFrames\\practice.js",["154"],"import React, { useState } from \"react\";\r\nimport Card from \"./card/card\";\r\n\r\nconst ClassPracticeTable = ({ backColor, frontColor }) => {\r\n  return (\r\n    <div>\r\n      <Card fontColor={frontColor} borderColor={backColor} />\r\n      <Card fontColor={frontColor} borderColor={backColor} />\r\n      <Card fontColor={frontColor} borderColor={backColor} />\r\n    </div>\r\n  );\r\n};\r\nexport default ClassPracticeTable;\r\n","D:\\Web\\digiClass\\client\\src\\pages\\cardPage.js",["155","156"],"import React from \"react\";\r\n\r\nimport ClassRoomCard from \"../components/classPageCards/ClassRoom\";\r\nimport ClassLectureCard from \"../components/classPageCards/ClassLecture\";\r\n\r\nfunction getRandom() {\r\n  return Math.floor((Math.random() * 50 + 1) / 5);\r\n}\r\n\r\nexport default function CardPage() {\r\n  var subjectTeacher = \"IIITU Developers\";\r\n  var backgroundLocation =\r\n    \"/images/background\" + getRandom().toString() + \".jfif\";\r\n  return (\r\n    <div style={{ height: \"100vh\" }}>\r\n      <div\r\n        style={{\r\n          backgroundImage: `url(${backgroundLocation})`,\r\n          backgroundSize: \"cover\",\r\n          backgroundPosition: \"center center\",\r\n          backgroundRepeat: \"no-repeat\",\r\n          backgroundColor: \"black\",\r\n          height: \"100vh\",\r\n          show: \"flex\",\r\n          backgroundAttachment: \"fixed\",\r\n        }}\r\n      >\r\n        <center>\r\n          <div\r\n            style={{\r\n              paddingTop: \"10vh\",\r\n              paddingBottom: \"10vh\",\r\n              scrollBehavior: \"smooth\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                backgroundColor: \"rgb(200,200,200,0.8)\",\r\n                justifyContent: \"center\",\r\n                borderRadius: \"10px\",\r\n                width: \"70vh\",\r\n              }}\r\n            >\r\n              {/* <ClassRoomCard subjectTeacher={subjectTeacher} task=\"ADD\" /> */}\r\n              <ClassLectureCard\r\n                task=\"ADD\"\r\n                unitN={1}\r\n                unit=\"React\"\r\n                classKey=\"TEST001\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </center>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Web\\digiClass\\client\\src\\components\\classPageCards\\ClassRoom.js",["157","158"],"import React from \"react\";\r\nimport { addClass } from \"../../actions\";\r\nimport { Button, TextField, Menu, MenuItem } from \"@material-ui/core\";\r\n\r\nconst ClassRoomCard = ({ subjectTeacher, task }) => {\r\n  const [dataCard, setData] = React.useState({\r\n    classKey: \"\",\r\n    headBackgroundColor: \"\",\r\n    headTextColor: \"\",\r\n    bodyBackgroundColor: \"\",\r\n    bodyBlockColor: \"\",\r\n    subjectCode: \"\",\r\n    subjectName: \"\",\r\n    subjectType: \"THEORY\",\r\n    studentsAllowed: [],\r\n    subjectTeacher: [subjectTeacher],\r\n  });\r\n\r\n  const [validator, setValidator] = React.useState({\r\n    headBackgroundColor: false,\r\n    headTextColor: false,\r\n    bodyBackgroundColor: false,\r\n    bodyBlockColor: false,\r\n    subjectCode: false,\r\n    subjectName: false,\r\n    subjectType: null,\r\n    studentsAllowed: false,\r\n  });\r\n\r\n  let [update, setUpdate] = React.useState(1);\r\n\r\n  let [correct, setCorrect] = React.useState(1);\r\n\r\n  const HandleSubmit = () => {\r\n    setUpdate(update + 1);\r\n    setCorrect(correct + 1);\r\n    console.log(dataCard.studentsAllowed.filter((e) => e.trim()));\r\n    addClass(dataCard, task);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    var v1 = dataCard.subjectCode;\r\n    var v2 = dataCard.subjectType;\r\n    var val = v1 + v2;\r\n    setData({\r\n      ...dataCard,\r\n      classKey: val,\r\n    });\r\n  }, [update]);\r\n\r\n  React.useEffect(() => {\r\n    var v3 = dataCard.studentsAllowed;\r\n    var arr = v3.filter((e) => e.trim());\r\n    setData({\r\n      ...dataCard,\r\n      studentsAllowed: arr,\r\n    });\r\n  }, [correct]);\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          justifyContent: \"center\",\r\n          fontWeight: \"bold\",\r\n          fontSize: \"35px\",\r\n          color: \"white\",\r\n        }}\r\n      >\r\n        {task === \"ADD\" ? \"ADD CLASS\" : \"EDIT DETAILS\"}\r\n      </div>\r\n      <div\r\n        style={{\r\n          paddingLeft: \"5px\",\r\n          paddingRight: \"5px\",\r\n          paddingTop: \"10px\",\r\n        }}\r\n      >\r\n        <TextField\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          label={\r\n            <div\r\n              style={{\r\n                backgroundColor: \"white\",\r\n                borderRadius: \"10px\",\r\n                padding: \"5px\",\r\n              }}\r\n            >\r\n              Subject Code\r\n            </div>\r\n          }\r\n          value={dataCard.subjectCode}\r\n          onChange={(e) => {\r\n            setValidator({\r\n              ...validator,\r\n              subjectCode: e.target.value.length < 3,\r\n            });\r\n            setData({ ...dataCard, subjectCode: e.target.value });\r\n            setUpdate(update + 1);\r\n          }}\r\n          error={validator.subjectCode}\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            width: \"90%\",\r\n            marginBottom: \"15px\",\r\n          }}\r\n        />\r\n        <TextField\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          label={\r\n            <div\r\n              style={{\r\n                backgroundColor: \"white\",\r\n                borderRadius: \"10px\",\r\n                padding: \"5px\",\r\n              }}\r\n            >\r\n              Subject Name\r\n            </div>\r\n          }\r\n          value={dataCard.subjectName}\r\n          onChange={(e) => {\r\n            setValidator({\r\n              ...validator,\r\n              subjectName: e.target.value.length < 3,\r\n            });\r\n            setData({ ...dataCard, subjectName: e.target.value });\r\n          }}\r\n          error={validator.subjectName}\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            width: \"90%\",\r\n            marginBottom: \"15px\",\r\n          }}\r\n        />\r\n        <TextField\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          label={\r\n            <div\r\n              style={{\r\n                backgroundColor: \"white\",\r\n                borderRadius: \"10px\",\r\n                padding: \"5px\",\r\n              }}\r\n            >\r\n              Students Allowed\r\n            </div>\r\n          }\r\n          value={dataCard.studentsAllowed.join(\",\")}\r\n          onChange={(e) => {\r\n            setValidator({\r\n              ...validator,\r\n              studentsAllowed:\r\n                e.target.value.replace(/\\s/g, \" \").split(\",\")[0] === \"\" ||\r\n                e.target.value.replace(/\\s/g, \" \").split(\",\")[0] === \" \",\r\n            });\r\n            setData({\r\n              ...dataCard,\r\n              studentsAllowed: e.target.value.replace(\" \", \"\").split(\",\"),\r\n            });\r\n          }}\r\n          error={validator.studentsAllowed}\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            width: \"90%\",\r\n            marginBottom: \"15px\",\r\n          }}\r\n        />\r\n        <label\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            color: \"white\",\r\n          }}\r\n        >\r\n          <p\r\n            style={{\r\n              fontWeight: \"bold\",\r\n              paddingRight: \"5px\",\r\n              paddingTop: \"14px\",\r\n            }}\r\n          >\r\n            Type of course\r\n          </p>\r\n          <Button\r\n            aria-controls=\"simple-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={(e) =>\r\n              setValidator({ ...validator, subjectType: e.currentTarget })\r\n            }\r\n            style={{ backgroundColor: \"rgb(200,200,200,0.6)\" }}\r\n          >\r\n            <div\r\n              style={{\r\n                color: \"white\",\r\n              }}\r\n            >\r\n              {dataCard.subjectType}\r\n            </div>\r\n          </Button>\r\n          <Menu\r\n            id=\"simple-menu\"\r\n            anchorEl={validator.subjectType}\r\n            keepMounted\r\n            open={Boolean(validator.subjectType)}\r\n            onClose={() => setValidator({ ...validator, subjectType: null })}\r\n          >\r\n            <MenuItem\r\n              onClick={() => {\r\n                setValidator({ ...validator, subjectType: null });\r\n                setData({ ...dataCard, subjectType: \"THEORY\" });\r\n                setUpdate(update + 1);\r\n              }}\r\n            >\r\n              THEORY\r\n            </MenuItem>\r\n            <MenuItem\r\n              onClick={() => {\r\n                setValidator({ ...validator, subjectType: null });\r\n                setData({ ...dataCard, subjectType: \"LAB\" });\r\n                setUpdate(update + 1);\r\n              }}\r\n            >\r\n              LAB\r\n            </MenuItem>\r\n            <MenuItem\r\n              onClick={() => {\r\n                setValidator({ ...validator, subjectType: null });\r\n                setData({ ...dataCard, subjectType: \"PRACTICUM\" });\r\n                setUpdate(update + 1);\r\n              }}\r\n            >\r\n              PRACTICUM\r\n            </MenuItem>\r\n          </Menu>\r\n        </label>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          label={\r\n            <div\r\n              style={{\r\n                backgroundColor: \"white\",\r\n                borderRadius: \"10px\",\r\n                padding: \"5px\",\r\n              }}\r\n            >\r\n              Color 1\r\n            </div>\r\n          }\r\n          value={dataCard.headBackgroundColor}\r\n          onChange={(e) => {\r\n            setValidator({\r\n              ...validator,\r\n              headBackgroundColor: e.target.value.length === 0,\r\n            });\r\n            setData({ ...dataCard, headBackgroundColor: e.target.value });\r\n          }}\r\n          error={validator.headBackgroundColor}\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            width: \"90%\",\r\n            marginBottom: \"15px\",\r\n          }}\r\n        />\r\n        <TextField\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          label={\r\n            <div\r\n              style={{\r\n                backgroundColor: \"white\",\r\n                borderRadius: \"10px\",\r\n                padding: \"5px\",\r\n              }}\r\n            >\r\n              Color 2\r\n            </div>\r\n          }\r\n          value={dataCard.headTextColor}\r\n          onChange={(e) => {\r\n            setValidator({\r\n              ...validator,\r\n              headTextColor: e.target.value.length === 0,\r\n            });\r\n            setData({ ...dataCard, headTextColor: e.target.value });\r\n          }}\r\n          error={validator.headTextColor}\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            width: \"90%\",\r\n            marginBottom: \"15px\",\r\n          }}\r\n        />\r\n        <TextField\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          label={\r\n            <div\r\n              style={{\r\n                backgroundColor: \"white\",\r\n                borderRadius: \"10px\",\r\n                padding: \"5px\",\r\n              }}\r\n            >\r\n              Color 3\r\n            </div>\r\n          }\r\n          value={dataCard.bodyBackgroundColor}\r\n          onChange={(e) => {\r\n            setValidator({\r\n              ...validator,\r\n              bodyBackgroundColor: e.target.value.length === 0,\r\n            });\r\n            setData({ ...dataCard, bodyBackgroundColor: e.target.value });\r\n          }}\r\n          error={validator.bodyBackgroundColor}\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            width: \"90%\",\r\n            marginBottom: \"15px\",\r\n          }}\r\n        />\r\n        <TextField\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          label={\r\n            <div\r\n              style={{\r\n                backgroundColor: \"white\",\r\n                borderRadius: \"10px\",\r\n                padding: \"5px\",\r\n              }}\r\n            >\r\n              Color 4\r\n            </div>\r\n          }\r\n          value={dataCard.bodyBorderColor}\r\n          onChange={(e) => {\r\n            setValidator({\r\n              ...validator,\r\n              bodyBlockColor: e.target.value.length === 0,\r\n            });\r\n            setData({ ...dataCard, bodyBlockColor: e.target.value });\r\n          }}\r\n          error={validator.bodyBlockColor}\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            width: \"90%\",\r\n            marginBottom: \"15px\",\r\n          }}\r\n        />\r\n        <button\r\n          onClick={() => HandleSubmit()}\r\n          style={{\r\n            padding: \"10px\",\r\n            backgroundColor: \"blueviolet\",\r\n            color: \"white\",\r\n            fontWeight: \"bold\",\r\n            width: \"90%\",\r\n            borderRadius: \"10px\",\r\n            marginBottom: \"15px\",\r\n          }}\r\n        >\r\n          {task === \"ADD\" ? \"Create\" : \"Change\"}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClassRoomCard;\r\n","D:\\Web\\digiClass\\client\\src\\reducer\\auth.js",[],"D:\\Web\\digiClass\\client\\src\\components\\Logout.js",[],["159","160"],"D:\\Web\\digiClass\\client\\src\\components\\Login.js",[],"D:\\Web\\digiClass\\client\\src\\reducer\\class.js",["161"],"import * as actionType from \"../constants/index\";\r\nimport { ADD_CLASS } from \"../constants\";\r\nimport { addClass } from \"../actions/index\";\r\nconst classReducer = (state = [], action) => {\r\n  // console.log(action.payload);\r\n  switch (action.type) {\r\n    case ADD_CLASS:\r\n      // return [...state, action.payload.data];\r\n      addClass(\r\n        action.payload.data,\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n          window.__REDUX_DEVTOOLS_EXTENSION__()\r\n      );\r\n      return [{ state: \"online\" }];\r\n    default:\r\n      console.log(\"Invalid Action Type On classReducer\");\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default classReducer;\r\n","D:\\Web\\digiClass\\client\\src\\components\\classPageCards\\ClassLecture.js",["162","163","164","165","166","167","168","169","170","171","172","173","174","175"],"D:\\Web\\digiClass\\client\\src\\components\\classCard\\Cards.js",[],"D:\\Web\\digiClass\\client\\src\\components\\classCard\\Card.js",[],{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","severity":1,"message":"181","line":11,"column":10,"nodeType":"182","messageId":"183","endLine":11,"endColumn":15},{"ruleId":"180","severity":1,"message":"184","line":11,"column":17,"nodeType":"182","messageId":"183","endLine":11,"endColumn":25},{"ruleId":"180","severity":1,"message":"185","line":5,"column":8,"nodeType":"182","messageId":"183","endLine":5,"endColumn":20},{"ruleId":"186","severity":1,"message":"187","line":7,"column":19,"nodeType":"188","endLine":10,"endColumn":4},{"ruleId":"189","severity":1,"message":"190","line":208,"column":13,"nodeType":"191","messageId":"192","endLine":208,"endColumn":23},{"ruleId":"189","severity":1,"message":"190","line":240,"column":15,"nodeType":"191","messageId":"192","endLine":240,"endColumn":25},{"ruleId":"189","severity":1,"message":"190","line":246,"column":15,"nodeType":"191","messageId":"192","endLine":246,"endColumn":25},{"ruleId":"180","severity":1,"message":"193","line":2,"column":10,"nodeType":"182","messageId":"183","endLine":2,"endColumn":21},{"ruleId":"180","severity":1,"message":"194","line":3,"column":36,"nodeType":"182","messageId":"183","endLine":3,"endColumn":45},{"ruleId":"195","severity":1,"message":"196","line":46,"column":12,"nodeType":"197","messageId":"192","endLine":46,"endColumn":14},{"ruleId":"186","severity":1,"message":"187","line":53,"column":19,"nodeType":"188","endLine":85,"endColumn":4},{"ruleId":"186","severity":1,"message":"198","line":85,"column":6,"nodeType":"199","endLine":85,"endColumn":8,"suggestions":"200"},{"ruleId":"180","severity":1,"message":"201","line":1,"column":17,"nodeType":"182","messageId":"183","endLine":1,"endColumn":25},{"ruleId":"186","severity":1,"message":"187","line":6,"column":19,"nodeType":"188","endLine":11,"endColumn":4},{"ruleId":"186","severity":1,"message":"202","line":11,"column":6,"nodeType":"199","endLine":11,"endColumn":8,"suggestions":"203"},{"ruleId":"180","severity":1,"message":"201","line":1,"column":17,"nodeType":"182","messageId":"183","endLine":1,"endColumn":25},{"ruleId":"180","severity":1,"message":"204","line":3,"column":8,"nodeType":"182","messageId":"183","endLine":3,"endColumn":21},{"ruleId":"180","severity":1,"message":"205","line":11,"column":7,"nodeType":"182","messageId":"183","endLine":11,"endColumn":21},{"ruleId":"186","severity":1,"message":"206","line":49,"column":6,"nodeType":"199","endLine":49,"endColumn":14,"suggestions":"207"},{"ruleId":"186","severity":1,"message":"206","line":58,"column":6,"nodeType":"199","endLine":58,"endColumn":15,"suggestions":"208"},{"ruleId":"176","replacedBy":"209"},{"ruleId":"178","replacedBy":"210"},{"ruleId":"180","severity":1,"message":"211","line":1,"column":13,"nodeType":"182","messageId":"183","endLine":1,"endColumn":23},{"ruleId":"180","severity":1,"message":"212","line":19,"column":10,"nodeType":"182","messageId":"183","endLine":19,"endColumn":39},{"ruleId":"180","severity":1,"message":"213","line":20,"column":10,"nodeType":"182","messageId":"183","endLine":20,"endColumn":19},{"ruleId":"195","severity":1,"message":"214","line":60,"column":14,"nodeType":"197","messageId":"192","endLine":60,"endColumn":16},{"ruleId":"186","severity":1,"message":"215","line":61,"column":6,"nodeType":"199","endLine":61,"endColumn":12,"suggestions":"216"},{"ruleId":"186","severity":1,"message":"217","line":70,"column":6,"nodeType":"199","endLine":70,"endColumn":13,"suggestions":"218"},{"ruleId":"195","severity":1,"message":"214","line":76,"column":50,"nodeType":"197","messageId":"192","endLine":76,"endColumn":52},{"ruleId":"186","severity":1,"message":"217","line":80,"column":6,"nodeType":"199","endLine":80,"endColumn":13,"suggestions":"219"},{"ruleId":"186","severity":1,"message":"220","line":89,"column":6,"nodeType":"199","endLine":89,"endColumn":13,"suggestions":"221"},{"ruleId":"186","severity":1,"message":"222","line":97,"column":6,"nodeType":"199","endLine":97,"endColumn":13,"suggestions":"223"},{"ruleId":"195","severity":1,"message":"214","line":103,"column":50,"nodeType":"197","messageId":"192","endLine":103,"endColumn":52},{"ruleId":"186","severity":1,"message":"217","line":107,"column":6,"nodeType":"199","endLine":107,"endColumn":13,"suggestions":"224"},{"ruleId":"225","severity":1,"message":"226","line":136,"column":9,"nodeType":"182","messageId":"227","endLine":136,"endColumn":12},{"ruleId":"186","severity":1,"message":"228","line":152,"column":6,"nodeType":"199","endLine":152,"endColumn":8,"suggestions":"229"},{"ruleId":"195","severity":1,"message":"214","line":385,"column":30,"nodeType":"197","messageId":"192","endLine":385,"endColumn":32},"no-native-reassign",["230"],"no-negated-in-lhs",["231"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","'dispatch' is assigned a value but never used.","'classReducer' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-dupe-keys","Duplicate key 'paddingTop'.","ObjectExpression","unexpected","'useDispatch' is defined but never used.","'ADD_CLASS' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","React Hook React.useEffect has missing dependencies: 'classCompleted', 'classData', 'classTotal', 'flag', 'location.state.data', and 'rollNo'. Either include them or remove the dependency array. You can also do a functional update 'editData(c => ...)' if you only need 'classData' in the 'editData' call.","ArrayExpression",["232"],"'useState' is defined but never used.","React Hook React.useEffect has missing dependencies: 'lectures' and 'status'. Either include them or remove the dependency array.",["233"],"'ClassRoomCard' is defined but never used.","'subjectTeacher' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'dataCard'. Either include it or remove the dependency array. You can also do a functional update 'setData(d => ...)' if you only need 'dataCard' in the 'setData' call.",["234"],["235"],["230"],["231"],"'actionType' is defined but never used.","'IndeterminateCheckBoxOutlined' is defined but never used.","'useParams' is defined but never used.","Expected '!==' and instead saw '!='.","React Hook React.useEffect has a missing dependency: 'tempF'. Either include it or remove the dependency array. You can also do a functional update 'changeF(t => ...)' if you only need 'tempF' in the 'changeF' call.",["236"],"React Hook React.useEffect has missing dependencies: 'dataCard' and 'topics'. Either include them or remove the dependency array. You can also do a functional update 'setData(d => ...)' if you only need 'dataCard' in the 'setData' call.",["237"],["238"],"React Hook React.useEffect has missing dependencies: 'dataCard' and 'topic'. Either include them or remove the dependency array. You can also do a functional update 'setData(d => ...)' if you only need 'dataCard' in the 'setData' call.",["239"],"React Hook React.useEffect has missing dependencies: 'dataCard.files' and 'file'. Either include them or remove the dependency array.",["240"],["241"],"no-redeclare","'key' is already defined.","redeclared","React Hook React.useEffect has missing dependencies: 'classKey', 'dataCard', 'location.state.task', and 'task'. Either include them or remove the dependency array. You can also do a functional update 'setData(d => ...)' if you only need 'dataCard' in the 'setData' call.",["242"],"no-global-assign","no-unsafe-negation",{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},"Update the dependencies array to be: [classCompleted, classData, classTotal, flag, location.state.data, rollNo]",{"range":"265","text":"266"},"Update the dependencies array to be: [lectures, status]",{"range":"267","text":"268"},"Update the dependencies array to be: [dataCard, update]",{"range":"269","text":"270"},"Update the dependencies array to be: [correct, dataCard]",{"range":"271","text":"272"},"Update the dependencies array to be: [file, tempF]",{"range":"273","text":"274"},"Update the dependencies array to be: [dataCard, tempT, topics]",{"range":"275","text":"276"},"Update the dependencies array to be: [dataCard, tempD, topics]",{"range":"277","text":"278"},"Update the dependencies array to be: [dataCard, tempA, topic]",{"range":"279","text":"280"},"Update the dependencies array to be: [dataCard.files, file, tempF]",{"range":"281","text":"282"},"Update the dependencies array to be: [dataCard, tempR, topics]",{"range":"283","text":"284"},"Update the dependencies array to be: [classKey, dataCard, location.state.task, task]",{"range":"285","text":"286"},[3028,3030],"[classCompleted, classData, classTotal, flag, location.state.data, rollNo]",[413,415],"[lectures, status]",[1302,1310],"[dataCard, update]",[1504,1513],"[correct, dataCard]",[1664,1670],"[file, tempF]",[1915,1922],"[dataCard, tempT, topics]",[2195,2202],"[dataCard, tempD, topics]",[2416,2423],"[dataCard, tempA, topic]",[2572,2579],"[dataCard.files, file, tempF]",[2850,2857],"[dataCard, tempR, topics]",[3914,3916],"[classKey, dataCard, location.state.task, task]"]