[{"D:\\Web\\digiClass\\client\\src\\index.js":"1","D:\\Web\\digiClass\\client\\src\\App.js":"2","D:\\Web\\digiClass\\client\\src\\reducer\\index.js":"3","D:\\Web\\digiClass\\client\\src\\reducer\\user.js":"4","D:\\Web\\digiClass\\client\\src\\pages\\home.js":"5","D:\\Web\\digiClass\\client\\src\\pages\\registration.js":"6","D:\\Web\\digiClass\\client\\src\\components\\registrationForm\\admin.js":"7","D:\\Web\\digiClass\\client\\src\\constants\\index.js":"8","D:\\Web\\digiClass\\client\\src\\components\\registrationForm\\student.js":"9","D:\\Web\\digiClass\\client\\src\\components\\registrationForm\\teacher.js":"10","D:\\Web\\digiClass\\client\\src\\actions\\index.js":"11","D:\\Web\\digiClass\\client\\src\\api\\index.js":"12","D:\\Web\\digiClass\\client\\src\\pages\\class.js":"13","D:\\Web\\digiClass\\client\\src\\components\\classStatusCards\\AssignmentCard.js":"14","D:\\Web\\digiClass\\client\\src\\components\\classStatusCards\\LectureCard.js":"15","D:\\Web\\digiClass\\client\\src\\components\\classStatusCards\\PracticeCard.js":"16","D:\\Web\\digiClass\\client\\src\\components\\classStatusCards\\ChatCard.js":"17","D:\\Web\\digiClass\\client\\src\\components\\classFrames\\assignment.js":"18","D:\\Web\\digiClass\\client\\src\\components\\classFrames\\card\\card.js":"19","D:\\Web\\digiClass\\client\\src\\components\\classFrames\\lecture.js":"20","D:\\Web\\digiClass\\client\\src\\components\\classFrames\\practice.js":"21","D:\\Web\\digiClass\\client\\src\\pages\\cardPage.js":"22","D:\\Web\\digiClass\\client\\src\\components\\classPageCards\\ClassRoom.js":"23","D:\\Web\\digiClass\\client\\src\\reducer\\auth.js":"24","D:\\Web\\digiClass\\client\\src\\components\\Logout.js":"25","D:\\Web\\digiClass\\client\\src\\components\\Login.js":"26","D:\\Web\\digiClass\\client\\src\\reducer\\class.js":"27","D:\\Web\\digiClass\\client\\src\\components\\classPageCards\\ClassLecture.js":"28","D:\\Web\\digiClass\\client\\src\\components\\classCard\\Cards.js":"29","D:\\Web\\digiClass\\client\\src\\components\\classCard\\Card.js":"30","D:\\Web\\digiClass\\client\\src\\pages\\lecturePage.js":"31","D:\\Web\\digiClass\\client\\src\\pages\\chat.js":"32"},{"size":566,"mtime":1616381416691,"results":"33","hashOfConfig":"34"},{"size":1027,"mtime":1624781058569,"results":"35","hashOfConfig":"34"},{"size":194,"mtime":1616381144602,"results":"36","hashOfConfig":"34"},{"size":246,"mtime":1616380978799,"results":"37","hashOfConfig":"34"},{"size":407,"mtime":1623485542264,"results":"38","hashOfConfig":"34"},{"size":2108,"mtime":1613647863613,"results":"39","hashOfConfig":"34"},{"size":11225,"mtime":1613042691858,"results":"40","hashOfConfig":"34"},{"size":1035,"mtime":1616144116224,"results":"41","hashOfConfig":"34"},{"size":8497,"mtime":1612862835088,"results":"42","hashOfConfig":"34"},{"size":8661,"mtime":1612863015363,"results":"43","hashOfConfig":"34"},{"size":1558,"mtime":1623506162118,"results":"44","hashOfConfig":"34"},{"size":3147,"mtime":1624549743909,"results":"45","hashOfConfig":"34"},{"size":11183,"mtime":1624606684704,"results":"46","hashOfConfig":"34"},{"size":1539,"mtime":1615709467802,"results":"47","hashOfConfig":"34"},{"size":1732,"mtime":1615714868934,"results":"48","hashOfConfig":"34"},{"size":1582,"mtime":1615709448400,"results":"49","hashOfConfig":"34"},{"size":1829,"mtime":1615709504461,"results":"50","hashOfConfig":"34"},{"size":412,"mtime":1615718069926,"results":"51","hashOfConfig":"34"},{"size":845,"mtime":1623987649652,"results":"52","hashOfConfig":"34"},{"size":2631,"mtime":1624352167165,"results":"53","hashOfConfig":"34"},{"size":408,"mtime":1615719387319,"results":"54","hashOfConfig":"34"},{"size":1641,"mtime":1617538309986,"results":"55","hashOfConfig":"34"},{"size":10526,"mtime":1616732977890,"results":"56","hashOfConfig":"34"},{"size":639,"mtime":1616380926333,"results":"57","hashOfConfig":"34"},{"size":963,"mtime":1616158102306,"results":"58","hashOfConfig":"34"},{"size":1335,"mtime":1616158339245,"results":"59","hashOfConfig":"34"},{"size":646,"mtime":1616380732757,"results":"60","hashOfConfig":"34"},{"size":12807,"mtime":1624270411102,"results":"61","hashOfConfig":"34"},{"size":275,"mtime":1623503425426,"results":"62","hashOfConfig":"34"},{"size":475,"mtime":1623503009841,"results":"63","hashOfConfig":"34"},{"size":7867,"mtime":1624605534573,"results":"64","hashOfConfig":"34"},{"size":4602,"mtime":1624606882748,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"szblh4",{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"68"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"68"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"68"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"68"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"68"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"68"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"68"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"68"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"68"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"68"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"68"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"68"},"D:\\Web\\digiClass\\client\\src\\index.js",[],["149","150"],"D:\\Web\\digiClass\\client\\src\\App.js",["151","152"],"D:\\Web\\digiClass\\client\\src\\reducer\\index.js",["153"],"import { combineReducers } from \"redux\";\r\n\r\nimport user from \"./user\";\r\nimport auth from \"./auth\";\r\nimport classReducer from \"./class\";\r\nexport default combineReducers({\r\n  user,\r\n  auth,\r\n});\r\n","D:\\Web\\digiClass\\client\\src\\reducer\\user.js",[],"D:\\Web\\digiClass\\client\\src\\pages\\home.js",["154"],"import React from \"react\";\r\nimport { getAllClass } from \"../api\";\r\nimport ClassCard from \"../components/classCard/Cards\";\r\n\r\nfunction Home() {\r\n  const [Class, editClass] = React.useState();\r\n  React.useEffect(async () => {\r\n    var classes = await getAllClass();\r\n    editClass(classes.data);\r\n  }, []);\r\n\r\n  return <div>{Class ? <ClassCard data={Class} /> : \"Loading...\"}</div>;\r\n}\r\nexport default Home;\r\n","D:\\Web\\digiClass\\client\\src\\pages\\registration.js",[],"D:\\Web\\digiClass\\client\\src\\components\\registrationForm\\admin.js",["155"],"import React from \"react\";\r\nimport { Button, TextField, Menu, MenuItem } from \"@material-ui/core\";\r\nimport {\r\n  COLLEGE,\r\n  PRIMARY_SCHOOL,\r\n  SECONDARY_SCHOOL,\r\n  UNIVERSITY,\r\n  YEAR,\r\n  SEMESTER,\r\n  CLASS,\r\n  BRANCH,\r\n  SECTION,\r\n  DIRECTOR,\r\n  PRINCIPLE,\r\n  ADMIN,\r\n} from \"./../../constants\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport FileBase from \"react-file-base64\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n  textField: {},\r\n}));\r\n\r\nexport default function AdminForm() {\r\n  const [userData, setUserData] = React.useState({\r\n    name: \"name\",\r\n    instituteName: \"abc School\",\r\n    description: \"\",\r\n    instituteType: SECONDARY_SCHOOL,\r\n    choiceYear: CLASS,\r\n    yearQuantity: 3,\r\n    image: \"\",\r\n    choiceBranch: SECTION,\r\n    branchQuantity: 1,\r\n    designation: PRINCIPLE,\r\n    profileLink: \"\",\r\n    rank: ADMIN,\r\n  });\r\n\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [anchorElYear, setAnchorElYear] = React.useState(null);\r\n  const [anchorElBranch, setAnchorElBranch] = React.useState(null);\r\n\r\n  const handleMenuItemClick = (event, type) => {\r\n    setUserData({ ...userData, instituteType: type });\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuItemYearClick = (event, type) => {\r\n    setUserData({ ...userData, choiceYear: type });\r\n    setAnchorElYear(null);\r\n  };\r\n\r\n  const handleMenuItemBranchClick = (event, type) => {\r\n    setUserData({ ...userData, choiceBranch: type });\r\n    setAnchorElBranch(null);\r\n  };\r\n\r\n  const toggleDesignation = () => {\r\n    if (userData.designation === PRINCIPLE)\r\n      setUserData({ ...userData, designation: DIRECTOR });\r\n    else setUserData({ ...userData, designation: PRINCIPLE });\r\n  };\r\n\r\n  function handleSubmit() {}\r\n  return (\r\n    <div style={{ width: \"70%\", paddingBottom: \"100px\" }}>\r\n      <form noValidate onSubmit={handleSubmit}>\r\n        <div className=\"row\" style={{ paddingBottom: \"60px\" }}>\r\n          <div\r\n            style={{\r\n              width: \"15%\",\r\n              alignContent: \"center\",\r\n              justifyContent: \"left\",\r\n              display: \"flex\",\r\n              paddingTop: \"14px\",\r\n            }}\r\n          >\r\n            <Button\r\n              onClick={() => toggleDesignation()}\r\n              style={{ fontSize: \"18px\" }}\r\n            >\r\n              <u>{userData.designation}</u>\r\n            </Button>\r\n          </div>\r\n          <div style={{ width: \"83%\" }}>\r\n            <TextField\r\n              variant=\"standard\"\r\n              name=\"name\"\r\n              fullWidth\r\n              label=\"Full Name\"\r\n              value={userData.name}\r\n              onChange={(e) => {\r\n                setUserData({ ...userData, name: e.target.value });\r\n              }}\r\n              helperText=\"At least four characters.\"\r\n              error={userData.name.trim().length > 3 ? false : true}\r\n              style={{ marginTop: \"8px\" }}\r\n              className={classes.textField}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div style={{ paddingBottom: \"60px\" }}>\r\n          <TextField\r\n            variant=\"standard\"\r\n            name=\"profileLink\"\r\n            fullWidth\r\n            label=\"Profile Link(Optional)\"\r\n            value={userData.profileLink}\r\n            onChange={(e) => {\r\n              setUserData({ ...userData, profileLink: e.target.value });\r\n            }}\r\n            style={{ marginTop: \"8px\" }}\r\n          />\r\n        </div>\r\n        <div style={{ paddingBottom: \"60px\" }}>\r\n          <TextField\r\n            variant=\"standard\"\r\n            name=\"description\"\r\n            fullWidth\r\n            label=\"Description(Optional)\"\r\n            value={userData.description}\r\n            onChange={(e) => {\r\n              setUserData({ ...userData, description: e.target.value });\r\n            }}\r\n            style={{ marginTop: \"8px\" }}\r\n            multiline\r\n            rows={4}\r\n          />\r\n        </div>\r\n        <TextField\r\n          variant=\"standard\"\r\n          name=\"instituteName\"\r\n          fullWidth\r\n          label=\"Institute Name\"\r\n          value={userData.instituteName}\r\n          onChange={(e) => {\r\n            setUserData({ ...userData, instituteName: e.target.value });\r\n          }}\r\n          helperText=\"At least five characters.\"\r\n          error={userData.instituteName.trim().length > 5 ? false : true}\r\n          style={{ marginTop: \"8px\" }}\r\n        />\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"left\",\r\n            alignItems: \"center\",\r\n            marginTop: \"60px\",\r\n          }}\r\n          className=\"row\"\r\n        >\r\n          <div\r\n            style={{\r\n              fontWeight: \"600\",\r\n              verticalAlign: \"middle\",\r\n              paddingLeft: \"10px\",\r\n            }}\r\n          >\r\n            Institute Type:\r\n          </div>\r\n          <Button\r\n            aria-controls=\"simple-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={(event) => setAnchorEl(event.currentTarget)}\r\n          >\r\n            <u>{userData.instituteType.replace(\"_\", \" \")}</u>\r\n          </Button>\r\n          <Menu\r\n            id=\"simple-menu\"\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={Boolean(anchorEl)}\r\n            onClose={(event) => setAnchorEl(null)}\r\n          >\r\n            <MenuItem\r\n              onClick={(event) => handleMenuItemClick(event, PRIMARY_SCHOOL)}\r\n            >\r\n              Primary School\r\n            </MenuItem>\r\n            <MenuItem\r\n              onClick={(event) => handleMenuItemClick(event, SECONDARY_SCHOOL)}\r\n            >\r\n              Secondary School\r\n            </MenuItem>\r\n            <MenuItem onClick={(event) => handleMenuItemClick(event, COLLEGE)}>\r\n              College\r\n            </MenuItem>\r\n            <MenuItem\r\n              onClick={(event) => handleMenuItemClick(event, UNIVERSITY)}\r\n            >\r\n              University\r\n            </MenuItem>\r\n          </Menu>\r\n        </div>\r\n        <div\r\n          style={{\r\n            paddingTop: \"10px\",\r\n            justifyContent: \"left\",\r\n            display: \"flex\",\r\n            paddingTop: \"60px\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              fontWeight: \"600\",\r\n              verticalAlign: \"middle\",\r\n              paddingRight: \"10px\",\r\n            }}\r\n          >\r\n            Add Profile Picture\r\n          </div>\r\n          <FileBase\r\n            type=\"file\"\r\n            multiple={false}\r\n            onDone={({ base64 }) =>\r\n              setUserData({ ...userData, images: base64 })\r\n            }\r\n          />\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            marginTop: \"8px\",\r\n          }}\r\n          className=\"row\"\r\n        >\r\n          <div\r\n            style={{\r\n              width: \"50%\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              marginTop: \"60px\",\r\n            }}\r\n          >\r\n            <div>\r\n              <Button\r\n                aria-controls=\"simple-menu\"\r\n                aria-haspopup=\"true\"\r\n                onClick={(event) => setAnchorElYear(event.currentTarget)}\r\n              >\r\n                <u>{userData.choiceYear}</u>\r\n              </Button>\r\n              <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={anchorElYear}\r\n                keepMounted\r\n                open={Boolean(anchorElYear)}\r\n                onClose={(event) => setAnchorElYear(null)}\r\n              >\r\n                <MenuItem\r\n                  onClick={(event) => handleMenuItemYearClick(event, YEAR)}\r\n                >\r\n                  Year\r\n                </MenuItem>\r\n                <MenuItem\r\n                  onClick={(event) => handleMenuItemYearClick(event, SEMESTER)}\r\n                >\r\n                  Semester\r\n                </MenuItem>\r\n                <MenuItem\r\n                  onClick={(event) => handleMenuItemYearClick(event, CLASS)}\r\n                >\r\n                  Class\r\n                </MenuItem>\r\n              </Menu>\r\n            </div>\r\n            <div style={{ width: \"60px\" }}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                name=\"yearValue\"\r\n                fullWidth\r\n                error={userData.yearQuantity > 1 ? false : true}\r\n                value={userData.yearQuantity}\r\n                onChange={(e) => {\r\n                  setUserData({ ...userData, yearQuantity: e.target.value });\r\n                }}\r\n                style={{ fontSize: \"10px\" }}\r\n                type=\"number\"\r\n                inputProps={{\r\n                  style: {\r\n                    padding: 3,\r\n                  },\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div\r\n            style={{\r\n              width: \"50%\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              marginTop: \"60px\",\r\n            }}\r\n          >\r\n            <div>\r\n              <Button\r\n                aria-controls=\"simple-menu\"\r\n                aria-haspopup=\"true\"\r\n                onClick={(event) => setAnchorElBranch(event.currentTarget)}\r\n              >\r\n                <u>{userData.choiceBranch}</u>\r\n              </Button>\r\n              <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={anchorElBranch}\r\n                keepMounted\r\n                open={Boolean(anchorElBranch)}\r\n                onClose={(event) => setAnchorElBranch(null)}\r\n              >\r\n                <MenuItem\r\n                  onClick={(event) => handleMenuItemBranchClick(event, BRANCH)}\r\n                >\r\n                  Branch\r\n                </MenuItem>\r\n                <MenuItem\r\n                  onClick={(event) => handleMenuItemBranchClick(event, SECTION)}\r\n                >\r\n                  Section\r\n                </MenuItem>\r\n              </Menu>\r\n            </div>\r\n            <div style={{ width: \"60px\" }}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                name=\"yearValue\"\r\n                fullWidth\r\n                error={userData.yearQuantity > 0 ? false : true}\r\n                value={userData.yearQuantity}\r\n                onChange={(e) => {\r\n                  setUserData({ ...userData, yearQuantity: e.target.value });\r\n                }}\r\n                style={{ fontSize: \"10px\" }}\r\n                type=\"number\"\r\n                inputProps={{\r\n                  style: {\r\n                    padding: 3,\r\n                  },\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div style={{ paddingTop: \"20px\" }}>\r\n          <Button\r\n            size=\"large\"\r\n            type=\"submit\"\r\n            className={classes.button}\r\n            style={{ border: \"3px solid blueviolet\", color: \"blueviolet\" }}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Web\\digiClass\\client\\src\\constants\\index.js",[],"D:\\Web\\digiClass\\client\\src\\components\\registrationForm\\student.js",["156"],"import React from \"react\";\r\nimport { Button, TextField } from \"@material-ui/core\";\r\nimport { STUDENT, MALE, FEMALE } from \"./../../constants\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport FileBase from \"react-file-base64\";\r\nimport { addStudent } from \"./../../actions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n  textField: {},\r\n}));\r\n\r\nexport default function StudentForm() {\r\n  const [userData, setUserData] = React.useState({\r\n    name: \"\",\r\n    instituteID: \"\",\r\n    rank: STUDENT,\r\n    rollNo: \"\",\r\n    email: \"\",\r\n    class: 1,\r\n    section: \"A\",\r\n    gender: MALE,\r\n    profileLink: \"\",\r\n    images: \"\",\r\n    dob: \"01-01-2001\",\r\n  });\r\n\r\n  const toggleGender = () => {\r\n    if (userData.gender === MALE) setUserData({ ...userData, gender: FEMALE });\r\n    else setUserData({ ...userData, gender: MALE });\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  const regExp = RegExp(/^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (e) => {\r\n    console.log(\"Student Submit\");\r\n    console.log(userData);\r\n    e.preventDefault();\r\n    dispatch(addStudent(userData));\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: \"70%\", paddingBottom: \"100px\" }}>\r\n      <form noValidate onSubmit={handleSubmit}>\r\n        <div style={{ paddingBottom: \"60px\" }}>\r\n          <TextField\r\n            variant=\"standard\"\r\n            name=\"name\"\r\n            fullWidth\r\n            label=\"Name\"\r\n            value={userData.name}\r\n            onChange={(e) => {\r\n              setUserData({ ...userData, name: e.target.value });\r\n            }}\r\n            // helperText=\"At least four characters.\"\r\n            error={userData.name.trim().length > 3 ? false : true}\r\n            style={{ marginTop: \"8px\" }}\r\n            className={classes.textField}\r\n          />\r\n          <div style={{ paddingTop: \"60px\" }}>\r\n            <TextField\r\n              variant=\"standard\"\r\n              name=\"rollNo\"\r\n              fullWidth\r\n              label=\"Roll no.\"\r\n              value={userData.teacherID}\r\n              onChange={(e) => {\r\n                setUserData({ ...userData, rollNo: e.target.value });\r\n              }}\r\n              // helperText=\"At least two characters.\"\r\n              error={userData.name.trim().length > 2 ? false : true}\r\n              style={{ marginTop: \"8px\" }}\r\n              className={classes.textField}\r\n            />\r\n          </div>\r\n          <div style={{ paddingTop: \"60px\" }}>\r\n            <TextField\r\n              variant=\"standard\"\r\n              name=\"instituteID\"\r\n              fullWidth\r\n              label=\"Institute ID\"\r\n              value={userData.instituteID}\r\n              onChange={(e) => {\r\n                setUserData({ ...userData, instituteID: e.target.value });\r\n              }}\r\n              // helperText=\"At least two characters.\"\r\n              error={userData.instituteID.trim().length > 2 ? false : true}\r\n              style={{ marginTop: \"8px\" }}\r\n              className={classes.textField}\r\n            />\r\n          </div>\r\n          <div style={{ paddingTop: \"60px\" }}>\r\n            <TextField\r\n              variant=\"standard\"\r\n              name=\"email\"\r\n              fullWidth\r\n              label=\"Email\"\r\n              value={userData.email}\r\n              onChange={(e) => {\r\n                setUserData({ ...userData, email: e.target.value });\r\n              }}\r\n              // helperText=\"Enter proper email address.\"\r\n              error={regExp.test(userData.email.trim()) ? false : true}\r\n              style={{ marginTop: \"8px\" }}\r\n              className={classes.textField}\r\n            />\r\n          </div>\r\n          <div\r\n            style={{\r\n              paddingTop: \"60px\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignContent: \"center\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                paddingLeft: \"50px\",\r\n                paddingRight: \"50px\",\r\n              }}\r\n            >\r\n              <TextField\r\n                variant=\"standard\"\r\n                name=\"class\"\r\n                fullWidth\r\n                label=\"Class/Semester/Year\"\r\n                value={userData.class}\r\n                onChange={(e) => {\r\n                  setUserData({ ...userData, class: e.target.value });\r\n                }}\r\n                error={userData.class > 0 ? false : true}\r\n                type=\"number\"\r\n                style={{ marginTop: \"8px\" }}\r\n                className={classes.textField}\r\n              />\r\n            </div>\r\n            <div\r\n              style={{\r\n                paddingLeft: \"50px\",\r\n                paddingRight: \"50px\",\r\n              }}\r\n            >\r\n              <TextField\r\n                variant=\"standard\"\r\n                name=\"section\"\r\n                fullWidth\r\n                label=\"Section/Branch\"\r\n                value={userData.section}\r\n                onChange={(e) => {\r\n                  setUserData({ ...userData, section: e.target.value });\r\n                }}\r\n                error={userData.section.trim().length > 0 ? false : true}\r\n                style={{ marginTop: \"8px\" }}\r\n                className={classes.textField}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div\r\n            style={{\r\n              paddingTop: \"60px\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n            className=\"row\"\r\n          >\r\n            <div\r\n              style={{\r\n                fontWeight: \"600\",\r\n                paddingRight: \"10px\",\r\n                paddingLeft: \"20px\",\r\n                marginTop: \"10px\",\r\n                display: \"flex\",\r\n                height: \"100%\",\r\n              }}\r\n            >\r\n              Gender:\r\n            </div>\r\n            <div>\r\n              <Button\r\n                onClick={() => toggleGender()}\r\n                style={{ fontSize: \"18px\" }}\r\n              >\r\n                <u>{userData.gender}</u>\r\n              </Button>\r\n            </div>\r\n            <div\r\n              style={{\r\n                fontWeight: \"600\",\r\n                paddingRight: \"20px\",\r\n                paddingLeft: \"100px\",\r\n                marginTop: \"15px\",\r\n                display: \"flex\",\r\n                height: \"100%\",\r\n              }}\r\n            >\r\n              DOB:\r\n            </div>\r\n            <div>\r\n              <TextField\r\n                variant=\"standard\"\r\n                name=\"dob\"\r\n                fullWidth\r\n                value={userData.dob}\r\n                type=\"date\"\r\n                onChange={(e) => {\r\n                  setUserData({ ...userData, dob: e.target.value });\r\n                }}\r\n                style={{ marginTop: \"8px\" }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div style={{ paddingTop: \"60px\" }}>\r\n            <TextField\r\n              variant=\"standard\"\r\n              name=\"profileLink\"\r\n              fullWidth\r\n              label=\"Profile Link(Optional)\"\r\n              value={userData.profileLink}\r\n              onChange={(e) => {\r\n                setUserData({ ...userData, profileLink: e.target.value });\r\n              }}\r\n              style={{ marginTop: \"8px\" }}\r\n            />\r\n          </div>\r\n          <div\r\n            style={{\r\n              paddingTop: \"10px\",\r\n              justifyContent: \"left\",\r\n              display: \"flex\",\r\n              paddingTop: \"60px\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                fontWeight: \"600\",\r\n                verticalAlign: \"middle\",\r\n                paddingRight: \"10px\",\r\n              }}\r\n            >\r\n              Add Profile Picture\r\n            </div>\r\n            <FileBase\r\n              type=\"file\"\r\n              multiple={false}\r\n              onDone={({ base64 }) =>\r\n                setUserData({ ...userData, images: base64 })\r\n              }\r\n            />\r\n          </div>\r\n          <div style={{ paddingTop: \"20px\" }}>\r\n            <Button\r\n              size=\"large\"\r\n              type=\"submit\"\r\n              className={classes.button}\r\n              style={{ border: \"3px solid blueviolet\", color: \"blueviolet\" }}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Web\\digiClass\\client\\src\\components\\registrationForm\\teacher.js",["157"],"import React from \"react\";\r\nimport { Button, TextField } from \"@material-ui/core\";\r\nimport { TEACHER, MALE, FEMALE } from \"./../../constants\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport FileBase from \"react-file-base64\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addTeacher } from \"./../../actions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n  textField: {},\r\n}));\r\n\r\nexport default function TeacherForm() {\r\n  const [userData, setUserData] = React.useState({\r\n    name: \"\",\r\n    instituteID: \"\",\r\n    rank: TEACHER,\r\n    teacherID: \"\",\r\n    email: \"\",\r\n    classes: [],\r\n    sections: [],\r\n    gender: MALE,\r\n    profileLink: \"\",\r\n    images: \"\",\r\n    driveLink: \"\",\r\n    DOB: \"01-01-2001\",\r\n  });\r\n\r\n  const toggleGender = () => {\r\n    if (userData.gender === MALE) setUserData({ ...userData, gender: FEMALE });\r\n    else setUserData({ ...userData, gender: MALE });\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const regExp = RegExp(/^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/);\r\n\r\n  const handleSubmit = (e) => {\r\n    console.log(\"Teacher Submit\");\r\n    console.log(userData);\r\n    e.preventDefault();\r\n    dispatch(addTeacher(userData));\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: \"70%\", paddingBottom: \"100px\" }}>\r\n      <form noValidate onSubmit={handleSubmit}>\r\n        <div style={{ paddingBottom: \"60px\" }}>\r\n          <TextField\r\n            variant=\"standard\"\r\n            name=\"name\"\r\n            fullWidth\r\n            label=\"Name\"\r\n            value={userData.name}\r\n            onChange={(e) => {\r\n              setUserData({ ...userData, name: e.target.value });\r\n            }}\r\n            // helperText=\"At least four characters.\"\r\n            error={userData.name.trim().length > 3 ? false : true}\r\n            style={{ marginTop: \"8px\" }}\r\n            className={classes.textField}\r\n          />\r\n          <div style={{ paddingTop: \"60px\" }}>\r\n            <TextField\r\n              variant=\"standard\"\r\n              name=\"teacherID\"\r\n              fullWidth\r\n              label=\"Teacher ID.\"\r\n              value={userData.teacherID}\r\n              onChange={(e) => {\r\n                setUserData({ ...userData, teacherID: e.target.value });\r\n              }}\r\n              // helperText=\"At least two characters.\"\r\n              error={userData.name.trim().length > 2 ? false : true}\r\n              style={{ marginTop: \"8px\" }}\r\n              className={classes.textField}\r\n            />\r\n          </div>\r\n          <div style={{ paddingTop: \"60px\" }}>\r\n            <TextField\r\n              variant=\"standard\"\r\n              name=\"instituteID\"\r\n              fullWidth\r\n              label=\"Institute ID\"\r\n              value={userData.instituteID}\r\n              onChange={(e) => {\r\n                setUserData({ ...userData, instituteID: e.target.value });\r\n              }}\r\n              // helperText=\"At least two characters.\"\r\n              error={userData.instituteID.trim().length > 2 ? false : true}\r\n              style={{ marginTop: \"8px\" }}\r\n              className={classes.textField}\r\n            />\r\n          </div>\r\n          <div style={{ paddingTop: \"60px\" }}>\r\n            <TextField\r\n              variant=\"standard\"\r\n              name=\"email\"\r\n              fullWidth\r\n              label=\"Email\"\r\n              value={userData.email}\r\n              onChange={(e) => {\r\n                setUserData({ ...userData, email: e.target.value });\r\n              }}\r\n              // helperText=\"Enter proper email address.\"\r\n              error={regExp.test(userData.email.trim()) ? false : true}\r\n              style={{ marginTop: \"8px\" }}\r\n              className={classes.textField}\r\n            />\r\n          </div>\r\n          <div\r\n            style={{\r\n              paddingTop: \"60px\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignContent: \"center\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                paddingLeft: \"50px\",\r\n                paddingRight: \"50px\",\r\n              }}\r\n            >\r\n              <TextField\r\n                variant=\"standard\"\r\n                name=\"class\"\r\n                fullWidth\r\n                label=\"Classes/Semesters/Years\"\r\n                value={userData.class}\r\n                onChange={(e) => {\r\n                  setUserData({\r\n                    ...userData,\r\n                    classes: e.target.value.split(\",\"),\r\n                  });\r\n                }}\r\n                error={userData.classes.length > 0 ? false : true}\r\n                style={{ marginTop: \"8px\" }}\r\n                className={classes.textField}\r\n              />\r\n            </div>\r\n            <div\r\n              style={{\r\n                paddingLeft: \"50px\",\r\n                paddingRight: \"50px\",\r\n              }}\r\n            >\r\n              <TextField\r\n                variant=\"standard\"\r\n                name=\"section\"\r\n                fullWidth\r\n                label=\"Sections/Branches\"\r\n                value={userData.sections}\r\n                onChange={(e) => {\r\n                  setUserData({\r\n                    ...userData,\r\n                    sections: e.target.value.split(\",\"),\r\n                  });\r\n                }}\r\n                error={userData.sections.length > 0 ? false : true}\r\n                style={{ marginTop: \"8px\" }}\r\n                className={classes.textField}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div\r\n            style={{\r\n              paddingTop: \"60px\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n            className=\"row\"\r\n          >\r\n            <div\r\n              style={{\r\n                fontWeight: \"600\",\r\n                paddingRight: \"10px\",\r\n                paddingLeft: \"20px\",\r\n                marginTop: \"10px\",\r\n                display: \"flex\",\r\n                height: \"100%\",\r\n              }}\r\n            >\r\n              Gender:\r\n            </div>\r\n            <div>\r\n              <Button\r\n                onClick={() => toggleGender()}\r\n                style={{ fontSize: \"18px\" }}\r\n              >\r\n                <u>{userData.gender}</u>\r\n              </Button>\r\n            </div>\r\n            <div\r\n              style={{\r\n                fontWeight: \"600\",\r\n                paddingRight: \"20px\",\r\n                paddingLeft: \"100px\",\r\n                marginTop: \"15px\",\r\n                display: \"flex\",\r\n                height: \"100%\",\r\n              }}\r\n            >\r\n              DOB:\r\n            </div>\r\n            <div>\r\n              <TextField\r\n                variant=\"standard\"\r\n                name=\"dob\"\r\n                fullWidth\r\n                value={userData.dob}\r\n                type=\"date\"\r\n                onChange={(e) => {\r\n                  setUserData({ ...userData, dob: e.target.value });\r\n                }}\r\n                style={{ marginTop: \"8px\" }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div style={{ paddingTop: \"60px\" }}>\r\n            <TextField\r\n              variant=\"standard\"\r\n              name=\"profileLink\"\r\n              fullWidth\r\n              label=\"Profile Link(Optional)\"\r\n              value={userData.profileLink}\r\n              onChange={(e) => {\r\n                setUserData({ ...userData, profileLink: e.target.value });\r\n              }}\r\n              style={{ marginTop: \"8px\" }}\r\n            />\r\n          </div>\r\n          <div\r\n            style={{\r\n              paddingTop: \"10px\",\r\n              justifyContent: \"left\",\r\n              display: \"flex\",\r\n              paddingTop: \"60px\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                fontWeight: \"600\",\r\n                verticalAlign: \"middle\",\r\n                paddingRight: \"10px\",\r\n              }}\r\n            >\r\n              Add Profile Picture\r\n            </div>\r\n            <FileBase\r\n              type=\"file\"\r\n              multiple={false}\r\n              onDone={({ base64 }) =>\r\n                setUserData({ ...userData, images: base64 })\r\n              }\r\n            />\r\n          </div>\r\n          <div style={{ paddingTop: \"20px\" }}>\r\n            <Button\r\n              size=\"large\"\r\n              type=\"submit\"\r\n              className={classes.button}\r\n              style={{ border: \"3px solid blueviolet\", color: \"blueviolet\" }}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Web\\digiClass\\client\\src\\actions\\index.js",["158","159","160"],"import * as api from \"../api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { ADD_STUDENT, ADD_TEACHER, ADD_CLASS } from \"./../constants\";\r\n\r\nexport const addStudent = (userData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.createUser(userData);\r\n    dispatch({ type: ADD_STUDENT, payload: data });\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n\r\nexport const addTeacher = (userData) => async (dispatch) => {\r\n  try {\r\n    const data = await api.createUser(userData);\r\n    dispatch({ type: ADD_TEACHER, payload: data });\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n\r\nexport const addClass = async (classData, task) => {\r\n  if (task === \"ADD\") {\r\n    try {\r\n      const data = await api.createClass(classData);\r\n      if (data) {\r\n        console.log(data);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  } else {\r\n    try {\r\n      const data = await api.editClass(classData);\r\n      if (data) {\r\n        console.log(data);\r\n      }\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  }\r\n};\r\n\r\nexport const addLecture = async (lectureData, task) => {\r\n  if (task == \"ADD\") {\r\n    try {\r\n      let data = await api.createLecture(lectureData);\r\n      if (data) {\r\n        console.log(data);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  } else {\r\n    try {\r\n      let data = await api.editLecture(lectureData);\r\n      if (data) {\r\n        console.log(data);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n};\r\n","D:\\Web\\digiClass\\client\\src\\api\\index.js",[],"D:\\Web\\digiClass\\client\\src\\pages\\class.js",["161","162"],"import React from \"react\";\r\nimport AStatusCard from \"./../components/classStatusCards/AssignmentCard\";\r\nimport LStatusCard from \"./../components/classStatusCards/LectureCard\";\r\nimport PStatusCard from \"./../components/classStatusCards/PracticeCard\";\r\nimport CStatusCard from \"./../components/classStatusCards/ChatCard\";\r\nimport ClassAssignmentTable from \"../components/classFrames/assignment\";\r\nimport ClassLectureTable from \"../components/classFrames/lecture\";\r\nimport ClassPracticeTable from \"../components/classFrames/practice\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { getAllLecture, getStatus } from \"../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ChatPage from \"./chat\";\r\n\r\nexport default function Class() {\r\n  const LECTURE = \"lecture\";\r\n  const ASSIGNMENT = \"assignment\";\r\n  const PRACTICE = \"practice\";\r\n  const CHAT = \"chat\";\r\n  const [activeFrame, changeFrame] = React.useState({ frame: LECTURE });\r\n  const location = useLocation();\r\n  const [classLectures, editClassLectures] = React.useState([]);\r\n  const [classStatus, editClassStatus] = React.useState([]);\r\n  const [classData, editData] = React.useState({\r\n    headBackgroundColor: \"green\",\r\n    headTextColor: \"white\",\r\n    bodyBackgroundColor: \"#014182\",\r\n    bodyBlockColor: \"white\",\r\n    subjectCode: \"TEST001\",\r\n    subjectTeacher: \"IIITU Developers\",\r\n    subjectName: \"Test Corse 1\",\r\n    subjectType: \"Temp\",\r\n    classKey: \"00000\",\r\n  });\r\n  const [classTotal, editClassTotal] = React.useState({\r\n    assignmentTotal: 0,\r\n    lectureTotal: 0,\r\n    practiceTotal: 0,\r\n  });\r\n  const [classCompleted, editClassCompleted] = React.useState({\r\n    assignmentCompleted: 0,\r\n    lectureCompleted: 0,\r\n    practiceCompleted: 0,\r\n  });\r\n\r\n  const [flag, editFlag] = React.useState({\r\n    lecture: false,\r\n    status: false,\r\n  });\r\n\r\n  const history = useHistory();\r\n  var rollNo = \"TEACHER\";\r\n\r\n  React.useEffect(async () => {\r\n    var data = location.state.data;\r\n    editData({\r\n      ...classData,\r\n      headBackgroundColor: data.headBackgroundColor,\r\n      headTextColor: data.headTextColor,\r\n      bodyBackgroundColor: data.bodyBackgroundColor,\r\n      bodyBlockColor: data.bodyBlockColor,\r\n      subjectCode: data.subjectCode,\r\n      subjectTeacher: data.subjectTeacher,\r\n      subjectName: data.subjectName,\r\n      subjectType: data.subjectType,\r\n      classKey: data.classKey,\r\n    });\r\n\r\n    await getAllLecture({ classKey: data.classKey }).then((res) => {\r\n      editClassLectures(res.data);\r\n      editClassTotal({ ...classTotal, lectureTotal: res.data.length });\r\n      console.log(res.data);\r\n      editFlag({ ...flag, lecture: true });\r\n    });\r\n    await getStatus({ classKey: data.subjectCode, rollNo: rollNo }).then(\r\n      (res) => {\r\n        editClassStatus(res.data);\r\n        editClassCompleted({\r\n          ...classCompleted,\r\n          lectureCompleted: res.data.length,\r\n        });\r\n        console.log(res.data);\r\n        editFlag({ ...flag, status: true });\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  const addClass = () => {\r\n    history.push({\r\n      pathname: \"/page/\" + classData.classKey,\r\n      state: {\r\n        task: \"ADD\",\r\n        unit: classLectures[0].unit,\r\n        unitN: classLectures[0].unitN,\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{ marginTop: \"15px\", marginLeft: \"20px\", marginRight: \"20px\" }}\r\n      >\r\n        <center>\r\n          <div>\r\n            {/* ----------------------------------------------------------------------------------------------Heading */}\r\n            <div\r\n              style={{\r\n                width: \"100%\",\r\n                backgroundColor: classData.headBackgroundColor,\r\n                borderRadius: \"15px\",\r\n                fontStyle: \"Calibri\",\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  width: \"100%\",\r\n                  marginTop: \"15px\",\r\n                  paddingLeft: \"15px\",\r\n                  paddingRight: \"30px\",\r\n                  display: \"flex\",\r\n                  alignContent: \"space-between\",\r\n                  justifyContent: \"space-between\",\r\n                }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    color: classData.headTextColor,\r\n                    fontSize: \"11px\",\r\n                    fontWeight: \"bold\",\r\n                    alignSelf: \"left\",\r\n                    marginTop: \"10px\",\r\n                  }}\r\n                >\r\n                  {classData.subjectCode}\r\n                </div>\r\n                <div\r\n                  style={{\r\n                    color: classData.headTextColor,\r\n                    fontSize: \"11px\",\r\n                    fontWeight: \"bold\",\r\n                    alignSelf: \"right\",\r\n                    marginTop: \"10px\",\r\n                  }}\r\n                >\r\n                  {classData.subjectTeacher}\r\n                </div>\r\n              </div>\r\n              <div\r\n                style={{\r\n                  color: classData.headTextColor,\r\n                  fontSize: \"30px\",\r\n                  fontWeight: \"bold\",\r\n                  marginTop: \"15px\",\r\n                }}\r\n              >\r\n                {classData.subjectName}\r\n              </div>\r\n              <div\r\n                style={{\r\n                  fontSize: \"11px\",\r\n                  fontWeight: \"bold\",\r\n                  color: classData.headTextColor,\r\n                  alignContent: \"center\",\r\n                  justifyContent: \"center\",\r\n                  marginTop: \"15px\",\r\n                  paddingBottom: \"15px\",\r\n                }}\r\n              >\r\n                {classData.subjectType}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              border: \"2px solid\",\r\n              borderRadius: \"15px\",\r\n              borderColor: classData.bodyBlockColor,\r\n              borderWidth: \"3px\",\r\n              paddingTop: \"10px\",\r\n              paddingBottom: \"10px\",\r\n              paddingLeft: \"10px\",\r\n              paddingRight: \"10px\",\r\n              marginTop: \"20px\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                width: \"100%\",\r\n                show: \"flex\",\r\n                justifyContent: \"space-around\",\r\n              }}\r\n              className=\"row\"\r\n            >\r\n              {/* -----------------------------------------------------------------------Present-Status */}\r\n              <div\r\n                style={{ margin: \"5px\" }}\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  changeFrame({ ...activeFrame, frame: ASSIGNMENT });\r\n                }}\r\n              >\r\n                <AStatusCard\r\n                  backgroundColor={classData.bodyBackgroundColor}\r\n                  foregroundColor={classData.bodyBlockColor}\r\n                  completed={classCompleted.assignmentCompleted}\r\n                  total={classTotal.assignmentTotal}\r\n                />\r\n              </div>\r\n              <div\r\n                style={{ margin: \"5px\" }}\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  changeFrame({ ...activeFrame, frame: LECTURE });\r\n                }}\r\n              >\r\n                <LStatusCard\r\n                  backgroundColor={classData.bodyBackgroundColor}\r\n                  foregroundColor={classData.bodyBlockColor}\r\n                  completed={classCompleted.lectureCompleted}\r\n                  total={classTotal.lectureTotal}\r\n                />\r\n              </div>\r\n              <div\r\n                style={{ margin: \"5px\" }}\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  changeFrame({ ...activeFrame, frame: PRACTICE });\r\n                }}\r\n              >\r\n                <PStatusCard\r\n                  backgroundColor={classData.bodyBackgroundColor}\r\n                  foregroundColor={classData.bodyBlockColor}\r\n                  completed={classCompleted.practiceCompleted}\r\n                  total={classTotal.practiceTotal}\r\n                />\r\n              </div>\r\n              <div\r\n                style={{ margin: \"5px\" }}\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  changeFrame({ ...activeFrame, frame: CHAT });\r\n                }}\r\n              >\r\n                <CStatusCard\r\n                  backgroundColor={classData.bodyBackgroundColor}\r\n                  state=\"0\"\r\n                  foregroundColor={classData.bodyBlockColor}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div\r\n              style={{\r\n                paddingTop: \"20px\",\r\n                justifyContent: \"space-around\",\r\n                color: classData.bodyBackgroundColor,\r\n                fontWeight: \"600\",\r\n                display: \"flex\",\r\n              }}\r\n            ></div>\r\n            <diV\r\n              style={{\r\n                width: \"100%\",\r\n                display: \"flex\",\r\n                marginLeft: \"25px\",\r\n                paddingBottom: \"5px\",\r\n                fontWeight: \"800\",\r\n                textColor: `${classData.headTextColor}`,\r\n              }}\r\n            >\r\n              {activeFrame.frame === \"LECTURE\" ? (\r\n                rollNo === \"TEACHER\" ? (\r\n                  <diV>\r\n                    <Button\r\n                      onClick={() => {\r\n                        addClass();\r\n                      }}\r\n                      style={{\r\n                        fontWeight: \"700\",\r\n                      }}\r\n                      color=\"secondary\"\r\n                    >\r\n                      + Add\r\n                    </Button>\r\n                  </diV>\r\n                ) : (\r\n                  `${rollNo}:`\r\n                )\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </diV>\r\n            <div>\r\n              {activeFrame.frame === ASSIGNMENT ? (\r\n                <ClassAssignmentTable\r\n                  backColor={classData.bodyBackgroundColor}\r\n                  frontColor={classData.headBackgroundColor}\r\n                />\r\n              ) : activeFrame.frame === LECTURE ? (\r\n                <ClassLectureTable\r\n                  backColor={classData.bodyBackgroundColor}\r\n                  frontColor={classData.headBackgroundColor}\r\n                  lectures={classLectures}\r\n                  status={classStatus}\r\n                  rollNo={rollNo}\r\n                />\r\n              ) : activeFrame.frame === PRACTICE ? (\r\n                <ClassPracticeTable\r\n                  backColor={classData.bodyBackgroundColor}\r\n                  frontColor={classData.headBackgroundColor}\r\n                />\r\n              ) : (\r\n                <ChatPage\r\n                  classKey={classData.classKey}\r\n                  rollNo={rollNo}\r\n                  headBackgroundColor={classData.headBackgroundColor}\r\n                  bodyBackgroundColor={classData.bodyBackgroundColor}\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </center>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Web\\digiClass\\client\\src\\components\\classStatusCards\\AssignmentCard.js",[],"D:\\Web\\digiClass\\client\\src\\components\\classStatusCards\\LectureCard.js",[],"D:\\Web\\digiClass\\client\\src\\components\\classStatusCards\\PracticeCard.js",[],"D:\\Web\\digiClass\\client\\src\\components\\classStatusCards\\ChatCard.js",[],"D:\\Web\\digiClass\\client\\src\\components\\classFrames\\assignment.js",["163"],"import React, { useState } from \"react\";\r\nimport Card from \"./card/card\";\r\n\r\nconst ClassAssignmentTable = ({ backColor, frontColor }) => {\r\n  return (\r\n    <div>\r\n      <Card fontColor={frontColor} borderColor={backColor} />\r\n      <Card fontColor={frontColor} borderColor={backColor} />\r\n      <Card fontColor={frontColor} borderColor={backColor} />\r\n    </div>\r\n  );\r\n};\r\nexport default ClassAssignmentTable;\r\n","D:\\Web\\digiClass\\client\\src\\components\\classFrames\\card\\card.js",[],"D:\\Web\\digiClass\\client\\src\\components\\classFrames\\lecture.js",["164","165"],"import React from \"react\";\r\nimport \"./card/style.css\";\r\nimport TurnedInIcon from \"@material-ui/icons/TurnedIn\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst ClassLectureTable = ({ backColor, frontColor, lectures, status }) => {\r\n  React.useEffect(async () => {\r\n    // console.log(lectures);\r\n    // console.log(status);\r\n    lectures.sort((a, b) => a.assignmentKey > b.assignmentKey);\r\n    status.sort((a, b) => a.assignmentKey > b.assignmentKey);\r\n  }, []);\r\n  const history = useHistory();\r\n  const moveToLecture = (key, title, bookmark, completed) => {\r\n    history.push({\r\n      pathname: \"/lecture/\" + key,\r\n      state: { title: title, bookmark: bookmark, completed: completed },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <diV>\r\n      {lectures.length && status.length ? (\r\n        <ul style={{ listStyle: \"none\" }}>\r\n          {lectures.map((unit, index) => (\r\n            <li key={unit.assignmentKey}>\r\n              <div>\r\n                <div\r\n                  style={{\r\n                    width: \"100%\",\r\n                    marginTop: \"5px\",\r\n                    border: `${\r\n                      status[index].completed\r\n                        ? \"2px solid\"\r\n                        : `2px solid ${frontColor}`\r\n                    }`,\r\n                    borderRadius: \"5px\",\r\n                    color: frontColor,\r\n                    borderColor: backColor,\r\n                    fontWeight: \"600\",\r\n                    fontStyle: \"italic\",\r\n                    display: \"flex\",\r\n                  }}\r\n                  onClick={() => {\r\n                    moveToLecture(\r\n                      unit.assignmentKey,\r\n                      unit.title,\r\n                      status[index].bookmark,\r\n                      status[index].completed\r\n                    );\r\n                  }}\r\n                  className=\"unit\"\r\n                >\r\n                  <div\r\n                    style={{ width: \"20%\" }}\r\n                  >{`${unit.unitN} ${unit.unit}`}</div>\r\n                  <div style={{ width: \"5%\" }}>\r\n                    {status[index].bookmark ? <TurnedInIcon /> : null}\r\n                  </div>\r\n                  <div style={{ width: \"50%\" }}>{unit.title}</div>\r\n                  <div\r\n                    style={{ width: \"25%\" }}\r\n                  >{`Mark Completed: ${unit.completed}`}</div>\r\n                </div>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        \"Loading...\"\r\n      )}\r\n    </diV>\r\n  );\r\n};\r\nexport default ClassLectureTable;\r\n","D:\\Web\\digiClass\\client\\src\\components\\classFrames\\practice.js",["166"],"import React, { useState } from \"react\";\r\nimport Card from \"./card/card\";\r\n\r\nconst ClassPracticeTable = ({ backColor, frontColor }) => {\r\n  return (\r\n    <div>\r\n      <Card fontColor={frontColor} borderColor={backColor} />\r\n      <Card fontColor={frontColor} borderColor={backColor} />\r\n      <Card fontColor={frontColor} borderColor={backColor} />\r\n    </div>\r\n  );\r\n};\r\nexport default ClassPracticeTable;\r\n","D:\\Web\\digiClass\\client\\src\\pages\\cardPage.js",["167","168"],"import React from \"react\";\r\n\r\nimport ClassRoomCard from \"../components/classPageCards/ClassRoom\";\r\nimport ClassLectureCard from \"../components/classPageCards/ClassLecture\";\r\n\r\nfunction getRandom() {\r\n  return Math.floor((Math.random() * 50 + 1) / 5);\r\n}\r\n\r\nexport default function CardPage() {\r\n  var subjectTeacher = \"IIITU Developers\";\r\n  var backgroundLocation =\r\n    \"/images/background\" + getRandom().toString() + \".jfif\";\r\n  return (\r\n    <div style={{ height: \"100vh\" }}>\r\n      <div\r\n        style={{\r\n          backgroundImage: `url(${backgroundLocation})`,\r\n          backgroundSize: \"cover\",\r\n          backgroundPosition: \"center center\",\r\n          backgroundRepeat: \"no-repeat\",\r\n          backgroundColor: \"black\",\r\n          height: \"100vh\",\r\n          show: \"flex\",\r\n          backgroundAttachment: \"fixed\",\r\n        }}\r\n      >\r\n        <center>\r\n          <div\r\n            style={{\r\n              paddingTop: \"10vh\",\r\n              paddingBottom: \"10vh\",\r\n              scrollBehavior: \"smooth\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                backgroundColor: \"rgb(200,200,200,0.8)\",\r\n                justifyContent: \"center\",\r\n                borderRadius: \"10px\",\r\n                width: \"70vh\",\r\n              }}\r\n            >\r\n              {/* <ClassRoomCard subjectTeacher={subjectTeacher} task=\"ADD\" /> */}\r\n              <ClassLectureCard\r\n                task=\"ADD\"\r\n                unitN={1}\r\n                unit=\"React\"\r\n                classKey=\"TEST001\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </center>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Web\\digiClass\\client\\src\\components\\classPageCards\\ClassRoom.js",["169","170"],"import React from \"react\";\r\nimport { addClass } from \"../../actions\";\r\nimport { Button, TextField, Menu, MenuItem } from \"@material-ui/core\";\r\n\r\nconst ClassRoomCard = ({ subjectTeacher, task }) => {\r\n  const [dataCard, setData] = React.useState({\r\n    classKey: \"\",\r\n    headBackgroundColor: \"\",\r\n    headTextColor: \"\",\r\n    bodyBackgroundColor: \"\",\r\n    bodyBlockColor: \"\",\r\n    subjectCode: \"\",\r\n    subjectName: \"\",\r\n    subjectType: \"THEORY\",\r\n    studentsAllowed: [],\r\n    subjectTeacher: [subjectTeacher],\r\n  });\r\n\r\n  const [validator, setValidator] = React.useState({\r\n    headBackgroundColor: false,\r\n    headTextColor: false,\r\n    bodyBackgroundColor: false,\r\n    bodyBlockColor: false,\r\n    subjectCode: false,\r\n    subjectName: false,\r\n    subjectType: null,\r\n    studentsAllowed: false,\r\n  });\r\n\r\n  let [update, setUpdate] = React.useState(1);\r\n\r\n  let [correct, setCorrect] = React.useState(1);\r\n\r\n  const HandleSubmit = () => {\r\n    setUpdate(update + 1);\r\n    setCorrect(correct + 1);\r\n    console.log(dataCard.studentsAllowed.filter((e) => e.trim()));\r\n    addClass(dataCard, task);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    var v1 = dataCard.subjectCode;\r\n    var v2 = dataCard.subjectType;\r\n    var val = v1 + v2;\r\n    setData({\r\n      ...dataCard,\r\n      classKey: val,\r\n    });\r\n  }, [update]);\r\n\r\n  React.useEffect(() => {\r\n    var v3 = dataCard.studentsAllowed;\r\n    var arr = v3.filter((e) => e.trim());\r\n    setData({\r\n      ...dataCard,\r\n      studentsAllowed: arr,\r\n    });\r\n  }, [correct]);\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          justifyContent: \"center\",\r\n          fontWeight: \"bold\",\r\n          fontSize: \"35px\",\r\n          color: \"white\",\r\n        }}\r\n      >\r\n        {task === \"ADD\" ? \"ADD CLASS\" : \"EDIT DETAILS\"}\r\n      </div>\r\n      <div\r\n        style={{\r\n          paddingLeft: \"5px\",\r\n          paddingRight: \"5px\",\r\n          paddingTop: \"10px\",\r\n        }}\r\n      >\r\n        <TextField\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          label={\r\n            <div\r\n              style={{\r\n                backgroundColor: \"white\",\r\n                borderRadius: \"10px\",\r\n                padding: \"5px\",\r\n              }}\r\n            >\r\n              Subject Code\r\n            </div>\r\n          }\r\n          value={dataCard.subjectCode}\r\n          onChange={(e) => {\r\n            setValidator({\r\n              ...validator,\r\n              subjectCode: e.target.value.length < 3,\r\n            });\r\n            setData({ ...dataCard, subjectCode: e.target.value });\r\n            setUpdate(update + 1);\r\n          }}\r\n          error={validator.subjectCode}\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            width: \"90%\",\r\n            marginBottom: \"15px\",\r\n          }}\r\n        />\r\n        <TextField\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          label={\r\n            <div\r\n              style={{\r\n                backgroundColor: \"white\",\r\n                borderRadius: \"10px\",\r\n                padding: \"5px\",\r\n              }}\r\n            >\r\n              Subject Name\r\n            </div>\r\n          }\r\n          value={dataCard.subjectName}\r\n          onChange={(e) => {\r\n            setValidator({\r\n              ...validator,\r\n              subjectName: e.target.value.length < 3,\r\n            });\r\n            setData({ ...dataCard, subjectName: e.target.value });\r\n          }}\r\n          error={validator.subjectName}\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            width: \"90%\",\r\n            marginBottom: \"15px\",\r\n          }}\r\n        />\r\n        <TextField\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          label={\r\n            <div\r\n              style={{\r\n                backgroundColor: \"white\",\r\n                borderRadius: \"10px\",\r\n                padding: \"5px\",\r\n              }}\r\n            >\r\n              Students Allowed\r\n            </div>\r\n          }\r\n          value={dataCard.studentsAllowed.join(\",\")}\r\n          onChange={(e) => {\r\n            setValidator({\r\n              ...validator,\r\n              studentsAllowed:\r\n                e.target.value.replace(/\\s/g, \" \").split(\",\")[0] === \"\" ||\r\n                e.target.value.replace(/\\s/g, \" \").split(\",\")[0] === \" \",\r\n            });\r\n            setData({\r\n              ...dataCard,\r\n              studentsAllowed: e.target.value.replace(\" \", \"\").split(\",\"),\r\n            });\r\n          }}\r\n          error={validator.studentsAllowed}\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            width: \"90%\",\r\n            marginBottom: \"15px\",\r\n          }}\r\n        />\r\n        <label\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            color: \"white\",\r\n          }}\r\n        >\r\n          <p\r\n            style={{\r\n              fontWeight: \"bold\",\r\n              paddingRight: \"5px\",\r\n              paddingTop: \"14px\",\r\n            }}\r\n          >\r\n            Type of course\r\n          </p>\r\n          <Button\r\n            aria-controls=\"simple-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={(e) =>\r\n              setValidator({ ...validator, subjectType: e.currentTarget })\r\n            }\r\n            style={{ backgroundColor: \"rgb(200,200,200,0.6)\" }}\r\n          >\r\n            <div\r\n              style={{\r\n                color: \"white\",\r\n              }}\r\n            >\r\n              {dataCard.subjectType}\r\n            </div>\r\n          </Button>\r\n          <Menu\r\n            id=\"simple-menu\"\r\n            anchorEl={validator.subjectType}\r\n            keepMounted\r\n            open={Boolean(validator.subjectType)}\r\n            onClose={() => setValidator({ ...validator, subjectType: null })}\r\n          >\r\n            <MenuItem\r\n              onClick={() => {\r\n                setValidator({ ...validator, subjectType: null });\r\n                setData({ ...dataCard, subjectType: \"THEORY\" });\r\n                setUpdate(update + 1);\r\n              }}\r\n            >\r\n              THEORY\r\n            </MenuItem>\r\n            <MenuItem\r\n              onClick={() => {\r\n                setValidator({ ...validator, subjectType: null });\r\n                setData({ ...dataCard, subjectType: \"LAB\" });\r\n                setUpdate(update + 1);\r\n              }}\r\n            >\r\n              LAB\r\n            </MenuItem>\r\n            <MenuItem\r\n              onClick={() => {\r\n                setValidator({ ...validator, subjectType: null });\r\n                setData({ ...dataCard, subjectType: \"PRACTICUM\" });\r\n                setUpdate(update + 1);\r\n              }}\r\n            >\r\n              PRACTICUM\r\n            </MenuItem>\r\n          </Menu>\r\n        </label>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          label={\r\n            <div\r\n              style={{\r\n                backgroundColor: \"white\",\r\n                borderRadius: \"10px\",\r\n                padding: \"5px\",\r\n              }}\r\n            >\r\n              Color 1\r\n            </div>\r\n          }\r\n          value={dataCard.headBackgroundColor}\r\n          onChange={(e) => {\r\n            setValidator({\r\n              ...validator,\r\n              headBackgroundColor: e.target.value.length === 0,\r\n            });\r\n            setData({ ...dataCard, headBackgroundColor: e.target.value });\r\n          }}\r\n          error={validator.headBackgroundColor}\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            width: \"90%\",\r\n            marginBottom: \"15px\",\r\n          }}\r\n        />\r\n        <TextField\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          label={\r\n            <div\r\n              style={{\r\n                backgroundColor: \"white\",\r\n                borderRadius: \"10px\",\r\n                padding: \"5px\",\r\n              }}\r\n            >\r\n              Color 2\r\n            </div>\r\n          }\r\n          value={dataCard.headTextColor}\r\n          onChange={(e) => {\r\n            setValidator({\r\n              ...validator,\r\n              headTextColor: e.target.value.length === 0,\r\n            });\r\n            setData({ ...dataCard, headTextColor: e.target.value });\r\n          }}\r\n          error={validator.headTextColor}\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            width: \"90%\",\r\n            marginBottom: \"15px\",\r\n          }}\r\n        />\r\n        <TextField\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          label={\r\n            <div\r\n              style={{\r\n                backgroundColor: \"white\",\r\n                borderRadius: \"10px\",\r\n                padding: \"5px\",\r\n              }}\r\n            >\r\n              Color 3\r\n            </div>\r\n          }\r\n          value={dataCard.bodyBackgroundColor}\r\n          onChange={(e) => {\r\n            setValidator({\r\n              ...validator,\r\n              bodyBackgroundColor: e.target.value.length === 0,\r\n            });\r\n            setData({ ...dataCard, bodyBackgroundColor: e.target.value });\r\n          }}\r\n          error={validator.bodyBackgroundColor}\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            width: \"90%\",\r\n            marginBottom: \"15px\",\r\n          }}\r\n        />\r\n        <TextField\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          label={\r\n            <div\r\n              style={{\r\n                backgroundColor: \"white\",\r\n                borderRadius: \"10px\",\r\n                padding: \"5px\",\r\n              }}\r\n            >\r\n              Color 4\r\n            </div>\r\n          }\r\n          value={dataCard.bodyBorderColor}\r\n          onChange={(e) => {\r\n            setValidator({\r\n              ...validator,\r\n              bodyBlockColor: e.target.value.length === 0,\r\n            });\r\n            setData({ ...dataCard, bodyBlockColor: e.target.value });\r\n          }}\r\n          error={validator.bodyBlockColor}\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            width: \"90%\",\r\n            marginBottom: \"15px\",\r\n          }}\r\n        />\r\n        <button\r\n          onClick={() => HandleSubmit()}\r\n          style={{\r\n            padding: \"10px\",\r\n            backgroundColor: \"blueviolet\",\r\n            color: \"white\",\r\n            fontWeight: \"bold\",\r\n            width: \"90%\",\r\n            borderRadius: \"10px\",\r\n            marginBottom: \"15px\",\r\n          }}\r\n        >\r\n          {task === \"ADD\" ? \"Create\" : \"Change\"}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClassRoomCard;\r\n","D:\\Web\\digiClass\\client\\src\\reducer\\auth.js",[],"D:\\Web\\digiClass\\client\\src\\components\\Logout.js",[],["171","172"],"D:\\Web\\digiClass\\client\\src\\components\\Login.js",[],"D:\\Web\\digiClass\\client\\src\\reducer\\class.js",["173"],"import * as actionType from \"../constants/index\";\r\nimport { ADD_CLASS } from \"../constants\";\r\nimport { addClass } from \"../actions/index\";\r\nconst classReducer = (state = [], action) => {\r\n  // console.log(action.payload);\r\n  switch (action.type) {\r\n    case ADD_CLASS:\r\n      // return [...state, action.payload.data];\r\n      addClass(\r\n        action.payload.data,\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n          window.__REDUX_DEVTOOLS_EXTENSION__()\r\n      );\r\n      return [{ state: \"online\" }];\r\n    default:\r\n      console.log(\"Invalid Action Type On classReducer\");\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default classReducer;\r\n","D:\\Web\\digiClass\\client\\src\\components\\classPageCards\\ClassLecture.js",["174","175","176","177","178","179","180","181","182","183","184","185","186","187","188"],"import React from \"react\";\r\nimport { addLecture } from \"../../actions\";\r\nimport {\r\n  List,\r\n  TextField,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  Avatar,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  IconButton,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport FlareIcon from \"@material-ui/icons/Flare\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { IndeterminateCheckBoxOutlined } from \"@material-ui/icons\";\r\nimport { useParams } from \"react-router-dom\";\r\nconst ClassLectureCard = ({}) => {\r\n  const [classKey, editClassKey] = React.useState(\"00000\");\r\n  const [task, editTask] = React.useState(\"ADD\");\r\n  const [unit, editUnit] = React.useState(\"Temp\");\r\n  const [unitN, editUnitN] = React.useState(1);\r\n  const [dataCard, setData] = React.useState({\r\n    classKey: classKey,\r\n    assignmentKey: \"\",\r\n    title: \"\",\r\n    unitN: unitN,\r\n    unit: unit,\r\n    topics: [],\r\n    files: [],\r\n    completed: 0,\r\n  });\r\n  const [validator, setValidator] = React.useState({\r\n    title: false,\r\n    unitN: false,\r\n    unit: false,\r\n    topic: false,\r\n  });\r\n\r\n  const location = useLocation();\r\n\r\n  let [topics, setTopics] = React.useState(-1);\r\n\r\n  let [topic, setTopic] = React.useState(\"\");\r\n\r\n  let [tempT, changeT] = React.useState(1);\r\n\r\n  let [tempD, changeD] = React.useState(1);\r\n\r\n  let [tempA, changeA] = React.useState(1);\r\n\r\n  let [file, addFile] = React.useState(null);\r\n\r\n  let [tempF, changeF] = React.useState(1);\r\n\r\n  let [tempR, changeR] = React.useState(1);\r\n\r\n  React.useEffect(() => {\r\n    if (file != undefined) changeF(tempF + 1);\r\n  }, [file]);\r\n\r\n  React.useEffect(() => {\r\n    var index = topics;\r\n    if (topics !== -1) {\r\n      var arr = dataCard.topics;\r\n      arr[index].imp ? (arr[index].imp = 0) : (arr[index].imp = 1);\r\n      setData({ ...dataCard, topics: arr });\r\n    }\r\n  }, [tempT]);\r\n\r\n  React.useEffect(() => {\r\n    if (topics !== -1) {\r\n      var mat = dataCard.topics;\r\n      var arr = [];\r\n      for (var i = 0; i < mat.length; i++) if (i != topics) arr.push(mat[i]);\r\n      setData({ ...dataCard, topics: arr });\r\n      setTopics(-1);\r\n    }\r\n  }, [tempD]);\r\n\r\n  React.useEffect(() => {\r\n    if (topic !== \"\") {\r\n      var arr = dataCard.topics;\r\n      arr.push({ topic: topic, imp: 0 });\r\n      setData({ ...dataCard, topics: arr });\r\n      setTopic(\"\");\r\n    }\r\n  }, [tempA]);\r\n\r\n  React.useEffect(() => {\r\n    if (file !== null) {\r\n      var arr = dataCard.files;\r\n      arr.push(file);\r\n      addFile(null);\r\n    }\r\n  }, [tempF]);\r\n\r\n  React.useEffect(() => {\r\n    if (topics !== -1) {\r\n      var mat = dataCard.files;\r\n      var arr = [];\r\n      for (var i = 0; i < mat.length; i++) if (i != topics) arr.push(mat[i]);\r\n      setData({ ...dataCard, files: arr });\r\n      setTopics(-1);\r\n    }\r\n  }, [tempR]);\r\n\r\n  const HandleSubmit = () => {\r\n    console.log(dataCard);\r\n    addLecture(dataCard, \"ADD\");\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    var key = window.location.pathname;\r\n    key = key.substring(6, key.length);\r\n    editClassKey(key);\r\n\r\n    var option = location.state.task;\r\n    editTask(option);\r\n\r\n    var chapter = location.state.unit;\r\n    editUnit(chapter);\r\n\r\n    var chapterN = location.state.unitN;\r\n    editUnitN(chapterN);\r\n\r\n    const zeroPad = (num, places) => String(num).padStart(places, \"0\");\r\n    var today = new Date();\r\n    var year = today.getFullYear();\r\n    var month = today.getMonth();\r\n    month = zeroPad(month, 2);\r\n    var day = today.getDate();\r\n    day = zeroPad(day, 2);\r\n    var hour = today.getHours();\r\n    hour = zeroPad(hour, 2);\r\n    var min = today.getMinutes();\r\n    min = zeroPad(min, 2);\r\n    var sec = today.getSeconds();\r\n    sec = zeroPad(sec, 2);\r\n    var code = classKey;\r\n    var key =\r\n      code +\r\n      \":\" +\r\n      year +\r\n      \":\" +\r\n      month +\r\n      \":\" +\r\n      day +\r\n      \":\" +\r\n      hour +\r\n      \":\" +\r\n      min +\r\n      \":\" +\r\n      sec;\r\n    setData({ ...dataCard, assignmentKey: key });\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          justifyContent: \"center\",\r\n          fontWeight: \"bold\",\r\n          fontSize: \"35px\",\r\n          color: \"white\",\r\n        }}\r\n      >\r\n        {task === \"ADD\" ? \"POST LECTURE\" : \"EDIT LECTURE\"}\r\n      </div>\r\n      <div\r\n        style={{\r\n          paddingLeft: \"5px\",\r\n          paddingRight: \"5px\",\r\n          paddingTop: \"10px\",\r\n        }}\r\n      >\r\n        <TextField\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          label={\r\n            <div\r\n              style={{\r\n                backgroundColor: \"white\",\r\n                borderRadius: \"10px\",\r\n                padding: \"5px\",\r\n                color: \"blue\",\r\n              }}\r\n            >\r\n              Title\r\n            </div>\r\n          }\r\n          value={dataCard.title}\r\n          onChange={(e) => {\r\n            setValidator({\r\n              ...validator,\r\n              title: e.target.value.length < 2,\r\n            });\r\n            setData({ ...dataCard, title: e.target.value });\r\n          }}\r\n          error={validator.title}\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            width: \"90%\",\r\n            marginBottom: \"15px\",\r\n          }}\r\n        />\r\n        <TextField\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          label={\r\n            <div\r\n              style={{\r\n                backgroundColor: \"white\",\r\n                borderRadius: \"10px\",\r\n                padding: \"5px\",\r\n                color: \"blue\",\r\n              }}\r\n            >\r\n              Unit Number\r\n            </div>\r\n          }\r\n          type=\"number\"\r\n          value={dataCard.unitN}\r\n          onChange={(e) => {\r\n            setValidator({\r\n              ...validator,\r\n              unitN: e.target.value < 1,\r\n            });\r\n            setData({ ...dataCard, unitN: e.target.value });\r\n          }}\r\n          error={validator.unitN}\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            width: \"90%\",\r\n            marginBottom: \"15px\",\r\n          }}\r\n        />\r\n        <TextField\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          label={\r\n            <div\r\n              style={{\r\n                backgroundColor: \"white\",\r\n                borderRadius: \"10px\",\r\n                padding: \"5px\",\r\n                color: \"blue\",\r\n              }}\r\n            >\r\n              Unit Name\r\n            </div>\r\n          }\r\n          value={dataCard.unit}\r\n          onChange={(e) => {\r\n            setValidator({\r\n              ...validator,\r\n              unit: e.target.value.length < 2,\r\n            });\r\n            setData({ ...dataCard, unit: e.target.value });\r\n          }}\r\n          error={validator.unit}\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            width: \"90%\",\r\n            marginBottom: \"15px\",\r\n          }}\r\n        />\r\n        <List style={{ width: \"90%\" }}>\r\n          {dataCard.topics.map((unit, index) => {\r\n            return (\r\n              <ListItem\r\n                style={{\r\n                  backgroundColor: \"rgb(237,237,237,0.5)\",\r\n                  borderRadius: \"10px\",\r\n                  marginBottom: \"10px\",\r\n                  color: \"blue\",\r\n                  fontWeight: \"bold\",\r\n                }}\r\n              >\r\n                <ListItemAvatar>\r\n                  <Avatar>\r\n                    <IconButton\r\n                      style={{\r\n                        backgroundColor: \"white\",\r\n                        color: \"#007FFF\",\r\n                        opacity: \"1\",\r\n                        height: \"100%\",\r\n                        width: \"100%\",\r\n                        border: \"3px solid #007FFF\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      onClick={() => {\r\n                        setTopics(index);\r\n                        changeT(tempT + 1);\r\n                      }}\r\n                    >\r\n                      {unit.imp === 1 ? (\r\n                        <FlareIcon className=\"listIcon\" />\r\n                      ) : (\r\n                        <ChevronRightIcon className=\"listIcon\" />\r\n                      )}\r\n                    </IconButton>\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText primary={unit.topic} />\r\n                <ListItemSecondaryAction edge=\"end\" aria-label=\"delete\">\r\n                  <IconButton\r\n                    style={{ color: \"#007FFF\" }}\r\n                    onClick={() => {\r\n                      setTopics(index);\r\n                      changeD(tempD + 1);\r\n                    }}\r\n                  >\r\n                    <DeleteIcon />\r\n                  </IconButton>\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n            );\r\n          })}\r\n        </List>\r\n        <div style={{ display: \"flex\", width: \"90%\" }}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={topic}\r\n            label={\r\n              <div\r\n                style={{\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: \"10px\",\r\n                  padding: \"5px\",\r\n                  color: \"blue\",\r\n                }}\r\n              >\r\n                Add Topic\r\n              </div>\r\n            }\r\n            onChange={(e) => {\r\n              setValidator({\r\n                ...validator,\r\n                topic: e.target.value.length < 2,\r\n              });\r\n              setTopic(e.target.value);\r\n            }}\r\n            error={validator.topic}\r\n            style={{\r\n              backgroundColor: \"white\",\r\n              marginBottom: \"20px\",\r\n            }}\r\n          />\r\n          <IconButton\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              changeA(tempA + 1);\r\n              setValidator({\r\n                ...validator,\r\n                topic: false,\r\n              });\r\n            }}\r\n          >\r\n            <AddCircleOutlineIcon\r\n              style={{\r\n                backgroundColor: \"white\",\r\n                height: \"35px\",\r\n                width: \"35px\",\r\n                borderRadius: \"18px\",\r\n                alignSelf: \"center\",\r\n                justifySelf: \"center\",\r\n                marginBottom: \"50%\",\r\n              }}\r\n            />\r\n          </IconButton>\r\n        </div>\r\n        <List style={{ width: \"90%\" }}>\r\n          {dataCard.files.map((unit, index) => {\r\n            // console.log(dataCard.files[index]);\r\n            return (\r\n              <ListItem\r\n                style={{\r\n                  backgroundColor: \"rgb(237,237,237,0.3)\",\r\n                  opacity: \"1\",\r\n                  borderRadius: \"10px\",\r\n                  marginBottom: \"10px\",\r\n                  color: \"blue\",\r\n                }}\r\n              >\r\n                <ListItemText>\r\n                  {unit.name != undefined ? unit.name : \"File\"}\r\n                </ListItemText>\r\n                <ListItemSecondaryAction edge=\"end\" aria-label=\"delete\">\r\n                  <IconButton\r\n                    style={{ color: \"#007FFF\" }}\r\n                    onClick={() => {\r\n                      setTopics(index);\r\n                      changeR(tempR + 1);\r\n                    }}\r\n                  >\r\n                    <DeleteIcon />\r\n                  </IconButton>\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n            );\r\n          })}\r\n        </List>\r\n        <div>\r\n          <label style={{ width: \"100%\" }}>\r\n            <input\r\n              style={{ display: \"none\" }}\r\n              type=\"file\"\r\n              onChange={(e) => {\r\n                // const data = new FormData();\r\n                const file = e.target.files[0];\r\n                // data.append(file.name, file);\r\n                addFile(file);\r\n              }}\r\n            />\r\n\r\n            <Button\r\n              color=\"secondary\"\r\n              variant=\"contained\"\r\n              component=\"span\"\r\n              style={{ width: \"90%\", padding: \"10px\", borderRadius: \"10px\" }}\r\n            >\r\n              <b>Add Files</b>\r\n            </Button>\r\n          </label>\r\n        </div>\r\n        <button\r\n          onClick={() => HandleSubmit()}\r\n          style={{\r\n            padding: \"10px\",\r\n            backgroundColor: \"blueviolet\",\r\n            color: \"white\",\r\n            fontWeight: \"bold\",\r\n            width: \"90%\",\r\n            borderRadius: \"10px\",\r\n            marginBottom: \"15px\",\r\n          }}\r\n        >\r\n          {task === \"ADD\" ? \"Create\" : \"Change\"}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClassLectureCard;\r\n","D:\\Web\\digiClass\\client\\src\\components\\classCard\\Cards.js",[],"D:\\Web\\digiClass\\client\\src\\components\\classCard\\Card.js",[],["189","190"],"D:\\Web\\digiClass\\client\\src\\pages\\lecturePage.js",["191","192"],"import React from \"react\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport FlareIcon from \"@material-ui/icons/Flare\";\r\nimport GetAppOutlinedIcon from \"@material-ui/icons/GetAppOutlined\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  Avatar,\r\n  ListItemText,\r\n  IconButton,\r\n  Button,\r\n  ListItemSecondaryAction,\r\n} from \"@material-ui/core\";\r\nimport { getLecture, setCompleted, setBookmark } from \"../api\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nfunction getRandom() {\r\n  return Math.floor((Math.random() * 50 + 1) / 5);\r\n}\r\n\r\nexport default function LecturePage() {\r\n  var backgroundLocation =\r\n    \"/images/background\" + getRandom().toString() + \".jfif\";\r\n\r\n  const location = useLocation();\r\n  const [data, editData] = React.useState({\r\n    completed: false,\r\n    bookmark: false,\r\n    color1: \"red\",\r\n    color2: \"green\",\r\n    title: \"temp\",\r\n    topics: [\r\n      { topic: \"topic1\", imp: 0 },\r\n      { topic: \"topic2\", imp: 1 },\r\n    ],\r\n    files: [{ name: \"file1\" }],\r\n    assignmentKey: \"TEMP000\",\r\n    rollNo: \"19400\",\r\n  });\r\n\r\n  const SetCompleted = async () => {\r\n    var key = window.location.pathname;\r\n    key = key.substring(9, key.length);\r\n    await setCompleted(key, data.rollNo).then((res) => {\r\n      console.log(res);\r\n    });\r\n    editData({ ...data, completed: true });\r\n  };\r\n  const ToggleBookmark = async () => {\r\n    var key = window.location.pathname;\r\n    key = key.substring(9, key.length);\r\n    await setBookmark(key, data.rollNo).then((res) => {\r\n      console.log(res);\r\n    });\r\n    editData({ ...data, bookmark: !data.bookmark });\r\n  };\r\n\r\n  React.useEffect(async () => {\r\n    var key = window.location.pathname;\r\n    key = key.substring(9, key.length);\r\n    editData({ ...data, assignmentKey: key });\r\n    await getLecture({ assignmentKey: key }).then((res) => {\r\n      editData({\r\n        ...data,\r\n        topics: res.data[0].topics,\r\n        files: res.data[0].files,\r\n        title: location.state.title,\r\n        bookmark: location.state.bookmark,\r\n        completed: location.state.completed,\r\n        rollNo: location.state.rollNo,\r\n      });\r\n      console.log(data);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <diV\r\n      style={{\r\n        alignItems: \"center\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        backgroundImage: `url(${backgroundLocation})`,\r\n        backgroundSize: \"cover\",\r\n        backgroundPosition: \"center center\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        height: \"100vh\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          backgroundColor: \"rgb(200,200,200,0.8)\",\r\n          justifyContent: \"center\",\r\n          borderRadius: \"10px\",\r\n          width: \"80vh\",\r\n          marginTop: \"30px\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            alignItems: \"center\",\r\n            width: \"100%\",\r\n            justifyContent: \"center\",\r\n            display: \"flex\",\r\n            fontSize: \"30px\",\r\n            fontWeight: \"600\",\r\n            color: `${data.color1}`,\r\n            textAlign: \"center\",\r\n            textDecoration: \"underline red\",\r\n          }}\r\n        >\r\n          {data.title}\r\n        </div>\r\n        <div\r\n          style={{\r\n            alignItem: \"center\",\r\n            justifyContent: \"center\",\r\n            padding: \"10px\",\r\n            paddingBottom: \"0px\",\r\n          }}\r\n        >\r\n          <List style={{ width: \"100%\" }}>\r\n            {data.topics.map((unit, index) => {\r\n              return (\r\n                <ListItem\r\n                  style={{\r\n                    backgroundColor: \"rgb(237,237,237,0.5)\",\r\n                    borderRadius: \"10px\",\r\n                    marginBottom: \"10px\",\r\n                    color: \"blue\",\r\n                    fontWeight: \"bold\",\r\n                  }}\r\n                >\r\n                  <ListItemAvatar>\r\n                    <Avatar>\r\n                      <IconButton\r\n                        style={{\r\n                          backgroundColor: \"white\",\r\n                          color: \"#007FFF\",\r\n                          opacity: \"1\",\r\n                          height: \"100%\",\r\n                          width: \"100%\",\r\n                          border: \"3px solid #007FFF\",\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                        }}\r\n                      >\r\n                        {unit.imp === 1 ? (\r\n                          <FlareIcon className=\"listIcon\" />\r\n                        ) : (\r\n                          <ChevronRightIcon className=\"listIcon\" />\r\n                        )}\r\n                      </IconButton>\r\n                    </Avatar>\r\n                  </ListItemAvatar>\r\n                  <ListItemText primary={unit.topic} />\r\n                </ListItem>\r\n              );\r\n            })}\r\n          </List>\r\n        </div>\r\n        <div\r\n          style={{\r\n            alignItem: \"center\",\r\n            justifyContent: \"center\",\r\n            paddingRight: \"10px\",\r\n            paddingLeft: \"10px\",\r\n          }}\r\n        >\r\n          <List style={{ width: \"100%\" }}>\r\n            {data.files.map((unit, index) => {\r\n              return (\r\n                <ListItem\r\n                  style={{\r\n                    backgroundColor: \"rgb(237,237,237,0.3)\",\r\n                    opacity: \"1\",\r\n                    borderRadius: \"10px\",\r\n                    marginBottom: \"10px\",\r\n                    color: \"blue\",\r\n                  }}\r\n                >\r\n                  <ListItemText>\r\n                    {unit.name !== undefined ? unit.name : \"File\"}\r\n                  </ListItemText>\r\n                  <ListItemSecondaryAction edge=\"end\" aria-label=\"delete\">\r\n                    <IconButton style={{ color: \"#007FFF\" }} onClick={() => {}}>\r\n                      <GetAppOutlinedIcon />\r\n                    </IconButton>\r\n                  </ListItemSecondaryAction>\r\n                </ListItem>\r\n              );\r\n            })}\r\n          </List>\r\n        </div>\r\n        <div\r\n          style={{\r\n            alignItem: \"center\",\r\n            justifyContent: \"center\",\r\n            padding: \"10px\",\r\n            paddingBottom: \"0px\",\r\n            paddingTop: \"0px\",\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            component=\"span\"\r\n            style={{\r\n              width: \"100%\",\r\n              padding: \"10px\",\r\n              borderRadius: \"10px\",\r\n              paddingBottom: \"10px\",\r\n            }}\r\n            onClick={() => ToggleBookmark()}\r\n          >\r\n            {data.bookmark ? \"Remove Bookmark\" : \"Apply Bookmark\"}\r\n          </Button>\r\n        </div>\r\n        <div\r\n          style={{\r\n            alignItem: \"center\",\r\n            justifyContent: \"center\",\r\n            padding: \"10px\",\r\n            width: \"100%\",\r\n            paddingBottom: \"20px\",\r\n          }}\r\n        >\r\n          {data.completed ? (\r\n            <div\r\n              style={{\r\n                color: \"red\",\r\n                backgroundColor: \"rgb(125,125,125,0.5)\",\r\n                fontWeight: \"bold\",\r\n                borderRadius: \"10px\",\r\n                alignItem: \"center\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <diV>Completed !!!</diV>\r\n            </div>\r\n          ) : (\r\n            <Button\r\n              color=\"secondary\"\r\n              variant=\"contained\"\r\n              component=\"span\"\r\n              style={{\r\n                width: \"100%\",\r\n                padding: \"10px\",\r\n                borderRadius: \"10px\",\r\n              }}\r\n              onClick={() => SetCompleted()}\r\n            >\r\n              Mark Completed\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </diV>\r\n  );\r\n}\r\n","D:\\Web\\digiClass\\client\\src\\pages\\chat.js",["193","194","195","196","197"],"import React from \"react\";\r\nimport { Button, TextField } from \"@material-ui/core\";\r\nimport { sendMessage, getMessage } from \"../api\";\r\n\r\nexport default function ChatPage({\r\n  classKey,\r\n  rollNo,\r\n  headBackgroundColor,\r\n  bodyBackgroundColor,\r\n}) {\r\n  const [chat, editChat] = React.useState(\"\");\r\n  const [send, editSend] = React.useState(0);\r\n  const [anonymous, editAnonymous] = React.useState(false);\r\n  const [messages, editMessages] = React.useState([]);\r\n  const [updated, updateMessage] = React.useState(0);\r\n  const [data, editData] = React.useState({\r\n    rollNo: \"19401\",\r\n    classKey: \"TEST001THEORY\",\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    updateMessage(updated + 1);\r\n  }, []);\r\n  React.useEffect(async () => {\r\n    console.log(bodyBackgroundColor);\r\n    editData({ ...chat, rollNo: rollNo, classKey: classKey });\r\n    await getMessage({ classKey: classKey, rollNo: rollNo }).then((res) => {\r\n      editMessages(res.data);\r\n    });\r\n    console.log(messages);\r\n  }, [updated]);\r\n\r\n  React.useEffect(async () => {\r\n    const zeroPad = (num, places) => String(num).padStart(places, \"0\");\r\n    var today = new Date();\r\n    var year = today.getFullYear();\r\n    var month = today.getMonth();\r\n    month = zeroPad(month, 2);\r\n    var day = today.getDate();\r\n    day = zeroPad(day, 2);\r\n    var hour = today.getHours();\r\n    hour = zeroPad(hour, 2);\r\n    var min = today.getMinutes();\r\n    min = zeroPad(min, 2);\r\n    var sec = today.getSeconds();\r\n    sec = zeroPad(sec, 2);\r\n    var time =\r\n      year + \":\" + month + \":\" + day + \":\" + hour + \":\" + min + \":\" + sec;\r\n    if (send > 0)\r\n      await sendMessage({\r\n        classKey: data.classKey,\r\n        sender: data.rollNo,\r\n        time: time,\r\n        message: chat,\r\n        anonymous: anonymous,\r\n      }).then((e) => console.log(e));\r\n    editChat(\"\");\r\n    updateMessage(updated + 1);\r\n  }, [send]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        alignItems: \"flex-end\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <div>\r\n        {messages.map((unit) => (\r\n          <div\r\n            style={{\r\n              border: `2px solid white`,\r\n              backgroundColor: headBackgroundColor,\r\n              margin: \"5px\",\r\n              borderRadius: \"15px\",\r\n              justifyContent: \"left\",\r\n              display: \"flex\",\r\n              padding: \"10px\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                color: `#FF9800`,\r\n                fontWeight: \"bold\",\r\n                marginRight: \"4px\",\r\n              }}\r\n            >\r\n              <span>{`${unit.sender}:`}</span>\r\n            </div>\r\n\r\n            <diV style={{ color: \"white\" }}>{unit.message}</diV>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          width: \"90%\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"flex-end\",\r\n        }}\r\n      >\r\n        <div>\r\n          <Button\r\n            size=\"large\"\r\n            type=\"submit\"\r\n            // className={classes.button}\r\n            style={{\r\n              border: `3px solid ${bodyBackgroundColor}`,\r\n              backgroundColor: bodyBackgroundColor,\r\n              color: \"white\",\r\n              marginBottom: \"20px\",\r\n              marginRight: \"10px\",\r\n            }}\r\n            onClick={() => {\r\n              editAnonymous(!anonymous);\r\n            }}\r\n          >\r\n            {anonymous ? \"Anonymous\" : `${data.rollNo}`}\r\n          </Button>\r\n        </div>\r\n        <div style={{ width: \"95%\", marginBottom: \"25px\" }}>\r\n          <TextField\r\n            variant=\"standard\"\r\n            name=\"message\"\r\n            fullWidth\r\n            label=\"Message\"\r\n            value={chat}\r\n            onChange={(e) => {\r\n              editChat(e.target.value);\r\n            }}\r\n            error={chat.trim().length > 0 ? false : true}\r\n            style={{ marginTop: \"8px\" }}\r\n            // className={classes.textField}\r\n          />\r\n        </div>\r\n        <div>\r\n          <Button\r\n            size=\"large\"\r\n            type=\"submit\"\r\n            // className={classes.button}\r\n            style={{\r\n              border: `3px solid ${bodyBackgroundColor}`,\r\n              backgroundColor: bodyBackgroundColor,\r\n              color: \"white\",\r\n              marginBottom: \"20px\",\r\n              marginLeft: \"10px\",\r\n            }}\r\n            onClick={() => {\r\n              editSend(send + 1);\r\n            }}\r\n          >\r\n            Send\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","severity":1,"message":"203","line":12,"column":10,"nodeType":"204","messageId":"205","endLine":12,"endColumn":15},{"ruleId":"202","severity":1,"message":"206","line":12,"column":17,"nodeType":"204","messageId":"205","endLine":12,"endColumn":25},{"ruleId":"202","severity":1,"message":"207","line":5,"column":8,"nodeType":"204","messageId":"205","endLine":5,"endColumn":20},{"ruleId":"208","severity":1,"message":"209","line":7,"column":19,"nodeType":"210","endLine":10,"endColumn":4},{"ruleId":"211","severity":1,"message":"212","line":208,"column":13,"nodeType":"213","messageId":"214","endLine":208,"endColumn":23},{"ruleId":"211","severity":1,"message":"212","line":240,"column":15,"nodeType":"213","messageId":"214","endLine":240,"endColumn":25},{"ruleId":"211","severity":1,"message":"212","line":246,"column":15,"nodeType":"213","messageId":"214","endLine":246,"endColumn":25},{"ruleId":"202","severity":1,"message":"215","line":2,"column":10,"nodeType":"204","messageId":"205","endLine":2,"endColumn":21},{"ruleId":"202","severity":1,"message":"216","line":3,"column":36,"nodeType":"204","messageId":"205","endLine":3,"endColumn":45},{"ruleId":"217","severity":1,"message":"218","line":46,"column":12,"nodeType":"219","messageId":"214","endLine":46,"endColumn":14},{"ruleId":"208","severity":1,"message":"209","line":54,"column":19,"nodeType":"210","endLine":86,"endColumn":4},{"ruleId":"208","severity":1,"message":"220","line":86,"column":6,"nodeType":"221","endLine":86,"endColumn":8,"suggestions":"222"},{"ruleId":"202","severity":1,"message":"223","line":1,"column":17,"nodeType":"204","messageId":"205","endLine":1,"endColumn":25},{"ruleId":"208","severity":1,"message":"209","line":7,"column":19,"nodeType":"210","endLine":12,"endColumn":4},{"ruleId":"208","severity":1,"message":"224","line":12,"column":6,"nodeType":"221","endLine":12,"endColumn":8,"suggestions":"225"},{"ruleId":"202","severity":1,"message":"223","line":1,"column":17,"nodeType":"204","messageId":"205","endLine":1,"endColumn":25},{"ruleId":"202","severity":1,"message":"226","line":3,"column":8,"nodeType":"204","messageId":"205","endLine":3,"endColumn":21},{"ruleId":"202","severity":1,"message":"227","line":11,"column":7,"nodeType":"204","messageId":"205","endLine":11,"endColumn":21},{"ruleId":"208","severity":1,"message":"228","line":49,"column":6,"nodeType":"221","endLine":49,"endColumn":14,"suggestions":"229"},{"ruleId":"208","severity":1,"message":"228","line":58,"column":6,"nodeType":"221","endLine":58,"endColumn":15,"suggestions":"230"},{"ruleId":"198","replacedBy":"231"},{"ruleId":"200","replacedBy":"232"},{"ruleId":"202","severity":1,"message":"233","line":1,"column":13,"nodeType":"204","messageId":"205","endLine":1,"endColumn":23},{"ruleId":"202","severity":1,"message":"234","line":19,"column":10,"nodeType":"204","messageId":"205","endLine":19,"endColumn":39},{"ruleId":"202","severity":1,"message":"235","line":20,"column":10,"nodeType":"204","messageId":"205","endLine":20,"endColumn":19},{"ruleId":"236","severity":1,"message":"237","line":21,"column":27,"nodeType":"238","messageId":"214","endLine":21,"endColumn":29},{"ruleId":"217","severity":1,"message":"239","line":62,"column":14,"nodeType":"219","messageId":"214","endLine":62,"endColumn":16},{"ruleId":"208","severity":1,"message":"240","line":63,"column":6,"nodeType":"221","endLine":63,"endColumn":12,"suggestions":"241"},{"ruleId":"208","severity":1,"message":"242","line":72,"column":6,"nodeType":"221","endLine":72,"endColumn":13,"suggestions":"243"},{"ruleId":"217","severity":1,"message":"239","line":78,"column":50,"nodeType":"219","messageId":"214","endLine":78,"endColumn":52},{"ruleId":"208","severity":1,"message":"242","line":82,"column":6,"nodeType":"221","endLine":82,"endColumn":13,"suggestions":"244"},{"ruleId":"208","severity":1,"message":"245","line":91,"column":6,"nodeType":"221","endLine":91,"endColumn":13,"suggestions":"246"},{"ruleId":"208","severity":1,"message":"247","line":99,"column":6,"nodeType":"221","endLine":99,"endColumn":13,"suggestions":"248"},{"ruleId":"217","severity":1,"message":"239","line":105,"column":50,"nodeType":"219","messageId":"214","endLine":105,"endColumn":52},{"ruleId":"208","severity":1,"message":"242","line":109,"column":6,"nodeType":"221","endLine":109,"endColumn":13,"suggestions":"249"},{"ruleId":"250","severity":1,"message":"251","line":144,"column":9,"nodeType":"204","messageId":"252","endLine":144,"endColumn":12},{"ruleId":"208","severity":1,"message":"253","line":159,"column":6,"nodeType":"221","endLine":159,"endColumn":8,"suggestions":"254"},{"ruleId":"217","severity":1,"message":"239","line":391,"column":30,"nodeType":"219","messageId":"214","endLine":391,"endColumn":32},{"ruleId":"198","replacedBy":"255"},{"ruleId":"200","replacedBy":"256"},{"ruleId":"208","severity":1,"message":"209","line":59,"column":19,"nodeType":"210","endLine":75,"endColumn":4},{"ruleId":"208","severity":1,"message":"257","line":75,"column":6,"nodeType":"221","endLine":75,"endColumn":8,"suggestions":"258"},{"ruleId":"208","severity":1,"message":"259","line":23,"column":6,"nodeType":"221","endLine":23,"endColumn":8,"suggestions":"260"},{"ruleId":"208","severity":1,"message":"209","line":24,"column":19,"nodeType":"210","endLine":31,"endColumn":4},{"ruleId":"208","severity":1,"message":"261","line":31,"column":6,"nodeType":"221","endLine":31,"endColumn":15,"suggestions":"262"},{"ruleId":"208","severity":1,"message":"209","line":33,"column":19,"nodeType":"210","endLine":59,"endColumn":4},{"ruleId":"208","severity":1,"message":"263","line":59,"column":6,"nodeType":"221","endLine":59,"endColumn":12,"suggestions":"264"},"no-native-reassign",["265"],"no-negated-in-lhs",["266"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","'dispatch' is assigned a value but never used.","'classReducer' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-dupe-keys","Duplicate key 'paddingTop'.","ObjectExpression","unexpected","'useDispatch' is defined but never used.","'ADD_CLASS' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","React Hook React.useEffect has missing dependencies: 'classCompleted', 'classData', 'classTotal', 'flag', 'location.state.data', and 'rollNo'. Either include them or remove the dependency array. You can also do a functional update 'editData(c => ...)' if you only need 'classData' in the 'editData' call.","ArrayExpression",["267"],"'useState' is defined but never used.","React Hook React.useEffect has missing dependencies: 'lectures' and 'status'. Either include them or remove the dependency array.",["268"],"'ClassRoomCard' is defined but never used.","'subjectTeacher' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'dataCard'. Either include it or remove the dependency array. You can also do a functional update 'setData(d => ...)' if you only need 'dataCard' in the 'setData' call.",["269"],["270"],["265"],["266"],"'actionType' is defined but never used.","'IndeterminateCheckBoxOutlined' is defined but never used.","'useParams' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","Expected '!==' and instead saw '!='.","React Hook React.useEffect has a missing dependency: 'tempF'. Either include it or remove the dependency array. You can also do a functional update 'changeF(t => ...)' if you only need 'tempF' in the 'changeF' call.",["271"],"React Hook React.useEffect has missing dependencies: 'dataCard' and 'topics'. Either include them or remove the dependency array. You can also do a functional update 'setData(d => ...)' if you only need 'dataCard' in the 'setData' call.",["272"],["273"],"React Hook React.useEffect has missing dependencies: 'dataCard' and 'topic'. Either include them or remove the dependency array. You can also do a functional update 'setData(d => ...)' if you only need 'dataCard' in the 'setData' call.",["274"],"React Hook React.useEffect has missing dependencies: 'dataCard.files' and 'file'. Either include them or remove the dependency array.",["275"],["276"],"no-redeclare","'key' is already defined.","redeclared","React Hook React.useEffect has missing dependencies: 'classKey', 'dataCard', 'location.state.task', 'location.state.unit', and 'location.state.unitN'. Either include them or remove the dependency array. You can also do a functional update 'setData(d => ...)' if you only need 'dataCard' in the 'setData' call.",["277"],["265"],["266"],"React Hook React.useEffect has missing dependencies: 'data', 'location.state.bookmark', 'location.state.completed', 'location.state.rollNo', and 'location.state.title'. Either include them or remove the dependency array. You can also do a functional update 'editData(d => ...)' if you only need 'data' in the 'editData' call.",["278"],"React Hook React.useEffect has a missing dependency: 'updated'. Either include it or remove the dependency array. You can also do a functional update 'updateMessage(u => ...)' if you only need 'updated' in the 'updateMessage' call.",["279"],"React Hook React.useEffect has missing dependencies: 'bodyBackgroundColor', 'chat', 'classKey', 'messages', and 'rollNo'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'editData' needs the current value of 'chat'.",["280"],"React Hook React.useEffect has missing dependencies: 'anonymous', 'chat', 'data.classKey', 'data.rollNo', and 'updated'. Either include them or remove the dependency array. You can also do a functional update 'updateMessage(u => ...)' if you only need 'updated' in the 'updateMessage' call.",["281"],"no-global-assign","no-unsafe-negation",{"desc":"282","fix":"283"},{"desc":"284","fix":"285"},{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},{"desc":"290","fix":"291"},{"desc":"292","fix":"293"},{"desc":"294","fix":"295"},{"desc":"296","fix":"297"},{"desc":"298","fix":"299"},{"desc":"300","fix":"301"},{"desc":"302","fix":"303"},{"desc":"304","fix":"305"},{"desc":"306","fix":"307"},{"desc":"308","fix":"309"},{"desc":"310","fix":"311"},"Update the dependencies array to be: [classCompleted, classData, classTotal, flag, location.state.data, rollNo]",{"range":"312","text":"313"},"Update the dependencies array to be: [lectures, status]",{"range":"314","text":"315"},"Update the dependencies array to be: [dataCard, update]",{"range":"316","text":"317"},"Update the dependencies array to be: [correct, dataCard]",{"range":"318","text":"319"},"Update the dependencies array to be: [file, tempF]",{"range":"320","text":"321"},"Update the dependencies array to be: [dataCard, tempT, topics]",{"range":"322","text":"323"},"Update the dependencies array to be: [dataCard, tempD, topics]",{"range":"324","text":"325"},"Update the dependencies array to be: [dataCard, tempA, topic]",{"range":"326","text":"327"},"Update the dependencies array to be: [dataCard.files, file, tempF]",{"range":"328","text":"329"},"Update the dependencies array to be: [dataCard, tempR, topics]",{"range":"330","text":"331"},"Update the dependencies array to be: [classKey, dataCard, location.state.task, location.state.unit, location.state.unitN]",{"range":"332","text":"333"},"Update the dependencies array to be: [data, location.state.bookmark, location.state.completed, location.state.rollNo, location.state.title]",{"range":"334","text":"335"},"Update the dependencies array to be: [updated]",{"range":"336","text":"337"},"Update the dependencies array to be: [bodyBackgroundColor, chat, classKey, messages, rollNo, updated]",{"range":"338","text":"339"},"Update the dependencies array to be: [anonymous, chat, data.classKey, data.rollNo, send, updated]",{"range":"340","text":"341"},[3060,3062],"[classCompleted, classData, classTotal, flag, location.state.data, rollNo]",[467,469],"[lectures, status]",[1302,1310],"[dataCard, update]",[1504,1513],"[correct, dataCard]",[1752,1758],"[file, tempF]",[2003,2010],"[dataCard, tempT, topics]",[2283,2290],"[dataCard, tempD, topics]",[2504,2511],"[dataCard, tempA, topic]",[2660,2667],"[dataCard.files, file, tempF]",[2938,2945],"[dataCard, tempR, topics]",[4114,4116],"[classKey, dataCard, location.state.task, location.state.unit, location.state.unitN]",[2172,2174],"[data, location.state.bookmark, location.state.completed, location.state.rollNo, location.state.title]",[691,693],"[updated]",[984,993],"[bodyBackgroundColor, chat, classKey, messages, rollNo, updated]",[1862,1868],"[anonymous, chat, data.classKey, data.rollNo, send, updated]"]